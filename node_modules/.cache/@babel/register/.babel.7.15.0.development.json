{
  "{\"assumptions\":{},\"sourceRoot\":\"/home/aishwarya.gaud/Documents/wrk/test/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"filename\":\"/home/aishwarya.gaud/Documents/wrk/test/routes/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/aishwarya.gaud/Documents/wrk/test",
      "filename": "/home/aishwarya.gaud/Documents/wrk/test/routes/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/aishwarya.gaud/Documents/wrk/test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/aishwarya.gaud/Documents/wrk/test/routes/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/aishwarya.gaud/Documents/wrk/test/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/routes/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n/* GET home page. */\n\nrouter.get('/', function (req, res, next) {\n  res.render('index', {\n    title: 'Express'\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwibmV4dCIsInJlbmRlciIsInRpdGxlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFDQSxJQUFJQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFiO0FBRUE7O0FBQ0FELE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLEdBQVgsRUFBZ0IsVUFBU0MsR0FBVCxFQUFjQyxHQUFkLEVBQW1CQyxJQUFuQixFQUF5QjtBQUN2Q0QsRUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQVcsT0FBWCxFQUFvQjtBQUFFQyxJQUFBQSxLQUFLLEVBQUU7QUFBVCxHQUFwQjtBQUNELENBRkQ7QUFJQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVCxNQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9haXNod2FyeWEuZ2F1ZC9Eb2N1bWVudHMvd3JrL3Rlc3Qvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xudmFyIHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbi8qIEdFVCBob21lIHBhZ2UuICovXG5yb3V0ZXIuZ2V0KCcvJywgZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgcmVzLnJlbmRlcignaW5kZXgnLCB7IHRpdGxlOiAnRXhwcmVzcycgfSk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "next",
        "render",
        "title",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;AAEA;;AACAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACvCD,EAAAA,GAAG,CAACE,MAAJ,CAAW,OAAX,EAAoB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAApB;AACD,CAFD;AAIAC,MAAM,CAACC,OAAP,GAAiBT,MAAjB",
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/routes/",
      "sourcesContent": [
        "var express = require('express');\nvar router = express.Router();\n\n/* GET home page. */\nrouter.get('/', function(req, res, next) {\n  res.render('index', { title: 'Express' });\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1630138600000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/aishwarya.gaud/Documents/wrk/test/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"filename\":\"/home/aishwarya.gaud/Documents/wrk/test/routes/users.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/aishwarya.gaud/Documents/wrk/test",
      "filename": "/home/aishwarya.gaud/Documents/wrk/test/routes/users.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/aishwarya.gaud/Documents/wrk/test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/aishwarya.gaud/Documents/wrk/test/routes/users.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/aishwarya.gaud/Documents/wrk/test/routes/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/routes/",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n/* GET users listing. */\n\nrouter.get('/', function (req, res, next) {\n  res.send('respond with a resource');\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwibmV4dCIsInNlbmQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXJCOztBQUNBLElBQUlDLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWI7QUFFQTs7QUFDQUQsTUFBTSxDQUFDRSxHQUFQLENBQVcsR0FBWCxFQUFnQixVQUFTQyxHQUFULEVBQWNDLEdBQWQsRUFBbUJDLElBQW5CLEVBQXlCO0FBQ3ZDRCxFQUFBQSxHQUFHLENBQUNFLElBQUosQ0FBUyx5QkFBVDtBQUNELENBRkQ7QUFJQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCUixNQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9haXNod2FyeWEuZ2F1ZC9Eb2N1bWVudHMvd3JrL3Rlc3Qvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xudmFyIHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbi8qIEdFVCB1c2VycyBsaXN0aW5nLiAqL1xucm91dGVyLmdldCgnLycsIGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XG4gIHJlcy5zZW5kKCdyZXNwb25kIHdpdGggYSByZXNvdXJjZScpO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "next",
        "send",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;AAEA;;AACAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACvCD,EAAAA,GAAG,CAACE,IAAJ,CAAS,yBAAT;AACD,CAFD;AAIAC,MAAM,CAACC,OAAP,GAAiBR,MAAjB",
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/routes/",
      "sourcesContent": [
        "var express = require('express');\nvar router = express.Router();\n\n/* GET users listing. */\nrouter.get('/', function(req, res, next) {\n  res.send('respond with a resource');\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1630138600000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/aishwarya.gaud/Documents/wrk/test/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"filename\":\"/home/aishwarya.gaud/Documents/wrk/test/routes/jobs.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/aishwarya.gaud/Documents/wrk/test",
      "filename": "/home/aishwarya.gaud/Documents/wrk/test/routes/jobs.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/aishwarya.gaud/Documents/wrk/test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/aishwarya.gaud/Documents/wrk/test/routes/jobs.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/aishwarya.gaud/Documents/wrk/test/routes/jobs.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/routes/",
        "sourceFileName": "jobs.js"
      }
    },
    "ast": null,
    "code": "const express = require(\"express\");\n\nconst router = express.Router();\n\nconst controller = require(\"../controller/controller\");\n\nrouter.post(\"/new\", controller.createJob);\nrouter.get(\"/file/:fileName\", controller.getJob);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpvYnMuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJjb250cm9sbGVyIiwicG9zdCIsImNyZWF0ZUpvYiIsImdldCIsImdldEpvYiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjs7QUFDQSxNQUFNQyxVQUFVLEdBQUdILE9BQU8sQ0FBQywwQkFBRCxDQUExQjs7QUFFQUMsTUFBTSxDQUFDRyxJQUFQLENBQVksTUFBWixFQUFvQkQsVUFBVSxDQUFDRSxTQUEvQjtBQUNBSixNQUFNLENBQUNLLEdBQVAsQ0FBVyxpQkFBWCxFQUE4QkgsVUFBVSxDQUFDSSxNQUF6QztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJSLE1BQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2Fpc2h3YXJ5YS5nYXVkL0RvY3VtZW50cy93cmsvdGVzdC9yb3V0ZXMvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbmNvbnN0IGNvbnRyb2xsZXIgPSByZXF1aXJlKFwiLi4vY29udHJvbGxlci9jb250cm9sbGVyXCIpO1xuXG5yb3V0ZXIucG9zdChcIi9uZXdcIiwgY29udHJvbGxlci5jcmVhdGVKb2IpO1xucm91dGVyLmdldChcIi9maWxlLzpmaWxlTmFtZVwiLCBjb250cm9sbGVyLmdldEpvYik7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "jobs.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "controller",
        "post",
        "createJob",
        "get",
        "getJob",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AACA,MAAMC,UAAU,GAAGH,OAAO,CAAC,0BAAD,CAA1B;;AAEAC,MAAM,CAACG,IAAP,CAAY,MAAZ,EAAoBD,UAAU,CAACE,SAA/B;AACAJ,MAAM,CAACK,GAAP,CAAW,iBAAX,EAA8BH,UAAU,CAACI,MAAzC;AAEAC,MAAM,CAACC,OAAP,GAAiBR,MAAjB",
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/routes/",
      "sourcesContent": [
        "const express = require(\"express\");\nconst router = express.Router();\nconst controller = require(\"../controller/controller\");\n\nrouter.post(\"/new\", controller.createJob);\nrouter.get(\"/file/:fileName\", controller.getJob);\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1630166792000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/aishwarya.gaud/Documents/wrk/test/controller/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"filename\":\"/home/aishwarya.gaud/Documents/wrk/test/controller/controller.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/controller/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/aishwarya.gaud/Documents/wrk/test",
      "filename": "/home/aishwarya.gaud/Documents/wrk/test/controller/controller.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/aishwarya.gaud/Documents/wrk/test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/aishwarya.gaud/Documents/wrk/test/controller/controller.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/aishwarya.gaud/Documents/wrk/test/controller/controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/controller/",
        "sourceFileName": "controller.js"
      }
    },
    "ast": null,
    "code": "const ytdl = require(\"ytdl-core\");\n\nconst service = require(\"../service/service\");\n\nconst jobsCtrl = {\n  async createJob(req, res) {\n    try {\n      const url = req.body.url;\n      const isValidUrl = ytdl.validateURL(url);\n\n      if (!isValidUrl) {\n        res.status(400);\n        return res.send({\n          error: \"invalid URL\"\n        });\n      }\n\n      const job = await service.createJobInQueue(url);\n      return res.send(job);\n    } catch (ex) {\n      console.log(ex);\n      res.status(400);\n      return res.send(ex);\n    }\n  },\n\n  async getJob(req, res) {\n    try {\n      const fileName = req.params.fileName;\n      const file = await service.getJob(fileName);\n      res.download(file);\n    } catch (ex) {\n      console.log(ex);\n      res.status(400);\n      return res.send(ex);\n    }\n  }\n\n};\nmodule.exports = {\n  createJob: jobsCtrl.createJob,\n  getJob: jobsCtrl.getJob\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsieXRkbCIsInJlcXVpcmUiLCJzZXJ2aWNlIiwiam9ic0N0cmwiLCJjcmVhdGVKb2IiLCJyZXEiLCJyZXMiLCJ1cmwiLCJib2R5IiwiaXNWYWxpZFVybCIsInZhbGlkYXRlVVJMIiwic3RhdHVzIiwic2VuZCIsImVycm9yIiwiam9iIiwiY3JlYXRlSm9iSW5RdWV1ZSIsImV4IiwiY29uc29sZSIsImxvZyIsImdldEpvYiIsImZpbGVOYW1lIiwicGFyYW1zIiwiZmlsZSIsImRvd25sb2FkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUFwQjs7QUFDQSxNQUFNQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxvQkFBRCxDQUF2Qjs7QUFFQSxNQUFNRSxRQUFRLEdBQUc7QUFDZixRQUFNQyxTQUFOLENBQWdCQyxHQUFoQixFQUFxQkMsR0FBckIsRUFBMEI7QUFDeEIsUUFBSTtBQUNGLFlBQU1DLEdBQUcsR0FBR0YsR0FBRyxDQUFDRyxJQUFKLENBQVNELEdBQXJCO0FBQ0EsWUFBTUUsVUFBVSxHQUFHVCxJQUFJLENBQUNVLFdBQUwsQ0FBaUJILEdBQWpCLENBQW5COztBQUNBLFVBQUksQ0FBQ0UsVUFBTCxFQUFpQjtBQUNmSCxRQUFBQSxHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYO0FBQ0EsZUFBT0wsR0FBRyxDQUFDTSxJQUFKLENBQVM7QUFBRUMsVUFBQUEsS0FBSyxFQUFFO0FBQVQsU0FBVCxDQUFQO0FBQ0Q7O0FBQ0QsWUFBTUMsR0FBRyxHQUFHLE1BQU1aLE9BQU8sQ0FBQ2EsZ0JBQVIsQ0FBeUJSLEdBQXpCLENBQWxCO0FBQ0EsYUFBT0QsR0FBRyxDQUFDTSxJQUFKLENBQVNFLEdBQVQsQ0FBUDtBQUNELEtBVEQsQ0FTRSxPQUFPRSxFQUFQLEVBQVc7QUFDWEMsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLEVBQVo7QUFDQVYsTUFBQUEsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWDtBQUNBLGFBQU9MLEdBQUcsQ0FBQ00sSUFBSixDQUFTSSxFQUFULENBQVA7QUFDRDtBQUNGLEdBaEJjOztBQWlCZixRQUFNRyxNQUFOLENBQWFkLEdBQWIsRUFBa0JDLEdBQWxCLEVBQXVCO0FBQ3JCLFFBQUk7QUFDRixZQUFNYyxRQUFRLEdBQUdmLEdBQUcsQ0FBQ2dCLE1BQUosQ0FBV0QsUUFBNUI7QUFDQSxZQUFNRSxJQUFJLEdBQUcsTUFBTXBCLE9BQU8sQ0FBQ2lCLE1BQVIsQ0FBZUMsUUFBZixDQUFuQjtBQUNBZCxNQUFBQSxHQUFHLENBQUNpQixRQUFKLENBQWFELElBQWI7QUFDRCxLQUpELENBSUUsT0FBT04sRUFBUCxFQUFXO0FBQ1hDLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixFQUFaO0FBQ0FWLE1BQUFBLEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVg7QUFDQSxhQUFPTCxHQUFHLENBQUNNLElBQUosQ0FBU0ksRUFBVCxDQUFQO0FBQ0Q7QUFDRjs7QUEzQmMsQ0FBakI7QUE4QkFRLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmckIsRUFBQUEsU0FBUyxFQUFFRCxRQUFRLENBQUNDLFNBREw7QUFFZmUsRUFBQUEsTUFBTSxFQUFFaEIsUUFBUSxDQUFDZ0I7QUFGRixDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9haXNod2FyeWEuZ2F1ZC9Eb2N1bWVudHMvd3JrL3Rlc3QvY29udHJvbGxlci8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB5dGRsID0gcmVxdWlyZShcInl0ZGwtY29yZVwiKTtcbmNvbnN0IHNlcnZpY2UgPSByZXF1aXJlKFwiLi4vc2VydmljZS9zZXJ2aWNlXCIpO1xuXG5jb25zdCBqb2JzQ3RybCA9IHtcbiAgYXN5bmMgY3JlYXRlSm9iKHJlcSwgcmVzKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHVybCA9IHJlcS5ib2R5LnVybDtcbiAgICAgIGNvbnN0IGlzVmFsaWRVcmwgPSB5dGRsLnZhbGlkYXRlVVJMKHVybCk7XG4gICAgICBpZiAoIWlzVmFsaWRVcmwpIHtcbiAgICAgICAgcmVzLnN0YXR1cyg0MDApO1xuICAgICAgICByZXR1cm4gcmVzLnNlbmQoeyBlcnJvcjogXCJpbnZhbGlkIFVSTFwiIH0pO1xuICAgICAgfVxuICAgICAgY29uc3Qgam9iID0gYXdhaXQgc2VydmljZS5jcmVhdGVKb2JJblF1ZXVlKHVybCk7XG4gICAgICByZXR1cm4gcmVzLnNlbmQoam9iKTtcbiAgICB9IGNhdGNoIChleCkge1xuICAgICAgY29uc29sZS5sb2coZXgpO1xuICAgICAgcmVzLnN0YXR1cyg0MDApO1xuICAgICAgcmV0dXJuIHJlcy5zZW5kKGV4KTtcbiAgICB9XG4gIH0sXG4gIGFzeW5jIGdldEpvYihyZXEsIHJlcykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBmaWxlTmFtZSA9IHJlcS5wYXJhbXMuZmlsZU5hbWU7XG4gICAgICBjb25zdCBmaWxlID0gYXdhaXQgc2VydmljZS5nZXRKb2IoZmlsZU5hbWUpO1xuICAgICAgcmVzLmRvd25sb2FkKGZpbGUpO1xuICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICBjb25zb2xlLmxvZyhleCk7XG4gICAgICByZXMuc3RhdHVzKDQwMCk7XG4gICAgICByZXR1cm4gcmVzLnNlbmQoZXgpO1xuICAgIH1cbiAgfSxcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBjcmVhdGVKb2I6IGpvYnNDdHJsLmNyZWF0ZUpvYixcbiAgZ2V0Sm9iOiBqb2JzQ3RybC5nZXRKb2IsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "controller.js"
      ],
      "names": [
        "ytdl",
        "require",
        "service",
        "jobsCtrl",
        "createJob",
        "req",
        "res",
        "url",
        "body",
        "isValidUrl",
        "validateURL",
        "status",
        "send",
        "error",
        "job",
        "createJobInQueue",
        "ex",
        "console",
        "log",
        "getJob",
        "fileName",
        "params",
        "file",
        "download",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,WAAD,CAApB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,oBAAD,CAAvB;;AAEA,MAAME,QAAQ,GAAG;AACf,QAAMC,SAAN,CAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AACxB,QAAI;AACF,YAAMC,GAAG,GAAGF,GAAG,CAACG,IAAJ,CAASD,GAArB;AACA,YAAME,UAAU,GAAGT,IAAI,CAACU,WAAL,CAAiBH,GAAjB,CAAnB;;AACA,UAAI,CAACE,UAAL,EAAiB;AACfH,QAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX;AACA,eAAOL,GAAG,CAACM,IAAJ,CAAS;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAT,CAAP;AACD;;AACD,YAAMC,GAAG,GAAG,MAAMZ,OAAO,CAACa,gBAAR,CAAyBR,GAAzB,CAAlB;AACA,aAAOD,GAAG,CAACM,IAAJ,CAASE,GAAT,CAAP;AACD,KATD,CASE,OAAOE,EAAP,EAAW;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACAV,MAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX;AACA,aAAOL,GAAG,CAACM,IAAJ,CAASI,EAAT,CAAP;AACD;AACF,GAhBc;;AAiBf,QAAMG,MAAN,CAAad,GAAb,EAAkBC,GAAlB,EAAuB;AACrB,QAAI;AACF,YAAMc,QAAQ,GAAGf,GAAG,CAACgB,MAAJ,CAAWD,QAA5B;AACA,YAAME,IAAI,GAAG,MAAMpB,OAAO,CAACiB,MAAR,CAAeC,QAAf,CAAnB;AACAd,MAAAA,GAAG,CAACiB,QAAJ,CAAaD,IAAb;AACD,KAJD,CAIE,OAAON,EAAP,EAAW;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACAV,MAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX;AACA,aAAOL,GAAG,CAACM,IAAJ,CAASI,EAAT,CAAP;AACD;AACF;;AA3Bc,CAAjB;AA8BAQ,MAAM,CAACC,OAAP,GAAiB;AACfrB,EAAAA,SAAS,EAAED,QAAQ,CAACC,SADL;AAEfe,EAAAA,MAAM,EAAEhB,QAAQ,CAACgB;AAFF,CAAjB",
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/controller/",
      "sourcesContent": [
        "const ytdl = require(\"ytdl-core\");\nconst service = require(\"../service/service\");\n\nconst jobsCtrl = {\n  async createJob(req, res) {\n    try {\n      const url = req.body.url;\n      const isValidUrl = ytdl.validateURL(url);\n      if (!isValidUrl) {\n        res.status(400);\n        return res.send({ error: \"invalid URL\" });\n      }\n      const job = await service.createJobInQueue(url);\n      return res.send(job);\n    } catch (ex) {\n      console.log(ex);\n      res.status(400);\n      return res.send(ex);\n    }\n  },\n  async getJob(req, res) {\n    try {\n      const fileName = req.params.fileName;\n      const file = await service.getJob(fileName);\n      res.download(file);\n    } catch (ex) {\n      console.log(ex);\n      res.status(400);\n      return res.send(ex);\n    }\n  },\n};\n\nmodule.exports = {\n  createJob: jobsCtrl.createJob,\n  getJob: jobsCtrl.getJob,\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1630166865000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/aishwarya.gaud/Documents/wrk/test/service/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"filename\":\"/home/aishwarya.gaud/Documents/wrk/test/service/service.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/service/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/aishwarya.gaud/Documents/wrk/test",
      "filename": "/home/aishwarya.gaud/Documents/wrk/test/service/service.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/aishwarya.gaud/Documents/wrk/test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/aishwarya.gaud/Documents/wrk/test/service/service.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/aishwarya.gaud/Documents/wrk/test/service/service.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/service/",
        "sourceFileName": "service.js"
      }
    },
    "ast": null,
    "code": "const dbInterface = require(\"../interface/db-interface\");\n\nconst {\n  createVideoQueue\n} = require(\"../queue/video\");\n\nconst path = require(\"path\");\n\nconst folderName = \"files\";\nconst jobsService = {\n  async createJobInQueue(url) {\n    try {\n      const inputData = {\n        url,\n        status: \"started\"\n      };\n      const job = await dbInterface.createRecord(inputData);\n      await createVideoQueue().add({\n        url,\n        id: job.id\n      });\n      return job;\n    } catch (ex) {\n      console.log(ex);\n      throw {\n        error: ex\n      };\n    }\n  },\n\n  async getJob(fileName) {\n    try {\n      const filePath = `../${folderName}/${fileName}`;\n      const file = path.resolve(__dirname, filePath);\n      return file;\n    } catch (ex) {\n      console.log(ex);\n      throw {\n        error: ex\n      };\n    }\n  }\n\n};\nmodule.exports = {\n  createJobInQueue: jobsService.createJobInQueue,\n  getJob: jobsService.getJob\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2UuanMiXSwibmFtZXMiOlsiZGJJbnRlcmZhY2UiLCJyZXF1aXJlIiwiY3JlYXRlVmlkZW9RdWV1ZSIsInBhdGgiLCJmb2xkZXJOYW1lIiwiam9ic1NlcnZpY2UiLCJjcmVhdGVKb2JJblF1ZXVlIiwidXJsIiwiaW5wdXREYXRhIiwic3RhdHVzIiwiam9iIiwiY3JlYXRlUmVjb3JkIiwiYWRkIiwiaWQiLCJleCIsImNvbnNvbGUiLCJsb2ciLCJlcnJvciIsImdldEpvYiIsImZpbGVOYW1lIiwiZmlsZVBhdGgiLCJmaWxlIiwicmVzb2x2ZSIsIl9fZGlybmFtZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFdBQVcsR0FBR0MsT0FBTyxDQUFDLDJCQUFELENBQTNCOztBQUNBLE1BQU07QUFBRUMsRUFBQUE7QUFBRixJQUF1QkQsT0FBTyxDQUFDLGdCQUFELENBQXBDOztBQUNBLE1BQU1FLElBQUksR0FBR0YsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTUcsVUFBVSxHQUFHLE9BQW5CO0FBRUEsTUFBTUMsV0FBVyxHQUFHO0FBQ2xCLFFBQU1DLGdCQUFOLENBQXVCQyxHQUF2QixFQUE0QjtBQUMxQixRQUFJO0FBQ0YsWUFBTUMsU0FBUyxHQUFHO0FBQ2hCRCxRQUFBQSxHQURnQjtBQUVoQkUsUUFBQUEsTUFBTSxFQUFFO0FBRlEsT0FBbEI7QUFJQSxZQUFNQyxHQUFHLEdBQUcsTUFBTVYsV0FBVyxDQUFDVyxZQUFaLENBQXlCSCxTQUF6QixDQUFsQjtBQUNBLFlBQU1OLGdCQUFnQixHQUFHVSxHQUFuQixDQUF1QjtBQUFFTCxRQUFBQSxHQUFGO0FBQU9NLFFBQUFBLEVBQUUsRUFBRUgsR0FBRyxDQUFDRztBQUFmLE9BQXZCLENBQU47QUFDQSxhQUFPSCxHQUFQO0FBQ0QsS0FSRCxDQVFFLE9BQU9JLEVBQVAsRUFBVztBQUNYQyxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsRUFBWjtBQUNBLFlBQU07QUFBRUcsUUFBQUEsS0FBSyxFQUFFSDtBQUFULE9BQU47QUFDRDtBQUNGLEdBZGlCOztBQWVsQixRQUFNSSxNQUFOLENBQWFDLFFBQWIsRUFBdUI7QUFDckIsUUFBSTtBQUNGLFlBQU1DLFFBQVEsR0FBSSxNQUFLaEIsVUFBVyxJQUFHZSxRQUFTLEVBQTlDO0FBQ0EsWUFBTUUsSUFBSSxHQUFHbEIsSUFBSSxDQUFDbUIsT0FBTCxDQUFhQyxTQUFiLEVBQXdCSCxRQUF4QixDQUFiO0FBQ0EsYUFBT0MsSUFBUDtBQUNELEtBSkQsQ0FJRSxPQUFPUCxFQUFQLEVBQVc7QUFDWEMsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLEVBQVo7QUFDQSxZQUFNO0FBQUVHLFFBQUFBLEtBQUssRUFBRUg7QUFBVCxPQUFOO0FBQ0Q7QUFDRjs7QUF4QmlCLENBQXBCO0FBMkJBVSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZm5CLEVBQUFBLGdCQUFnQixFQUFFRCxXQUFXLENBQUNDLGdCQURmO0FBRWZZLEVBQUFBLE1BQU0sRUFBRWIsV0FBVyxDQUFDYTtBQUZMLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2Fpc2h3YXJ5YS5nYXVkL0RvY3VtZW50cy93cmsvdGVzdC9zZXJ2aWNlLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGRiSW50ZXJmYWNlID0gcmVxdWlyZShcIi4uL2ludGVyZmFjZS9kYi1pbnRlcmZhY2VcIik7XG5jb25zdCB7IGNyZWF0ZVZpZGVvUXVldWUgfSA9IHJlcXVpcmUoXCIuLi9xdWV1ZS92aWRlb1wiKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKFwicGF0aFwiKTtcbmNvbnN0IGZvbGRlck5hbWUgPSBcImZpbGVzXCI7XG5cbmNvbnN0IGpvYnNTZXJ2aWNlID0ge1xuICBhc3luYyBjcmVhdGVKb2JJblF1ZXVlKHVybCkge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBpbnB1dERhdGEgPSB7XG4gICAgICAgIHVybCxcbiAgICAgICAgc3RhdHVzOiBcInN0YXJ0ZWRcIixcbiAgICAgIH07XG4gICAgICBjb25zdCBqb2IgPSBhd2FpdCBkYkludGVyZmFjZS5jcmVhdGVSZWNvcmQoaW5wdXREYXRhKTtcbiAgICAgIGF3YWl0IGNyZWF0ZVZpZGVvUXVldWUoKS5hZGQoeyB1cmwsIGlkOiBqb2IuaWQgfSk7XG4gICAgICByZXR1cm4gam9iO1xuICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICBjb25zb2xlLmxvZyhleCk7XG4gICAgICB0aHJvdyB7IGVycm9yOiBleCB9O1xuICAgIH1cbiAgfSxcbiAgYXN5bmMgZ2V0Sm9iKGZpbGVOYW1lKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGZpbGVQYXRoID0gYC4uLyR7Zm9sZGVyTmFtZX0vJHtmaWxlTmFtZX1gO1xuICAgICAgY29uc3QgZmlsZSA9IHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUsIGZpbGVQYXRoKTtcbiAgICAgIHJldHVybiBmaWxlO1xuICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICBjb25zb2xlLmxvZyhleCk7XG4gICAgICB0aHJvdyB7IGVycm9yOiBleCB9O1xuICAgIH1cbiAgfSxcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBjcmVhdGVKb2JJblF1ZXVlOiBqb2JzU2VydmljZS5jcmVhdGVKb2JJblF1ZXVlLFxuICBnZXRKb2I6IGpvYnNTZXJ2aWNlLmdldEpvYixcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "service.js"
      ],
      "names": [
        "dbInterface",
        "require",
        "createVideoQueue",
        "path",
        "folderName",
        "jobsService",
        "createJobInQueue",
        "url",
        "inputData",
        "status",
        "job",
        "createRecord",
        "add",
        "id",
        "ex",
        "console",
        "log",
        "error",
        "getJob",
        "fileName",
        "filePath",
        "file",
        "resolve",
        "__dirname",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,WAAW,GAAGC,OAAO,CAAC,2BAAD,CAA3B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAuBD,OAAO,CAAC,gBAAD,CAApC;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMG,UAAU,GAAG,OAAnB;AAEA,MAAMC,WAAW,GAAG;AAClB,QAAMC,gBAAN,CAAuBC,GAAvB,EAA4B;AAC1B,QAAI;AACF,YAAMC,SAAS,GAAG;AAChBD,QAAAA,GADgB;AAEhBE,QAAAA,MAAM,EAAE;AAFQ,OAAlB;AAIA,YAAMC,GAAG,GAAG,MAAMV,WAAW,CAACW,YAAZ,CAAyBH,SAAzB,CAAlB;AACA,YAAMN,gBAAgB,GAAGU,GAAnB,CAAuB;AAAEL,QAAAA,GAAF;AAAOM,QAAAA,EAAE,EAAEH,GAAG,CAACG;AAAf,OAAvB,CAAN;AACA,aAAOH,GAAP;AACD,KARD,CAQE,OAAOI,EAAP,EAAW;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACA,YAAM;AAAEG,QAAAA,KAAK,EAAEH;AAAT,OAAN;AACD;AACF,GAdiB;;AAelB,QAAMI,MAAN,CAAaC,QAAb,EAAuB;AACrB,QAAI;AACF,YAAMC,QAAQ,GAAI,MAAKhB,UAAW,IAAGe,QAAS,EAA9C;AACA,YAAME,IAAI,GAAGlB,IAAI,CAACmB,OAAL,CAAaC,SAAb,EAAwBH,QAAxB,CAAb;AACA,aAAOC,IAAP;AACD,KAJD,CAIE,OAAOP,EAAP,EAAW;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACA,YAAM;AAAEG,QAAAA,KAAK,EAAEH;AAAT,OAAN;AACD;AACF;;AAxBiB,CAApB;AA2BAU,MAAM,CAACC,OAAP,GAAiB;AACfnB,EAAAA,gBAAgB,EAAED,WAAW,CAACC,gBADf;AAEfY,EAAAA,MAAM,EAAEb,WAAW,CAACa;AAFL,CAAjB",
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/service/",
      "sourcesContent": [
        "const dbInterface = require(\"../interface/db-interface\");\nconst { createVideoQueue } = require(\"../queue/video\");\nconst path = require(\"path\");\nconst folderName = \"files\";\n\nconst jobsService = {\n  async createJobInQueue(url) {\n    try {\n      const inputData = {\n        url,\n        status: \"started\",\n      };\n      const job = await dbInterface.createRecord(inputData);\n      await createVideoQueue().add({ url, id: job.id });\n      return job;\n    } catch (ex) {\n      console.log(ex);\n      throw { error: ex };\n    }\n  },\n  async getJob(fileName) {\n    try {\n      const filePath = `../${folderName}/${fileName}`;\n      const file = path.resolve(__dirname, filePath);\n      return file;\n    } catch (ex) {\n      console.log(ex);\n      throw { error: ex };\n    }\n  },\n};\n\nmodule.exports = {\n  createJobInQueue: jobsService.createJobInQueue,\n  getJob: jobsService.getJob,\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1630166900000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/aishwarya.gaud/Documents/wrk/test/interface/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"filename\":\"/home/aishwarya.gaud/Documents/wrk/test/interface/db-interface.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/interface/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/aishwarya.gaud/Documents/wrk/test",
      "filename": "/home/aishwarya.gaud/Documents/wrk/test/interface/db-interface.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/aishwarya.gaud/Documents/wrk/test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/aishwarya.gaud/Documents/wrk/test/interface/db-interface.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/aishwarya.gaud/Documents/wrk/test/interface/db-interface.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/interface/",
        "sourceFileName": "db-interface.js"
      }
    },
    "ast": null,
    "code": "module.exports = {\n  createOrUpdateRecord: async (model, condition, params) => {\n    try {\n      const result = await model.findOneAndUpdate(condition, params, {\n        new: true,\n        upsert: true,\n        rawResult: true // Return the raw result from the MongoDB driver\n\n      }); //console.log(\" result :\", result);\n\n      return {\n        status: true,\n        statusCode: 200,\n        data: result && result[\"value\"] ? result[\"value\"] : {},\n        message: \"Record updated successfully\"\n      };\n    } catch (err) {\n      return {\n        status: false,\n        statusCode: 409,\n        data: {},\n        name: err.name,\n        message: err.message\n      };\n    }\n  },\n  createBulkRecords: async (model, listOfObj) => {\n    try {\n      const result = await model.insertMany(listOfObj);\n      return {\n        status: true,\n        statusCode: 200,\n        data: result,\n        message: \"Record created successfully\"\n      };\n    } catch (err) {\n      return {\n        status: false,\n        statusCode: 409,\n        data: {},\n        name: err.name,\n        message: err.message\n      };\n    }\n  },\n  createRecord: async (model, condition, params) => {\n    try {\n      const rec = await model.find(condition);\n\n      if (rec && rec.length > 0) {\n        throw new Error(message = \"Record already exist\");\n      } //console.log(\" condition and params :\", condition, params)\n\n\n      const result = await model.findOneAndUpdate(condition, params, {\n        new: true,\n        upsert: true,\n        rawResult: true // Return the raw result from the MongoDB driver\n\n      });\n      return {\n        status: true,\n        statusCode: 200,\n        data: result && result[\"value\"] ? result[\"value\"] : {},\n        message: \"Record created successfully\"\n      };\n    } catch (err) {\n      return {\n        status: false,\n        statusCode: 409,\n        data: {},\n        name: err.name || \"Error\",\n        message: err.message\n      };\n    }\n  },\n  getRecordByCondition: async (model, condition, selectFields) => {\n    try {\n      const result = await model.find(condition, selectFields);\n\n      if (result && result.length === 0) {\n        throw new Error(message = \"Record does not exist\");\n      }\n\n      return {\n        status: true,\n        statusCode: 200,\n        data: result,\n        message: \"Record fetched successfully\"\n      };\n    } catch (err) {\n      return {\n        status: false,\n        statusCode: 409,\n        data: {},\n        name: err.name,\n        message: err.message\n      };\n    }\n  },\n  getDistinctRecordByCondition: async (model, condition, selectFields) => {\n    try {\n      const result = await model.distinct(selectFields, condition);\n      return {\n        status: true,\n        statusCode: 200,\n        data: result || [],\n        message: \"Record fetched successfully\"\n      };\n    } catch (err) {\n      return {\n        status: false,\n        statusCode: 409,\n        data: {},\n        name: err.name,\n        message: err.message\n      };\n    }\n  },\n  getRecordCountByCondition: async (model, condition) => {\n    try {\n      const result = await model.count(condition);\n      return {\n        status: true,\n        statusCode: 200,\n        data: result || 0,\n        message: \"Record fetched successfully\"\n      };\n    } catch (err) {\n      return {\n        status: false,\n        statusCode: 409,\n        data: {},\n        name: err.name,\n        message: err.message\n      };\n    }\n  },\n  getAggregatedRecordsByCondition: async (model, condition) => {\n    try {\n      //console.log(\" condition :\", condition);\n      const result = await model.aggregate(condition);\n      console.log(\" RESULt :\", JSON.stringify(result));\n\n      if (result && result.length === 0) {\n        throw new Error(message = \"Record does not exist\");\n      }\n\n      return {\n        status: true,\n        statusCode: 200,\n        data: result,\n        message: \"Record fetched successfully\"\n      };\n    } catch (err) {\n      return {\n        status: false,\n        statusCode: 409,\n        data: {},\n        name: err.name,\n        message: err.message\n      };\n    }\n  },\n  getRecordsWithPagination: async (model, query, whereCondition, selectFields) => {\n    try {\n      let size = 10;\n      let offset = 0;\n      let page = 0;\n      size = query[\"size\"] ? parseInt(query[\"size\"]) : 10;\n      page = query[\"page\"] ? parseInt(query[\"page\"]) : 0;\n      offset = size * page;\n      let sort = {};\n      if (query[\"sort\"]) sort[query[\"sort\"]] = -1;else sort[\"created_at\"] = -1;\n      let length = await model.find(whereCondition).countDocuments();\n\n      if (length !== 0) {\n        let list = await model.find(whereCondition, selectFields).skip(offset).limit(size).sort(sort);\n        let obj = {};\n        obj[\"list\"] = list;\n        obj[\"count\"] = length;\n        return {\n          status: true,\n          statusCode: 200,\n          data: obj,\n          message: \"Record fetched successfully\"\n        };\n      } else {\n        return {\n          status: true,\n          statusCode: 200,\n          data: {},\n          message: \"Record fetched successfully\"\n        };\n      }\n    } catch (err) {\n      return {\n        status: false,\n        statusCode: 500,\n        data: {},\n        name: err.name,\n        message: err.message\n      };\n    }\n  },\n  getAggregatedRecordsWithPagination: async (model, query, whereCondition, groupByCondition, lookupCondition, unwindFields, selectFields) => {\n    try {\n      let size = 10;\n      let offset = 0;\n      let page = 0;\n      size = query[\"size\"] ? parseInt(query[\"size\"]) : 10;\n      page = query[\"page\"] ? parseInt(query[\"page\"]) : 0;\n      offset = size * page;\n      let sort = {};\n      if (query[\"sort\"]) sort[query[\"sort\"]] = -1;else sort[\"created_at\"] = -1;\n      let length = await model.find(whereCondition).countDocuments();\n\n      if (length !== 0) {\n        //let aggregateCondition = [{ $match: whereCondition }, { $sort : sort },  { $skip : offset }, { $limit : size }, {$group : { _id : \"$doc_type\", docs: { $push: \"$$ROOT\" } }}]\n        let aggregateCondition = [{\n          $match: whereCondition\n        }, {\n          $sort: sort\n        }, {\n          $skip: offset\n        }, {\n          $limit: size\n        }];\n        if (groupByCondition) aggregateCondition.push(groupByCondition);\n        if (lookupCondition) aggregateCondition.push(lookupCondition);\n        if (unwindFields) aggregateCondition.push(unwindFields);\n        if (selectFields) aggregateCondition.push(selectFields); //console.log(\"aggregateCondition :\", aggregateCondition)\n\n        let list = await model.aggregate(aggregateCondition);\n        let obj = {};\n        obj[\"list\"] = list;\n        obj[\"count\"] = length;\n        return {\n          status: true,\n          statusCode: 200,\n          data: obj,\n          message: \"Record fetched successfully\"\n        };\n      } else {\n        return {\n          status: true,\n          statusCode: 200,\n          data: {},\n          message: \"Record fetched successfully\"\n        };\n      }\n    } catch (err) {\n      return {\n        status: false,\n        statusCode: 500,\n        data: {},\n        name: err.name,\n        message: err.message\n      };\n    }\n  },\n  getRecordsByAggregatedQueryAndPagination: async (model, query, aggregateCondition) => {\n    try {\n      let size = 10;\n      let offset = 0;\n      let page = 0;\n      size = query[\"size\"] ? parseInt(query[\"size\"]) : 10;\n      page = query[\"page\"] ? parseInt(query[\"page\"]) : 0;\n      offset = size * page;\n      let sort = {};\n      if (query[\"sort\"]) sort[query[\"sort\"]] = -1;else sort[\"created_at\"] = -1;\n      let totalAggregatedRecordsCntCond = JSON.parse(JSON.stringify(aggregateCondition));\n      let totalAggregatedRecordsCond = JSON.parse(JSON.stringify(aggregateCondition));\n      totalAggregatedRecordsCntCond.push({\n        $group: {\n          _id: null,\n          total_records_by_aggregated_query: {\n            $sum: 1\n          }\n        }\n      });\n      totalAggregatedRecordsCntCond.push({\n        $project: {\n          _id: 0,\n          total_records_by_aggregated_query: 1\n        }\n      });\n      let length = await model.aggregate(totalAggregatedRecordsCntCond);\n\n      if (length && length[0] && length[0][\"total_records_by_aggregated_query\"] !== 0) {\n        totalAggregatedRecordsCond.push({\n          $sort: sort\n        });\n        totalAggregatedRecordsCond.push({\n          $skip: offset\n        });\n        totalAggregatedRecordsCond.push({\n          $limit: size\n        });\n        let list = await model.aggregate(totalAggregatedRecordsCond);\n        let obj = {};\n        obj[\"list\"] = list;\n        obj[\"count\"] = length[0][\"total_records_by_aggregated_query\"];\n        return {\n          status: true,\n          statusCode: 200,\n          data: obj,\n          message: \"Record fetched successfully\"\n        };\n      } else {\n        return {\n          status: true,\n          statusCode: 200,\n          data: {},\n          message: \"Record fetched successfully\"\n        };\n      }\n    } catch (err) {\n      return {\n        status: false,\n        statusCode: 500,\n        data: {},\n        name: err.name,\n        message: err.message\n      };\n    }\n  },\n  updateRecord: async (model, condition, params) => {\n    try {\n      const rec = await model.find(condition);\n\n      if (rec && rec.length === 0) {\n        throw new Error(message = \"Record does not exist\");\n      } //console.log(\"updateRecord : \", condition ,params)\n\n\n      const result = await model.findOneAndUpdate(condition, params, {\n        new: true,\n        upsert: true,\n        rawResult: true // Return the raw result from the MongoDB driver\n\n      });\n      return {\n        status: true,\n        statusCode: 200,\n        data: result && result[\"value\"] ? result[\"value\"] : {},\n        message: \"Record updated successfully\"\n      };\n    } catch (err) {\n      return {\n        status: false,\n        statusCode: 409,\n        data: {},\n        name: err.name,\n        message: err.message\n      };\n    }\n  },\n  deleteRecord: async (model, condition) => {\n    try {\n      const rec = await model.find(condition);\n\n      if (rec && rec.length === 0) {\n        throw new Error(message = \"Record does not exist\");\n      }\n\n      const result = await model.remove(condition);\n      return {\n        status: true,\n        statusCode: 200,\n        data: result,\n        message: \"Record removed successfully\"\n      };\n    } catch (err) {\n      return {\n        status: false,\n        statusCode: 409,\n        data: {},\n        name: err.name,\n        message: err.message\n      };\n    }\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "db-interface.js"
      ],
      "names": [
        "module",
        "exports",
        "createOrUpdateRecord",
        "model",
        "condition",
        "params",
        "result",
        "findOneAndUpdate",
        "new",
        "upsert",
        "rawResult",
        "status",
        "statusCode",
        "data",
        "message",
        "err",
        "name",
        "createBulkRecords",
        "listOfObj",
        "insertMany",
        "createRecord",
        "rec",
        "find",
        "length",
        "Error",
        "getRecordByCondition",
        "selectFields",
        "getDistinctRecordByCondition",
        "distinct",
        "getRecordCountByCondition",
        "count",
        "getAggregatedRecordsByCondition",
        "aggregate",
        "console",
        "log",
        "JSON",
        "stringify",
        "getRecordsWithPagination",
        "query",
        "whereCondition",
        "size",
        "offset",
        "page",
        "parseInt",
        "sort",
        "countDocuments",
        "list",
        "skip",
        "limit",
        "obj",
        "getAggregatedRecordsWithPagination",
        "groupByCondition",
        "lookupCondition",
        "unwindFields",
        "aggregateCondition",
        "$match",
        "$sort",
        "$skip",
        "$limit",
        "push",
        "getRecordsByAggregatedQueryAndPagination",
        "totalAggregatedRecordsCntCond",
        "parse",
        "totalAggregatedRecordsCond",
        "$group",
        "_id",
        "total_records_by_aggregated_query",
        "$sum",
        "$project",
        "updateRecord",
        "deleteRecord",
        "remove"
      ],
      "mappings": "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",
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/interface/",
      "sourcesContent": [
        "module.exports = {\n  createOrUpdateRecord: async (model, condition, params) => {\n    try {\n      const result = await model.findOneAndUpdate(condition, params, {\n        new: true,\n        upsert: true,\n        rawResult: true, // Return the raw result from the MongoDB driver\n      });\n      //console.log(\" result :\", result);\n      return {\n        status: true,\n        statusCode: 200,\n        data: result && result[\"value\"] ? result[\"value\"] : {},\n        message: \"Record updated successfully\",\n      };\n    } catch (err) {\n      return {\n        status: false,\n        statusCode: 409,\n        data: {},\n        name: err.name,\n        message: err.message,\n      };\n    }\n  },\n\n  createBulkRecords: async (model, listOfObj) => {\n    try {\n      const result = await model.insertMany(listOfObj);\n\n      return {\n        status: true,\n        statusCode: 200,\n        data: result,\n        message: \"Record created successfully\",\n      };\n    } catch (err) {\n      return {\n        status: false,\n        statusCode: 409,\n        data: {},\n        name: err.name,\n        message: err.message,\n      };\n    }\n  },\n\n  createRecord: async (model, condition, params) => {\n    try {\n      const rec = await model.find(condition);\n\n      if (rec && rec.length > 0) {\n        throw new Error((message = \"Record already exist\"));\n      }\n      //console.log(\" condition and params :\", condition, params)\n      const result = await model.findOneAndUpdate(condition, params, {\n        new: true,\n        upsert: true,\n        rawResult: true, // Return the raw result from the MongoDB driver\n      });\n\n      return {\n        status: true,\n        statusCode: 200,\n        data: result && result[\"value\"] ? result[\"value\"] : {},\n        message: \"Record created successfully\",\n      };\n    } catch (err) {\n      return {\n        status: false,\n        statusCode: 409,\n        data: {},\n        name: err.name || \"Error\",\n        message: err.message,\n      };\n    }\n  },\n\n  getRecordByCondition: async (model, condition, selectFields) => {\n    try {\n      const result = await model.find(condition, selectFields);\n\n      if (result && result.length === 0) {\n        throw new Error((message = \"Record does not exist\"));\n      }\n\n      return {\n        status: true,\n        statusCode: 200,\n        data: result,\n        message: \"Record fetched successfully\",\n      };\n    } catch (err) {\n      return {\n        status: false,\n        statusCode: 409,\n        data: {},\n        name: err.name,\n        message: err.message,\n      };\n    }\n  },\n\n  getDistinctRecordByCondition: async (model, condition, selectFields) => {\n    try {\n      const result = await model.distinct(selectFields, condition);\n\n      return {\n        status: true,\n        statusCode: 200,\n        data: result || [],\n        message: \"Record fetched successfully\",\n      };\n    } catch (err) {\n      return {\n        status: false,\n        statusCode: 409,\n        data: {},\n        name: err.name,\n        message: err.message,\n      };\n    }\n  },\n  getRecordCountByCondition: async (model, condition) => {\n    try {\n      const result = await model.count(condition);\n\n      return {\n        status: true,\n        statusCode: 200,\n        data: result || 0,\n        message: \"Record fetched successfully\",\n      };\n    } catch (err) {\n      return {\n        status: false,\n        statusCode: 409,\n        data: {},\n        name: err.name,\n        message: err.message,\n      };\n    }\n  },\n  getAggregatedRecordsByCondition: async (model, condition) => {\n    try {\n      //console.log(\" condition :\", condition);\n      const result = await model.aggregate(condition);\n      console.log(\" RESULt :\", JSON.stringify(result));\n      if (result && result.length === 0) {\n        throw new Error((message = \"Record does not exist\"));\n      }\n\n      return {\n        status: true,\n        statusCode: 200,\n        data: result,\n        message: \"Record fetched successfully\",\n      };\n    } catch (err) {\n      return {\n        status: false,\n        statusCode: 409,\n        data: {},\n        name: err.name,\n        message: err.message,\n      };\n    }\n  },\n\n  getRecordsWithPagination: async (\n    model,\n    query,\n    whereCondition,\n    selectFields\n  ) => {\n    try {\n      let size = 10;\n      let offset = 0;\n      let page = 0;\n\n      size = query[\"size\"] ? parseInt(query[\"size\"]) : 10;\n      page = query[\"page\"] ? parseInt(query[\"page\"]) : 0;\n      offset = size * page;\n\n      let sort = {};\n\n      if (query[\"sort\"]) sort[query[\"sort\"]] = -1;\n      else sort[\"created_at\"] = -1;\n\n      let length = await model.find(whereCondition).countDocuments();\n\n      if (length !== 0) {\n        let list = await model\n          .find(whereCondition, selectFields)\n          .skip(offset)\n          .limit(size)\n          .sort(sort);\n\n        let obj = {};\n        obj[\"list\"] = list;\n        obj[\"count\"] = length;\n\n        return {\n          status: true,\n          statusCode: 200,\n          data: obj,\n          message: \"Record fetched successfully\",\n        };\n      } else {\n        return {\n          status: true,\n          statusCode: 200,\n          data: {},\n          message: \"Record fetched successfully\",\n        };\n      }\n    } catch (err) {\n      return {\n        status: false,\n        statusCode: 500,\n        data: {},\n        name: err.name,\n        message: err.message,\n      };\n    }\n  },\n\n  getAggregatedRecordsWithPagination: async (\n    model,\n    query,\n    whereCondition,\n    groupByCondition,\n    lookupCondition,\n    unwindFields,\n    selectFields\n  ) => {\n    try {\n      let size = 10;\n      let offset = 0;\n      let page = 0;\n\n      size = query[\"size\"] ? parseInt(query[\"size\"]) : 10;\n      page = query[\"page\"] ? parseInt(query[\"page\"]) : 0;\n      offset = size * page;\n\n      let sort = {};\n\n      if (query[\"sort\"]) sort[query[\"sort\"]] = -1;\n      else sort[\"created_at\"] = -1;\n\n      let length = await model.find(whereCondition).countDocuments();\n\n      if (length !== 0) {\n        //let aggregateCondition = [{ $match: whereCondition }, { $sort : sort },  { $skip : offset }, { $limit : size }, {$group : { _id : \"$doc_type\", docs: { $push: \"$$ROOT\" } }}]\n        let aggregateCondition = [\n          { $match: whereCondition },\n          { $sort: sort },\n          { $skip: offset },\n          { $limit: size },\n        ];\n        if (groupByCondition) aggregateCondition.push(groupByCondition);\n        if (lookupCondition) aggregateCondition.push(lookupCondition);\n        if (unwindFields) aggregateCondition.push(unwindFields);\n        if (selectFields) aggregateCondition.push(selectFields);\n        //console.log(\"aggregateCondition :\", aggregateCondition)\n        let list = await model.aggregate(aggregateCondition);\n\n        let obj = {};\n        obj[\"list\"] = list;\n        obj[\"count\"] = length;\n\n        return {\n          status: true,\n          statusCode: 200,\n          data: obj,\n          message: \"Record fetched successfully\",\n        };\n      } else {\n        return {\n          status: true,\n          statusCode: 200,\n          data: {},\n          message: \"Record fetched successfully\",\n        };\n      }\n    } catch (err) {\n      return {\n        status: false,\n        statusCode: 500,\n        data: {},\n        name: err.name,\n        message: err.message,\n      };\n    }\n  },\n\n  getRecordsByAggregatedQueryAndPagination: async (\n    model,\n    query,\n    aggregateCondition\n  ) => {\n    try {\n      let size = 10;\n      let offset = 0;\n      let page = 0;\n\n      size = query[\"size\"] ? parseInt(query[\"size\"]) : 10;\n      page = query[\"page\"] ? parseInt(query[\"page\"]) : 0;\n      offset = size * page;\n\n      let sort = {};\n\n      if (query[\"sort\"]) sort[query[\"sort\"]] = -1;\n      else sort[\"created_at\"] = -1;\n\n      let totalAggregatedRecordsCntCond = JSON.parse(\n        JSON.stringify(aggregateCondition)\n      );\n      let totalAggregatedRecordsCond = JSON.parse(\n        JSON.stringify(aggregateCondition)\n      );\n\n      totalAggregatedRecordsCntCond.push({\n        $group: { _id: null, total_records_by_aggregated_query: { $sum: 1 } },\n      });\n      totalAggregatedRecordsCntCond.push({\n        $project: { _id: 0, total_records_by_aggregated_query: 1 },\n      });\n\n      let length = await model.aggregate(totalAggregatedRecordsCntCond);\n\n      if (\n        length &&\n        length[0] &&\n        length[0][\"total_records_by_aggregated_query\"] !== 0\n      ) {\n        totalAggregatedRecordsCond.push({ $sort: sort });\n        totalAggregatedRecordsCond.push({ $skip: offset });\n        totalAggregatedRecordsCond.push({ $limit: size });\n\n        let list = await model.aggregate(totalAggregatedRecordsCond);\n\n        let obj = {};\n        obj[\"list\"] = list;\n        obj[\"count\"] = length[0][\"total_records_by_aggregated_query\"];\n\n        return {\n          status: true,\n          statusCode: 200,\n          data: obj,\n          message: \"Record fetched successfully\",\n        };\n      } else {\n        return {\n          status: true,\n          statusCode: 200,\n          data: {},\n          message: \"Record fetched successfully\",\n        };\n      }\n    } catch (err) {\n      return {\n        status: false,\n        statusCode: 500,\n        data: {},\n        name: err.name,\n        message: err.message,\n      };\n    }\n  },\n\n  updateRecord: async (model, condition, params) => {\n    try {\n      const rec = await model.find(condition);\n\n      if (rec && rec.length === 0) {\n        throw new Error((message = \"Record does not exist\"));\n      }\n      //console.log(\"updateRecord : \", condition ,params)\n      const result = await model.findOneAndUpdate(condition, params, {\n        new: true,\n        upsert: true,\n        rawResult: true, // Return the raw result from the MongoDB driver\n      });\n\n      return {\n        status: true,\n        statusCode: 200,\n        data: result && result[\"value\"] ? result[\"value\"] : {},\n        message: \"Record updated successfully\",\n      };\n    } catch (err) {\n      return {\n        status: false,\n        statusCode: 409,\n        data: {},\n        name: err.name,\n        message: err.message,\n      };\n    }\n  },\n\n  deleteRecord: async (model, condition) => {\n    try {\n      const rec = await model.find(condition);\n      if (rec && rec.length === 0) {\n        throw new Error((message = \"Record does not exist\"));\n      }\n\n      const result = await model.remove(condition);\n\n      return {\n        status: true,\n        statusCode: 200,\n        data: result,\n        message: \"Record removed successfully\",\n      };\n    } catch (err) {\n      return {\n        status: false,\n        statusCode: 409,\n        data: {},\n        name: err.name,\n        message: err.message,\n      };\n    }\n  },\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635600780174
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/aishwarya.gaud/Documents/wrk/test/queue/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"filename\":\"/home/aishwarya.gaud/Documents/wrk/test/queue/video.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/queue/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/aishwarya.gaud/Documents/wrk/test",
      "filename": "/home/aishwarya.gaud/Documents/wrk/test/queue/video.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/aishwarya.gaud/Documents/wrk/test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/aishwarya.gaud/Documents/wrk/test/queue/video.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/aishwarya.gaud/Documents/wrk/test/queue/video.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/queue/",
        "sourceFileName": "video.js"
      }
    },
    "ast": null,
    "code": "const Queue = require(\"bull\");\n\nconst fs = require(\"fs\");\n\nconst dbInterface = require(\"../interface/db-interface\");\n\nconst ytdl = require(\"ytdl-core\");\n\nconst uuidv1 = require(\"uuidv1\");\n\nconst createVideoQueue = () => {\n  const videoQueue = new Queue(\"video transcoding\", {\n    redis: {\n      port: process.env.REDIS_PORT,\n      host: process.env.REDIS_URL\n    }\n  });\n  videoQueue.process(async (job, done) => {\n    const data = job.data;\n\n    try {\n      job.progress(0);\n      global.io.emit(\"progress\", {\n        progress: 0,\n        jobId: data.id\n      });\n      const uuid = uuidv1();\n      const fileLocation = `./files/${uuid}.mp4`;\n      await new Promise(resolve => {\n        ytdl(data.url).on(\"progress\", (length, downloaded, totallength) => {\n          const progress = downloaded / totallength * 100;\n          global.io.emit(\"progress\", {\n            progress,\n            jobId: data.id\n          });\n\n          if (progress >= 100) {\n            global.io.emit(\"videoDone\", {\n              fileLocation: `${uuid}.mp4`,\n              jobId: data.id\n            });\n            global.io.emit(\"progress\", {\n              progress: 100,\n              jobId: data.id\n            });\n          }\n        }).pipe(fs.createWriteStream(fileLocation)).on(\"finish\", () => {\n          resolve();\n        });\n      });\n      const condition = {\n        _id: data.id\n      };\n      const updateData = {\n        status: \"done\",\n        fileLocation: `${uuid}.mp4`\n      };\n      await dbInterface.updateRecord(condition, updateData);\n      done();\n    } catch (ex) {\n      console.log(ex);\n      job.moveToFailed();\n    }\n  });\n  return videoQueue;\n};\n\nmodule.exports = {\n  createVideoQueue\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZpZGVvLmpzIl0sIm5hbWVzIjpbIlF1ZXVlIiwicmVxdWlyZSIsImZzIiwiZGJJbnRlcmZhY2UiLCJ5dGRsIiwidXVpZHYxIiwiY3JlYXRlVmlkZW9RdWV1ZSIsInZpZGVvUXVldWUiLCJyZWRpcyIsInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUkVESVNfUE9SVCIsImhvc3QiLCJSRURJU19VUkwiLCJqb2IiLCJkb25lIiwiZGF0YSIsInByb2dyZXNzIiwiZ2xvYmFsIiwiaW8iLCJlbWl0Iiwiam9iSWQiLCJpZCIsInV1aWQiLCJmaWxlTG9jYXRpb24iLCJQcm9taXNlIiwicmVzb2x2ZSIsInVybCIsIm9uIiwibGVuZ3RoIiwiZG93bmxvYWRlZCIsInRvdGFsbGVuZ3RoIiwicGlwZSIsImNyZWF0ZVdyaXRlU3RyZWFtIiwiY29uZGl0aW9uIiwiX2lkIiwidXBkYXRlRGF0YSIsInN0YXR1cyIsInVwZGF0ZVJlY29yZCIsImV4IiwiY29uc29sZSIsImxvZyIsIm1vdmVUb0ZhaWxlZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBckI7O0FBQ0EsTUFBTUMsRUFBRSxHQUFHRCxPQUFPLENBQUMsSUFBRCxDQUFsQjs7QUFDQSxNQUFNRSxXQUFXLEdBQUdGLE9BQU8sQ0FBQywyQkFBRCxDQUEzQjs7QUFDQSxNQUFNRyxJQUFJLEdBQUdILE9BQU8sQ0FBQyxXQUFELENBQXBCOztBQUNBLE1BQU1JLE1BQU0sR0FBR0osT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBRUEsTUFBTUssZ0JBQWdCLEdBQUcsTUFBTTtBQUM3QixRQUFNQyxVQUFVLEdBQUcsSUFBSVAsS0FBSixDQUFVLG1CQUFWLEVBQStCO0FBQ2hEUSxJQUFBQSxLQUFLLEVBQUU7QUFDTEMsTUFBQUEsSUFBSSxFQUFFQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsVUFEYjtBQUVMQyxNQUFBQSxJQUFJLEVBQUVILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRztBQUZiO0FBRHlDLEdBQS9CLENBQW5CO0FBTUFQLEVBQUFBLFVBQVUsQ0FBQ0csT0FBWCxDQUFtQixPQUFPSyxHQUFQLEVBQVlDLElBQVosS0FBcUI7QUFDdEMsVUFBTUMsSUFBSSxHQUFHRixHQUFHLENBQUNFLElBQWpCOztBQUNBLFFBQUk7QUFDRkYsTUFBQUEsR0FBRyxDQUFDRyxRQUFKLENBQWEsQ0FBYjtBQUNBQyxNQUFBQSxNQUFNLENBQUNDLEVBQVAsQ0FBVUMsSUFBVixDQUFlLFVBQWYsRUFBMkI7QUFBRUgsUUFBQUEsUUFBUSxFQUFFLENBQVo7QUFBZUksUUFBQUEsS0FBSyxFQUFFTCxJQUFJLENBQUNNO0FBQTNCLE9BQTNCO0FBQ0EsWUFBTUMsSUFBSSxHQUFHbkIsTUFBTSxFQUFuQjtBQUNBLFlBQU1vQixZQUFZLEdBQUksV0FBVUQsSUFBSyxNQUFyQztBQUNBLFlBQU0sSUFBSUUsT0FBSixDQUFhQyxPQUFELElBQWE7QUFDN0J2QixRQUFBQSxJQUFJLENBQUNhLElBQUksQ0FBQ1csR0FBTixDQUFKLENBQ0dDLEVBREgsQ0FDTSxVQUROLEVBQ2tCLENBQUNDLE1BQUQsRUFBU0MsVUFBVCxFQUFxQkMsV0FBckIsS0FBcUM7QUFDbkQsZ0JBQU1kLFFBQVEsR0FBSWEsVUFBVSxHQUFHQyxXQUFkLEdBQTZCLEdBQTlDO0FBQ0FiLFVBQUFBLE1BQU0sQ0FBQ0MsRUFBUCxDQUFVQyxJQUFWLENBQWUsVUFBZixFQUEyQjtBQUFFSCxZQUFBQSxRQUFGO0FBQVlJLFlBQUFBLEtBQUssRUFBRUwsSUFBSSxDQUFDTTtBQUF4QixXQUEzQjs7QUFDQSxjQUFJTCxRQUFRLElBQUksR0FBaEIsRUFBcUI7QUFDbkJDLFlBQUFBLE1BQU0sQ0FBQ0MsRUFBUCxDQUFVQyxJQUFWLENBQWUsV0FBZixFQUE0QjtBQUMxQkksY0FBQUEsWUFBWSxFQUFHLEdBQUVELElBQUssTUFESTtBQUUxQkYsY0FBQUEsS0FBSyxFQUFFTCxJQUFJLENBQUNNO0FBRmMsYUFBNUI7QUFJQUosWUFBQUEsTUFBTSxDQUFDQyxFQUFQLENBQVVDLElBQVYsQ0FBZSxVQUFmLEVBQTJCO0FBQUVILGNBQUFBLFFBQVEsRUFBRSxHQUFaO0FBQWlCSSxjQUFBQSxLQUFLLEVBQUVMLElBQUksQ0FBQ007QUFBN0IsYUFBM0I7QUFDRDtBQUNGLFNBWEgsRUFZR1UsSUFaSCxDQVlRL0IsRUFBRSxDQUFDZ0MsaUJBQUgsQ0FBcUJULFlBQXJCLENBWlIsRUFhR0ksRUFiSCxDQWFNLFFBYk4sRUFhZ0IsTUFBTTtBQUNsQkYsVUFBQUEsT0FBTztBQUNSLFNBZkg7QUFnQkQsT0FqQkssQ0FBTjtBQWtCQSxZQUFNUSxTQUFTLEdBQUc7QUFDaEJDLFFBQUFBLEdBQUcsRUFBRW5CLElBQUksQ0FBQ007QUFETSxPQUFsQjtBQUdBLFlBQU1jLFVBQVUsR0FBRztBQUNqQkMsUUFBQUEsTUFBTSxFQUFFLE1BRFM7QUFFakJiLFFBQUFBLFlBQVksRUFBRyxHQUFFRCxJQUFLO0FBRkwsT0FBbkI7QUFJQSxZQUFNckIsV0FBVyxDQUFDb0MsWUFBWixDQUF5QkosU0FBekIsRUFBb0NFLFVBQXBDLENBQU47QUFDQXJCLE1BQUFBLElBQUk7QUFDTCxLQWhDRCxDQWdDRSxPQUFPd0IsRUFBUCxFQUFXO0FBQ1hDLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixFQUFaO0FBQ0F6QixNQUFBQSxHQUFHLENBQUM0QixZQUFKO0FBQ0Q7QUFDRixHQXRDRDtBQXVDQSxTQUFPcEMsVUFBUDtBQUNELENBL0NEOztBQWdEQXFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUFFdkMsRUFBQUE7QUFBRixDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9haXNod2FyeWEuZ2F1ZC9Eb2N1bWVudHMvd3JrL3Rlc3QvcXVldWUvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUXVldWUgPSByZXF1aXJlKFwiYnVsbFwiKTtcbmNvbnN0IGZzID0gcmVxdWlyZShcImZzXCIpO1xuY29uc3QgZGJJbnRlcmZhY2UgPSByZXF1aXJlKFwiLi4vaW50ZXJmYWNlL2RiLWludGVyZmFjZVwiKTtcbmNvbnN0IHl0ZGwgPSByZXF1aXJlKFwieXRkbC1jb3JlXCIpO1xuY29uc3QgdXVpZHYxID0gcmVxdWlyZShcInV1aWR2MVwiKTtcblxuY29uc3QgY3JlYXRlVmlkZW9RdWV1ZSA9ICgpID0+IHtcbiAgY29uc3QgdmlkZW9RdWV1ZSA9IG5ldyBRdWV1ZShcInZpZGVvIHRyYW5zY29kaW5nXCIsIHtcbiAgICByZWRpczoge1xuICAgICAgcG9ydDogcHJvY2Vzcy5lbnYuUkVESVNfUE9SVCxcbiAgICAgIGhvc3Q6IHByb2Nlc3MuZW52LlJFRElTX1VSTCxcbiAgICB9LFxuICB9KTtcbiAgdmlkZW9RdWV1ZS5wcm9jZXNzKGFzeW5jIChqb2IsIGRvbmUpID0+IHtcbiAgICBjb25zdCBkYXRhID0gam9iLmRhdGE7XG4gICAgdHJ5IHtcbiAgICAgIGpvYi5wcm9ncmVzcygwKTtcbiAgICAgIGdsb2JhbC5pby5lbWl0KFwicHJvZ3Jlc3NcIiwgeyBwcm9ncmVzczogMCwgam9iSWQ6IGRhdGEuaWQgfSk7XG4gICAgICBjb25zdCB1dWlkID0gdXVpZHYxKCk7XG4gICAgICBjb25zdCBmaWxlTG9jYXRpb24gPSBgLi9maWxlcy8ke3V1aWR9Lm1wNGA7XG4gICAgICBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICB5dGRsKGRhdGEudXJsKVxuICAgICAgICAgIC5vbihcInByb2dyZXNzXCIsIChsZW5ndGgsIGRvd25sb2FkZWQsIHRvdGFsbGVuZ3RoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBwcm9ncmVzcyA9IChkb3dubG9hZGVkIC8gdG90YWxsZW5ndGgpICogMTAwO1xuICAgICAgICAgICAgZ2xvYmFsLmlvLmVtaXQoXCJwcm9ncmVzc1wiLCB7IHByb2dyZXNzLCBqb2JJZDogZGF0YS5pZCB9KTtcbiAgICAgICAgICAgIGlmIChwcm9ncmVzcyA+PSAxMDApIHtcbiAgICAgICAgICAgICAgZ2xvYmFsLmlvLmVtaXQoXCJ2aWRlb0RvbmVcIiwge1xuICAgICAgICAgICAgICAgIGZpbGVMb2NhdGlvbjogYCR7dXVpZH0ubXA0YCxcbiAgICAgICAgICAgICAgICBqb2JJZDogZGF0YS5pZCxcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIGdsb2JhbC5pby5lbWl0KFwicHJvZ3Jlc3NcIiwgeyBwcm9ncmVzczogMTAwLCBqb2JJZDogZGF0YS5pZCB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KVxuICAgICAgICAgIC5waXBlKGZzLmNyZWF0ZVdyaXRlU3RyZWFtKGZpbGVMb2NhdGlvbikpXG4gICAgICAgICAgLm9uKFwiZmluaXNoXCIsICgpID0+IHtcbiAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgICAgY29uc3QgY29uZGl0aW9uID0ge1xuICAgICAgICBfaWQ6IGRhdGEuaWQsXG4gICAgICB9O1xuICAgICAgY29uc3QgdXBkYXRlRGF0YSA9IHtcbiAgICAgICAgc3RhdHVzOiBcImRvbmVcIixcbiAgICAgICAgZmlsZUxvY2F0aW9uOiBgJHt1dWlkfS5tcDRgLFxuICAgICAgfTtcbiAgICAgIGF3YWl0IGRiSW50ZXJmYWNlLnVwZGF0ZVJlY29yZChjb25kaXRpb24sIHVwZGF0ZURhdGEpO1xuICAgICAgZG9uZSgpO1xuICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICBjb25zb2xlLmxvZyhleCk7XG4gICAgICBqb2IubW92ZVRvRmFpbGVkKCk7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHZpZGVvUXVldWU7XG59O1xubW9kdWxlLmV4cG9ydHMgPSB7IGNyZWF0ZVZpZGVvUXVldWUgfTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "video.js"
      ],
      "names": [
        "Queue",
        "require",
        "fs",
        "dbInterface",
        "ytdl",
        "uuidv1",
        "createVideoQueue",
        "videoQueue",
        "redis",
        "port",
        "process",
        "env",
        "REDIS_PORT",
        "host",
        "REDIS_URL",
        "job",
        "done",
        "data",
        "progress",
        "global",
        "io",
        "emit",
        "jobId",
        "id",
        "uuid",
        "fileLocation",
        "Promise",
        "resolve",
        "url",
        "on",
        "length",
        "downloaded",
        "totallength",
        "pipe",
        "createWriteStream",
        "condition",
        "_id",
        "updateData",
        "status",
        "updateRecord",
        "ex",
        "console",
        "log",
        "moveToFailed",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/queue/",
      "sourcesContent": [
        "const Queue = require(\"bull\");\nconst fs = require(\"fs\");\nconst dbInterface = require(\"../interface/db-interface\");\nconst ytdl = require(\"ytdl-core\");\nconst uuidv1 = require(\"uuidv1\");\n\nconst createVideoQueue = () => {\n  const videoQueue = new Queue(\"video transcoding\", {\n    redis: {\n      port: process.env.REDIS_PORT,\n      host: process.env.REDIS_URL,\n    },\n  });\n  videoQueue.process(async (job, done) => {\n    const data = job.data;\n    try {\n      job.progress(0);\n      global.io.emit(\"progress\", { progress: 0, jobId: data.id });\n      const uuid = uuidv1();\n      const fileLocation = `./files/${uuid}.mp4`;\n      await new Promise((resolve) => {\n        ytdl(data.url)\n          .on(\"progress\", (length, downloaded, totallength) => {\n            const progress = (downloaded / totallength) * 100;\n            global.io.emit(\"progress\", { progress, jobId: data.id });\n            if (progress >= 100) {\n              global.io.emit(\"videoDone\", {\n                fileLocation: `${uuid}.mp4`,\n                jobId: data.id,\n              });\n              global.io.emit(\"progress\", { progress: 100, jobId: data.id });\n            }\n          })\n          .pipe(fs.createWriteStream(fileLocation))\n          .on(\"finish\", () => {\n            resolve();\n          });\n      });\n      const condition = {\n        _id: data.id,\n      };\n      const updateData = {\n        status: \"done\",\n        fileLocation: `${uuid}.mp4`,\n      };\n      await dbInterface.updateRecord(condition, updateData);\n      done();\n    } catch (ex) {\n      console.log(ex);\n      job.moveToFailed();\n    }\n  });\n  return videoQueue;\n};\nmodule.exports = { createVideoQueue };\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1630171363000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/aishwarya.gaud/Documents/wrk/test/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"filename\":\"/home/aishwarya.gaud/Documents/wrk/test/routes/insurance.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/aishwarya.gaud/Documents/wrk/test",
      "filename": "/home/aishwarya.gaud/Documents/wrk/test/routes/insurance.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/aishwarya.gaud/Documents/wrk/test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/aishwarya.gaud/Documents/wrk/test/routes/insurance.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/aishwarya.gaud/Documents/wrk/test/routes/insurance.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/routes/",
        "sourceFileName": "insurance.js"
      }
    },
    "ast": null,
    "code": "const express = require(\"express\");\n\nconst router = express.Router();\n\nconst controller = require(\"../controller/insurance_controller\");\n\nrouter.post(\"/upload/excel\", controller.uploadXlsx);\nrouter.post(\"/upload/excel/worker\", controller.uploadXlsxWorkerThread);\nrouter.get(\"/search/policy/:userId\", controller.getPolicyInfo);\nrouter.get(\"/aggregate/policy/:userId\", controller.getAggregatedPolicyInfo);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluc3VyYW5jZS5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsImNvbnRyb2xsZXIiLCJwb3N0IiwidXBsb2FkWGxzeCIsInVwbG9hZFhsc3hXb3JrZXJUaHJlYWQiLCJnZXQiLCJnZXRQb2xpY3lJbmZvIiwiZ2V0QWdncmVnYXRlZFBvbGljeUluZm8iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWY7O0FBQ0EsTUFBTUMsVUFBVSxHQUFHSCxPQUFPLENBQUMsb0NBQUQsQ0FBMUI7O0FBRUFDLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLGVBQVosRUFBNkJELFVBQVUsQ0FBQ0UsVUFBeEM7QUFDQUosTUFBTSxDQUFDRyxJQUFQLENBQVksc0JBQVosRUFBb0NELFVBQVUsQ0FBQ0csc0JBQS9DO0FBQ0FMLE1BQU0sQ0FBQ00sR0FBUCxDQUFXLHdCQUFYLEVBQXFDSixVQUFVLENBQUNLLGFBQWhEO0FBQ0FQLE1BQU0sQ0FBQ00sR0FBUCxDQUFXLDJCQUFYLEVBQXdDSixVQUFVLENBQUNNLHVCQUFuRDtBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJWLE1BQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2Fpc2h3YXJ5YS5nYXVkL0RvY3VtZW50cy93cmsvdGVzdC9yb3V0ZXMvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbmNvbnN0IGNvbnRyb2xsZXIgPSByZXF1aXJlKFwiLi4vY29udHJvbGxlci9pbnN1cmFuY2VfY29udHJvbGxlclwiKTtcblxucm91dGVyLnBvc3QoXCIvdXBsb2FkL2V4Y2VsXCIsIGNvbnRyb2xsZXIudXBsb2FkWGxzeCk7XG5yb3V0ZXIucG9zdChcIi91cGxvYWQvZXhjZWwvd29ya2VyXCIsIGNvbnRyb2xsZXIudXBsb2FkWGxzeFdvcmtlclRocmVhZCk7XG5yb3V0ZXIuZ2V0KFwiL3NlYXJjaC9wb2xpY3kvOnVzZXJJZFwiLCBjb250cm9sbGVyLmdldFBvbGljeUluZm8pO1xucm91dGVyLmdldChcIi9hZ2dyZWdhdGUvcG9saWN5Lzp1c2VySWRcIiwgY29udHJvbGxlci5nZXRBZ2dyZWdhdGVkUG9saWN5SW5mbyk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "insurance.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "controller",
        "post",
        "uploadXlsx",
        "uploadXlsxWorkerThread",
        "get",
        "getPolicyInfo",
        "getAggregatedPolicyInfo",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AACA,MAAMC,UAAU,GAAGH,OAAO,CAAC,oCAAD,CAA1B;;AAEAC,MAAM,CAACG,IAAP,CAAY,eAAZ,EAA6BD,UAAU,CAACE,UAAxC;AACAJ,MAAM,CAACG,IAAP,CAAY,sBAAZ,EAAoCD,UAAU,CAACG,sBAA/C;AACAL,MAAM,CAACM,GAAP,CAAW,wBAAX,EAAqCJ,UAAU,CAACK,aAAhD;AACAP,MAAM,CAACM,GAAP,CAAW,2BAAX,EAAwCJ,UAAU,CAACM,uBAAnD;AAEAC,MAAM,CAACC,OAAP,GAAiBV,MAAjB",
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/routes/",
      "sourcesContent": [
        "const express = require(\"express\");\nconst router = express.Router();\nconst controller = require(\"../controller/insurance_controller\");\n\nrouter.post(\"/upload/excel\", controller.uploadXlsx);\nrouter.post(\"/upload/excel/worker\", controller.uploadXlsxWorkerThread);\nrouter.get(\"/search/policy/:userId\", controller.getPolicyInfo);\nrouter.get(\"/aggregate/policy/:userId\", controller.getAggregatedPolicyInfo);\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635522584702
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/aishwarya.gaud/Documents/wrk/test/controller/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"filename\":\"/home/aishwarya.gaud/Documents/wrk/test/controller/insurance_controller.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/controller/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/aishwarya.gaud/Documents/wrk/test",
      "filename": "/home/aishwarya.gaud/Documents/wrk/test/controller/insurance_controller.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/aishwarya.gaud/Documents/wrk/test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/aishwarya.gaud/Documents/wrk/test/controller/insurance_controller.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/aishwarya.gaud/Documents/wrk/test/controller/insurance_controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/controller/",
        "sourceFileName": "insurance_controller.js"
      }
    },
    "ast": null,
    "code": "const ytdl = require(\"ytdl-core\");\n\nconst service = require(\"../service/insurance_service\");\n\nconst insuranceCtrl = {\n  async uploadXlsx(req, res) {\n    try {\n      //const url = req.body.url;\n      const getData = await service.uploadXlsxData();\n      const result = {\n        status: true,\n        statusCode: 200,\n        data: getData,\n        message: \"Record uploaded successfully\"\n      };\n      return res.send(result);\n    } catch (ex) {\n      console.log(ex);\n      res.status(400);\n      return res.send(ex);\n    }\n  },\n\n  async uploadXlsxWorkerThread(req, res) {\n    try {\n      //const url = req.body.url;\n      const getData = await service.uploadXlsxThreadData();\n      const result = {\n        status: true,\n        statusCode: 200,\n        data: getData,\n        message: \"Record uploaded successfully\"\n      };\n      return res.send(result);\n    } catch (ex) {\n      console.log(ex);\n      res.status(400);\n      return res.send(ex);\n    }\n  },\n\n  async getPolicyInfo(req, res) {\n    try {\n      const userId = req.params.userId;\n      const result = await service.getPolicyInfo(userId);\n      return res.send(result);\n    } catch (ex) {\n      console.log(ex);\n      res.status(400);\n      return res.send(ex);\n    }\n  },\n\n  async getAggregatedPolicyInfo(req, res) {\n    try {\n      const userId = req.params.userId;\n      const result = await service.getAggregatedPolicyInfo(userId);\n      return res.send(result);\n    } catch (ex) {\n      console.log(ex);\n      res.status(400);\n      return res.send(ex);\n    }\n  }\n\n};\nmodule.exports = {\n  uploadXlsx: insuranceCtrl.uploadXlsx,\n  uploadXlsxWorkerThread: insuranceCtrl.uploadXlsxWorkerThread,\n  getPolicyInfo: insuranceCtrl.getPolicyInfo,\n  getAggregatedPolicyInfo: insuranceCtrl.getAggregatedPolicyInfo\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluc3VyYW5jZV9jb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbInl0ZGwiLCJyZXF1aXJlIiwic2VydmljZSIsImluc3VyYW5jZUN0cmwiLCJ1cGxvYWRYbHN4IiwicmVxIiwicmVzIiwiZ2V0RGF0YSIsInVwbG9hZFhsc3hEYXRhIiwicmVzdWx0Iiwic3RhdHVzIiwic3RhdHVzQ29kZSIsImRhdGEiLCJtZXNzYWdlIiwic2VuZCIsImV4IiwiY29uc29sZSIsImxvZyIsInVwbG9hZFhsc3hXb3JrZXJUaHJlYWQiLCJ1cGxvYWRYbHN4VGhyZWFkRGF0YSIsImdldFBvbGljeUluZm8iLCJ1c2VySWQiLCJwYXJhbXMiLCJnZXRBZ2dyZWdhdGVkUG9saWN5SW5mbyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBcEI7O0FBQ0EsTUFBTUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsOEJBQUQsQ0FBdkI7O0FBRUEsTUFBTUUsYUFBYSxHQUFHO0FBQ3BCLFFBQU1DLFVBQU4sQ0FBaUJDLEdBQWpCLEVBQXNCQyxHQUF0QixFQUEyQjtBQUN6QixRQUFJO0FBQ0Y7QUFFQSxZQUFNQyxPQUFPLEdBQUcsTUFBTUwsT0FBTyxDQUFDTSxjQUFSLEVBQXRCO0FBQ0EsWUFBTUMsTUFBTSxHQUFHO0FBQ2JDLFFBQUFBLE1BQU0sRUFBRSxJQURLO0FBRWJDLFFBQUFBLFVBQVUsRUFBRSxHQUZDO0FBR2JDLFFBQUFBLElBQUksRUFBRUwsT0FITztBQUliTSxRQUFBQSxPQUFPLEVBQUU7QUFKSSxPQUFmO0FBTUEsYUFBT1AsR0FBRyxDQUFDUSxJQUFKLENBQVNMLE1BQVQsQ0FBUDtBQUNELEtBWEQsQ0FXRSxPQUFPTSxFQUFQLEVBQVc7QUFDWEMsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLEVBQVo7QUFDQVQsTUFBQUEsR0FBRyxDQUFDSSxNQUFKLENBQVcsR0FBWDtBQUNBLGFBQU9KLEdBQUcsQ0FBQ1EsSUFBSixDQUFTQyxFQUFULENBQVA7QUFDRDtBQUNGLEdBbEJtQjs7QUFtQnBCLFFBQU1HLHNCQUFOLENBQTZCYixHQUE3QixFQUFrQ0MsR0FBbEMsRUFBdUM7QUFDckMsUUFBSTtBQUNGO0FBRUEsWUFBTUMsT0FBTyxHQUFHLE1BQU1MLE9BQU8sQ0FBQ2lCLG9CQUFSLEVBQXRCO0FBQ0EsWUFBTVYsTUFBTSxHQUFHO0FBQ2JDLFFBQUFBLE1BQU0sRUFBRSxJQURLO0FBRWJDLFFBQUFBLFVBQVUsRUFBRSxHQUZDO0FBR2JDLFFBQUFBLElBQUksRUFBRUwsT0FITztBQUliTSxRQUFBQSxPQUFPLEVBQUU7QUFKSSxPQUFmO0FBTUEsYUFBT1AsR0FBRyxDQUFDUSxJQUFKLENBQVNMLE1BQVQsQ0FBUDtBQUNELEtBWEQsQ0FXRSxPQUFPTSxFQUFQLEVBQVc7QUFDWEMsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLEVBQVo7QUFDQVQsTUFBQUEsR0FBRyxDQUFDSSxNQUFKLENBQVcsR0FBWDtBQUNBLGFBQU9KLEdBQUcsQ0FBQ1EsSUFBSixDQUFTQyxFQUFULENBQVA7QUFDRDtBQUNGLEdBcENtQjs7QUFxQ3BCLFFBQU1LLGFBQU4sQ0FBb0JmLEdBQXBCLEVBQXlCQyxHQUF6QixFQUE4QjtBQUM1QixRQUFJO0FBQ0YsWUFBTWUsTUFBTSxHQUFHaEIsR0FBRyxDQUFDaUIsTUFBSixDQUFXRCxNQUExQjtBQUNBLFlBQU1aLE1BQU0sR0FBRyxNQUFNUCxPQUFPLENBQUNrQixhQUFSLENBQXNCQyxNQUF0QixDQUFyQjtBQUNBLGFBQU9mLEdBQUcsQ0FBQ1EsSUFBSixDQUFTTCxNQUFULENBQVA7QUFDRCxLQUpELENBSUUsT0FBT00sRUFBUCxFQUFXO0FBQ1hDLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixFQUFaO0FBQ0FULE1BQUFBLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVg7QUFDQSxhQUFPSixHQUFHLENBQUNRLElBQUosQ0FBU0MsRUFBVCxDQUFQO0FBQ0Q7QUFDRixHQS9DbUI7O0FBZ0RwQixRQUFNUSx1QkFBTixDQUE4QmxCLEdBQTlCLEVBQW1DQyxHQUFuQyxFQUF3QztBQUN0QyxRQUFJO0FBQ0YsWUFBTWUsTUFBTSxHQUFHaEIsR0FBRyxDQUFDaUIsTUFBSixDQUFXRCxNQUExQjtBQUNBLFlBQU1aLE1BQU0sR0FBRyxNQUFNUCxPQUFPLENBQUNxQix1QkFBUixDQUFnQ0YsTUFBaEMsQ0FBckI7QUFDQSxhQUFPZixHQUFHLENBQUNRLElBQUosQ0FBU0wsTUFBVCxDQUFQO0FBQ0QsS0FKRCxDQUlFLE9BQU9NLEVBQVAsRUFBVztBQUNYQyxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsRUFBWjtBQUNBVCxNQUFBQSxHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYO0FBQ0EsYUFBT0osR0FBRyxDQUFDUSxJQUFKLENBQVNDLEVBQVQsQ0FBUDtBQUNEO0FBQ0Y7O0FBMURtQixDQUF0QjtBQTZEQVMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZyQixFQUFBQSxVQUFVLEVBQUVELGFBQWEsQ0FBQ0MsVUFEWDtBQUVmYyxFQUFBQSxzQkFBc0IsRUFBRWYsYUFBYSxDQUFDZSxzQkFGdkI7QUFHZkUsRUFBQUEsYUFBYSxFQUFFakIsYUFBYSxDQUFDaUIsYUFIZDtBQUlmRyxFQUFBQSx1QkFBdUIsRUFBRXBCLGFBQWEsQ0FBQ29CO0FBSnhCLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2Fpc2h3YXJ5YS5nYXVkL0RvY3VtZW50cy93cmsvdGVzdC9jb250cm9sbGVyLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHl0ZGwgPSByZXF1aXJlKFwieXRkbC1jb3JlXCIpO1xuY29uc3Qgc2VydmljZSA9IHJlcXVpcmUoXCIuLi9zZXJ2aWNlL2luc3VyYW5jZV9zZXJ2aWNlXCIpO1xuXG5jb25zdCBpbnN1cmFuY2VDdHJsID0ge1xuICBhc3luYyB1cGxvYWRYbHN4KHJlcSwgcmVzKSB7XG4gICAgdHJ5IHtcbiAgICAgIC8vY29uc3QgdXJsID0gcmVxLmJvZHkudXJsO1xuXG4gICAgICBjb25zdCBnZXREYXRhID0gYXdhaXQgc2VydmljZS51cGxvYWRYbHN4RGF0YSgpO1xuICAgICAgY29uc3QgcmVzdWx0ID0ge1xuICAgICAgICBzdGF0dXM6IHRydWUsXG4gICAgICAgIHN0YXR1c0NvZGU6IDIwMCxcbiAgICAgICAgZGF0YTogZ2V0RGF0YSxcbiAgICAgICAgbWVzc2FnZTogXCJSZWNvcmQgdXBsb2FkZWQgc3VjY2Vzc2Z1bGx5XCIsXG4gICAgICB9O1xuICAgICAgcmV0dXJuIHJlcy5zZW5kKHJlc3VsdCk7XG4gICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgIGNvbnNvbGUubG9nKGV4KTtcbiAgICAgIHJlcy5zdGF0dXMoNDAwKTtcbiAgICAgIHJldHVybiByZXMuc2VuZChleCk7XG4gICAgfVxuICB9LFxuICBhc3luYyB1cGxvYWRYbHN4V29ya2VyVGhyZWFkKHJlcSwgcmVzKSB7XG4gICAgdHJ5IHtcbiAgICAgIC8vY29uc3QgdXJsID0gcmVxLmJvZHkudXJsO1xuXG4gICAgICBjb25zdCBnZXREYXRhID0gYXdhaXQgc2VydmljZS51cGxvYWRYbHN4VGhyZWFkRGF0YSgpO1xuICAgICAgY29uc3QgcmVzdWx0ID0ge1xuICAgICAgICBzdGF0dXM6IHRydWUsXG4gICAgICAgIHN0YXR1c0NvZGU6IDIwMCxcbiAgICAgICAgZGF0YTogZ2V0RGF0YSxcbiAgICAgICAgbWVzc2FnZTogXCJSZWNvcmQgdXBsb2FkZWQgc3VjY2Vzc2Z1bGx5XCIsXG4gICAgICB9O1xuICAgICAgcmV0dXJuIHJlcy5zZW5kKHJlc3VsdCk7XG4gICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgIGNvbnNvbGUubG9nKGV4KTtcbiAgICAgIHJlcy5zdGF0dXMoNDAwKTtcbiAgICAgIHJldHVybiByZXMuc2VuZChleCk7XG4gICAgfVxuICB9LFxuICBhc3luYyBnZXRQb2xpY3lJbmZvKHJlcSwgcmVzKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHVzZXJJZCA9IHJlcS5wYXJhbXMudXNlcklkO1xuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgc2VydmljZS5nZXRQb2xpY3lJbmZvKHVzZXJJZCk7XG4gICAgICByZXR1cm4gcmVzLnNlbmQocmVzdWx0KTtcbiAgICB9IGNhdGNoIChleCkge1xuICAgICAgY29uc29sZS5sb2coZXgpO1xuICAgICAgcmVzLnN0YXR1cyg0MDApO1xuICAgICAgcmV0dXJuIHJlcy5zZW5kKGV4KTtcbiAgICB9XG4gIH0sXG4gIGFzeW5jIGdldEFnZ3JlZ2F0ZWRQb2xpY3lJbmZvKHJlcSwgcmVzKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHVzZXJJZCA9IHJlcS5wYXJhbXMudXNlcklkO1xuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgc2VydmljZS5nZXRBZ2dyZWdhdGVkUG9saWN5SW5mbyh1c2VySWQpO1xuICAgICAgcmV0dXJuIHJlcy5zZW5kKHJlc3VsdCk7XG4gICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgIGNvbnNvbGUubG9nKGV4KTtcbiAgICAgIHJlcy5zdGF0dXMoNDAwKTtcbiAgICAgIHJldHVybiByZXMuc2VuZChleCk7XG4gICAgfVxuICB9LFxufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHVwbG9hZFhsc3g6IGluc3VyYW5jZUN0cmwudXBsb2FkWGxzeCxcbiAgdXBsb2FkWGxzeFdvcmtlclRocmVhZDogaW5zdXJhbmNlQ3RybC51cGxvYWRYbHN4V29ya2VyVGhyZWFkLFxuICBnZXRQb2xpY3lJbmZvOiBpbnN1cmFuY2VDdHJsLmdldFBvbGljeUluZm8sXG4gIGdldEFnZ3JlZ2F0ZWRQb2xpY3lJbmZvOiBpbnN1cmFuY2VDdHJsLmdldEFnZ3JlZ2F0ZWRQb2xpY3lJbmZvLFxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "insurance_controller.js"
      ],
      "names": [
        "ytdl",
        "require",
        "service",
        "insuranceCtrl",
        "uploadXlsx",
        "req",
        "res",
        "getData",
        "uploadXlsxData",
        "result",
        "status",
        "statusCode",
        "data",
        "message",
        "send",
        "ex",
        "console",
        "log",
        "uploadXlsxWorkerThread",
        "uploadXlsxThreadData",
        "getPolicyInfo",
        "userId",
        "params",
        "getAggregatedPolicyInfo",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/controller/",
      "sourcesContent": [
        "const ytdl = require(\"ytdl-core\");\nconst service = require(\"../service/insurance_service\");\n\nconst insuranceCtrl = {\n  async uploadXlsx(req, res) {\n    try {\n      //const url = req.body.url;\n\n      const getData = await service.uploadXlsxData();\n      const result = {\n        status: true,\n        statusCode: 200,\n        data: getData,\n        message: \"Record uploaded successfully\",\n      };\n      return res.send(result);\n    } catch (ex) {\n      console.log(ex);\n      res.status(400);\n      return res.send(ex);\n    }\n  },\n  async uploadXlsxWorkerThread(req, res) {\n    try {\n      //const url = req.body.url;\n\n      const getData = await service.uploadXlsxThreadData();\n      const result = {\n        status: true,\n        statusCode: 200,\n        data: getData,\n        message: \"Record uploaded successfully\",\n      };\n      return res.send(result);\n    } catch (ex) {\n      console.log(ex);\n      res.status(400);\n      return res.send(ex);\n    }\n  },\n  async getPolicyInfo(req, res) {\n    try {\n      const userId = req.params.userId;\n      const result = await service.getPolicyInfo(userId);\n      return res.send(result);\n    } catch (ex) {\n      console.log(ex);\n      res.status(400);\n      return res.send(ex);\n    }\n  },\n  async getAggregatedPolicyInfo(req, res) {\n    try {\n      const userId = req.params.userId;\n      const result = await service.getAggregatedPolicyInfo(userId);\n      return res.send(result);\n    } catch (ex) {\n      console.log(ex);\n      res.status(400);\n      return res.send(ex);\n    }\n  },\n};\n\nmodule.exports = {\n  uploadXlsx: insuranceCtrl.uploadXlsx,\n  uploadXlsxWorkerThread: insuranceCtrl.uploadXlsxWorkerThread,\n  getPolicyInfo: insuranceCtrl.getPolicyInfo,\n  getAggregatedPolicyInfo: insuranceCtrl.getAggregatedPolicyInfo,\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635522722406
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/aishwarya.gaud/Documents/wrk/test/service/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"filename\":\"/home/aishwarya.gaud/Documents/wrk/test/service/insurance_service.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/service/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/aishwarya.gaud/Documents/wrk/test",
      "filename": "/home/aishwarya.gaud/Documents/wrk/test/service/insurance_service.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/aishwarya.gaud/Documents/wrk/test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/aishwarya.gaud/Documents/wrk/test/service/insurance_service.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/aishwarya.gaud/Documents/wrk/test/service/insurance_service.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/service/",
        "sourceFileName": "insurance_service.js"
      }
    },
    "ast": null,
    "code": "const dbInterface = require(\"../interface/db-interface\");\n\nconst {\n  createVideoQueue\n} = require(\"../queue/video\");\n\nconst path = require(\"path\");\n\nconst folderName = \"files\";\n\nconst {\n  accountModel\n} = require(\"../models/account\");\n\nconst {\n  agentModel\n} = require(\"../models/agent\");\n\nconst {\n  policyCarrierModel\n} = require(\"../models/policy_carrier\");\n\nconst {\n  policyCategoryModel\n} = require(\"../models/policy_category\");\n\nconst {\n  policyInfoModel\n} = require(\"../models/policy_info\");\n\nconst {\n  userModel\n} = require(\"../models/user\");\n\nconst ObjectId = require(\"mongodb\").ObjectID;\n\nconst {\n  Worker\n} = require(\"worker_threads\"); // Requiring module\n\n\nconst reader = require(\"xlsx\");\n\nconst {\n  resolve\n} = require(\"path\");\n\nconst insuranceService = {\n  async uploadXlsxData() {\n    try {\n      // Reading our test file\n      const file = reader.readFile(\"./data-sheet.xlsx\");\n      let data = [];\n      const sheets = file.SheetNames;\n\n      for (let i = 0; i < sheets.length; i++) {\n        const temp = reader.utils.sheet_to_json(file.Sheets[file.SheetNames[i]]);\n        temp.forEach(res => {\n          data.push(res);\n        });\n      } // Printing data\n      //console.log(\"XLSX DATA :\", data);\n\n\n      data.forEach(async item => {\n        const agentData = {\n          agent_name: item.agent\n        };\n        const accountData = {\n          account_type: item.account_type,\n          account_name: item.account_name\n        };\n        const policyCarrierData = {\n          company_name: item.company_name\n        };\n        const policyCategoryData = {\n          category_name: item.category_name\n        };\n        const userData = {\n          user_type: item.userType,\n          first_name: item.firstname,\n          date_of_birth: item.dob,\n          address: item.address,\n          contact_number: item.phone,\n          city: item.city,\n          state: item.state,\n          zip_code: item.zip,\n          email: item.email,\n          gender: item.gender || \"\"\n        };\n        const policyInfoData = {\n          policy_mode: item.policy_mode,\n          producer: item.producer,\n          policy_number: item.policy_number,\n          premium_amount: item.premium_amount,\n          policy_type: item.policy_type,\n          //company_collection_id: item.company_collection_id,\n          //policy_category: item.policy_category,\n          policy_start_date: item.policy_start_date,\n          policy_end_date: item.policy_end_date,\n          csr: item.csr,\n          //account_id: item.account_id,\n          primary: item.primary,\n          //user_id: item.user_id,\n          //collection_id: item.collection_id,\n          has_active_client_id: item.has_active_client_id\n        };\n        const [agentCreate, accountCreate, policyCarrierCreate, policyCategoryCreate, userDataCreate] = await Promise.all([dbInterface.createOrUpdateRecord(agentModel, agentData, agentData), dbInterface.createOrUpdateRecord(accountModel, accountData, accountData), dbInterface.createOrUpdateRecord(policyCarrierModel, policyCarrierData, policyCarrierData), dbInterface.createOrUpdateRecord(policyCategoryModel, policyCategoryData, policyCategoryData), dbInterface.createOrUpdateRecord(userModel, {\n          contact_number: item.phone\n        }, userData)]);\n        console.log(`First call: `, agentCreate);\n        console.log(`Second call: `, accountCreate);\n        console.log(`Third call: `, policyCarrierCreate);\n        console.log(`Fourth call: `, policyCategoryCreate);\n        console.log(`Fifth call: `, userDataCreate);\n        policyInfoData.company_collection_id = policyCarrierCreate.data._id;\n        policyInfoData.policy_category = policyCategoryCreate.data._id;\n        policyInfoData.account_id = accountCreate.data._id;\n        policyInfoData.user_id = userDataCreate.data._id;\n        policyInfoData.collection_id = agentCreate.data._id;\n        console.log(\" policyInfoData $$%$%$%$% :\", policyInfoData);\n        const policyDataCreate = await dbInterface.createOrUpdateRecord(policyInfoModel, {\n          policy_number: item.policy_number\n        }, policyInfoData); //console.log(\" policyDataCreate :\", policyDataCreate);\n      });\n      return data;\n    } catch (ex) {\n      console.log(ex);\n      throw {\n        error: ex\n      };\n    }\n  },\n\n  async uploadXlsxThreadData() {\n    return new Promise((resolve, reject) => {\n      try {\n        const file = \"./data-sheet.xlsx\";\n        const worker = new Worker(\"./service/thread/worker.js\", {\n          workerData: {\n            fileName: file\n          }\n        });\n        worker.once(\"message\", result => {\n          console.log(`Uploaded result :`, result);\n          resolve(result);\n        });\n        worker.on(\"error\", error => {\n          console.log(error);\n          reject({\n            error: error\n          });\n        });\n        worker.on(\"exit\", exitCode => {\n          console.log(`It exited with code ${exitCode}`);\n          reject({\n            error: exitCode\n          });\n        });\n        console.log(\"Execution in main thread\"); //return { message: \"Excel sheet uploaded successfully\" };\n      } catch (ex) {\n        console.log(ex);\n        reject({\n          error: ex\n        }); //throw { error: ex };\n      }\n    });\n  },\n\n  async getPolicyInfo(userId) {\n    try {\n      const policyDataCreate = await dbInterface.getRecordByCondition(policyInfoModel, {\n        userId: userId\n      }, {});\n      return policyDataCreate;\n    } catch (ex) {\n      console.log(ex);\n      throw {\n        error: ex\n      };\n    }\n  },\n\n  async getAggregatedPolicyInfo(userId) {\n    try {\n      const aggregatedQuery = [{\n        $match: {\n          _id: ObjectId(userId)\n        }\n      }, {\n        $lookup: {\n          from: \"policy_infos\",\n          localField: \"_id\",\n          foreignField: \"user_id\",\n          as: \"policy_info\"\n        }\n      }, {\n        $unwind: \"$policy_info\"\n      }, {\n        $lookup: {\n          from: \"accounts\",\n          let: {\n            account_id: \"$policy_info.account_id\"\n          },\n          pipeline: [{\n            $match: {\n              $expr: {\n                $eq: [\"$_id\", \"$$account_id\"]\n              }\n            }\n          }],\n          as: \"accountInfo\"\n        }\n      }, {\n        $lookup: {\n          from: \"policy_categories\",\n          let: {\n            policy_category_id: \"$policy_info.policy_category\"\n          },\n          pipeline: [{\n            $match: {\n              $expr: {\n                $eq: [\"$_id\", \"$$policy_category_id\"]\n              }\n            }\n          }],\n          as: \"policyCategoryInfo\"\n        }\n      }, {\n        $lookup: {\n          from: \"agents\",\n          let: {\n            collection_id: \"$policy_info.collection_id\"\n          },\n          pipeline: [{\n            $match: {\n              $expr: {\n                $eq: [\"$_id\", \"$$collection_id\"]\n              }\n            }\n          }],\n          as: \"agentInfo\"\n        }\n      }, {\n        $lookup: {\n          from: \"policy_carriers\",\n          let: {\n            company_collection_id: \"$policy_info.company_collection_id\"\n          },\n          pipeline: [{\n            $match: {\n              $expr: {\n                $eq: [\"$_id\", \"$$company_collection_id\"]\n              }\n            }\n          }],\n          as: \"policyCarrierInfo\"\n        }\n      }, {\n        $addFields: {\n          accountDetails: {\n            $mergeObjects: [{\n              $arrayElemAt: [\"$accountInfo\", 0]\n            }, \"$policy_info\"]\n          },\n          policyCategoryDetails: {\n            $mergeObjects: [{\n              $arrayElemAt: [\"$policyCategoryInfo\", 0]\n            }, \"$policy_info\"]\n          },\n          agentDetails: {\n            $mergeObjects: [{\n              $arrayElemAt: [\"$agentInfo\", 0]\n            }, \"$policy_info\"]\n          },\n          policyCarrierDetails: {\n            $mergeObjects: [{\n              $arrayElemAt: [\"$policyCarrierInfo\", 0]\n            }, \"$policy_info\"]\n          }\n        }\n      }, {\n        $group: {\n          _id: \"$_id\",\n          userId: {\n            $first: \"$_id\"\n          },\n          contact_number: {\n            $first: \"$contact_number\"\n          },\n          address: {\n            $first: \"$address\"\n          },\n          city: {\n            $first: \"$city\"\n          },\n          date_of_birth: {\n            $first: \"$date_of_birth\"\n          },\n          email: {\n            $first: \"$email\"\n          },\n          first_name: {\n            $first: \"$first_name\"\n          },\n          gender: {\n            $first: \"$gender\"\n          },\n          state: {\n            $first: \"$state\"\n          },\n          user_type: {\n            $first: \"$user_type\"\n          },\n          zip_code: {\n            $first: \"$zip_code\"\n          },\n          policy_details: {\n            $push: \"$accountDetails\",\n            $push: \"$policyCategoryDetails\",\n            $push: \"$agentDetails\",\n            $push: \"$policyCarrierDetails\"\n          }\n        }\n      }]; //console.log(\" aggregatedQuery :\", JSON.stringify(aggregatedQuery));\n\n      const getAggregatedQueryDetails = await dbInterface.getAggregatedRecordsByCondition(userModel, aggregatedQuery);\n      return getAggregatedQueryDetails;\n    } catch (ex) {\n      console.log(ex);\n      throw {\n        error: ex\n      };\n    }\n  },\n\n  async createJobInQueue(url) {\n    try {\n      const inputData = {\n        url,\n        status: \"started\"\n      };\n      const job = await dbInterface.createRecord(inputData);\n      await createVideoQueue().add({\n        url,\n        id: job.id\n      });\n      return job;\n    } catch (ex) {\n      console.log(ex);\n      throw {\n        error: ex\n      };\n    }\n  }\n\n};\nmodule.exports = {\n  createJobInQueue: insuranceService.createJobInQueue,\n  uploadXlsxData: insuranceService.uploadXlsxData,\n  uploadXlsxThreadData: insuranceService.uploadXlsxThreadData,\n  getPolicyInfo: insuranceService.getPolicyInfo,\n  getAggregatedPolicyInfo: insuranceService.getAggregatedPolicyInfo\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "insurance_service.js"
      ],
      "names": [
        "dbInterface",
        "require",
        "createVideoQueue",
        "path",
        "folderName",
        "accountModel",
        "agentModel",
        "policyCarrierModel",
        "policyCategoryModel",
        "policyInfoModel",
        "userModel",
        "ObjectId",
        "ObjectID",
        "Worker",
        "reader",
        "resolve",
        "insuranceService",
        "uploadXlsxData",
        "file",
        "readFile",
        "data",
        "sheets",
        "SheetNames",
        "i",
        "length",
        "temp",
        "utils",
        "sheet_to_json",
        "Sheets",
        "forEach",
        "res",
        "push",
        "item",
        "agentData",
        "agent_name",
        "agent",
        "accountData",
        "account_type",
        "account_name",
        "policyCarrierData",
        "company_name",
        "policyCategoryData",
        "category_name",
        "userData",
        "user_type",
        "userType",
        "first_name",
        "firstname",
        "date_of_birth",
        "dob",
        "address",
        "contact_number",
        "phone",
        "city",
        "state",
        "zip_code",
        "zip",
        "email",
        "gender",
        "policyInfoData",
        "policy_mode",
        "producer",
        "policy_number",
        "premium_amount",
        "policy_type",
        "policy_start_date",
        "policy_end_date",
        "csr",
        "primary",
        "has_active_client_id",
        "agentCreate",
        "accountCreate",
        "policyCarrierCreate",
        "policyCategoryCreate",
        "userDataCreate",
        "Promise",
        "all",
        "createOrUpdateRecord",
        "console",
        "log",
        "company_collection_id",
        "_id",
        "policy_category",
        "account_id",
        "user_id",
        "collection_id",
        "policyDataCreate",
        "ex",
        "error",
        "uploadXlsxThreadData",
        "reject",
        "worker",
        "workerData",
        "fileName",
        "once",
        "result",
        "on",
        "exitCode",
        "getPolicyInfo",
        "userId",
        "getRecordByCondition",
        "getAggregatedPolicyInfo",
        "aggregatedQuery",
        "$match",
        "$lookup",
        "from",
        "localField",
        "foreignField",
        "as",
        "$unwind",
        "let",
        "pipeline",
        "$expr",
        "$eq",
        "policy_category_id",
        "$addFields",
        "accountDetails",
        "$mergeObjects",
        "$arrayElemAt",
        "policyCategoryDetails",
        "agentDetails",
        "policyCarrierDetails",
        "$group",
        "$first",
        "policy_details",
        "$push",
        "getAggregatedQueryDetails",
        "getAggregatedRecordsByCondition",
        "createJobInQueue",
        "url",
        "inputData",
        "status",
        "job",
        "createRecord",
        "add",
        "id",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/service/",
      "sourcesContent": [
        "const dbInterface = require(\"../interface/db-interface\");\nconst { createVideoQueue } = require(\"../queue/video\");\nconst path = require(\"path\");\nconst folderName = \"files\";\nconst { accountModel } = require(\"../models/account\");\nconst { agentModel } = require(\"../models/agent\");\nconst { policyCarrierModel } = require(\"../models/policy_carrier\");\nconst { policyCategoryModel } = require(\"../models/policy_category\");\nconst { policyInfoModel } = require(\"../models/policy_info\");\nconst { userModel } = require(\"../models/user\");\nconst ObjectId = require(\"mongodb\").ObjectID;\nconst { Worker } = require(\"worker_threads\");\n// Requiring module\nconst reader = require(\"xlsx\");\nconst { resolve } = require(\"path\");\n\nconst insuranceService = {\n  async uploadXlsxData() {\n    try {\n      // Reading our test file\n      const file = reader.readFile(\"./data-sheet.xlsx\");\n\n      let data = [];\n\n      const sheets = file.SheetNames;\n\n      for (let i = 0; i < sheets.length; i++) {\n        const temp = reader.utils.sheet_to_json(\n          file.Sheets[file.SheetNames[i]]\n        );\n        temp.forEach((res) => {\n          data.push(res);\n        });\n      }\n\n      // Printing data\n      //console.log(\"XLSX DATA :\", data);\n\n      data.forEach(async (item) => {\n        const agentData = { agent_name: item.agent };\n        const accountData = {\n          account_type: item.account_type,\n          account_name: item.account_name,\n        };\n        const policyCarrierData = {\n          company_name: item.company_name,\n        };\n        const policyCategoryData = {\n          category_name: item.category_name,\n        };\n        const userData = {\n          user_type: item.userType,\n          first_name: item.firstname,\n          date_of_birth: item.dob,\n          address: item.address,\n          contact_number: item.phone,\n          city: item.city,\n          state: item.state,\n          zip_code: item.zip,\n          email: item.email,\n          gender: item.gender || \"\",\n        };\n        const policyInfoData = {\n          policy_mode: item.policy_mode,\n          producer: item.producer,\n          policy_number: item.policy_number,\n          premium_amount: item.premium_amount,\n          policy_type: item.policy_type,\n          //company_collection_id: item.company_collection_id,\n          //policy_category: item.policy_category,\n          policy_start_date: item.policy_start_date,\n          policy_end_date: item.policy_end_date,\n          csr: item.csr,\n          //account_id: item.account_id,\n          primary: item.primary,\n          //user_id: item.user_id,\n          //collection_id: item.collection_id,\n          has_active_client_id: item.has_active_client_id,\n        };\n\n        const [\n          agentCreate,\n          accountCreate,\n          policyCarrierCreate,\n          policyCategoryCreate,\n          userDataCreate,\n        ] = await Promise.all([\n          dbInterface.createOrUpdateRecord(agentModel, agentData, agentData),\n          dbInterface.createOrUpdateRecord(\n            accountModel,\n            accountData,\n            accountData\n          ),\n          dbInterface.createOrUpdateRecord(\n            policyCarrierModel,\n            policyCarrierData,\n            policyCarrierData\n          ),\n          dbInterface.createOrUpdateRecord(\n            policyCategoryModel,\n            policyCategoryData,\n            policyCategoryData\n          ),\n          dbInterface.createOrUpdateRecord(\n            userModel,\n            { contact_number: item.phone },\n            userData\n          ),\n        ]);\n\n        console.log(`First call: `, agentCreate);\n        console.log(`Second call: `, accountCreate);\n        console.log(`Third call: `, policyCarrierCreate);\n        console.log(`Fourth call: `, policyCategoryCreate);\n        console.log(`Fifth call: `, userDataCreate);\n\n        policyInfoData.company_collection_id = policyCarrierCreate.data._id;\n        policyInfoData.policy_category = policyCategoryCreate.data._id;\n        policyInfoData.account_id = accountCreate.data._id;\n        policyInfoData.user_id = userDataCreate.data._id;\n        policyInfoData.collection_id = agentCreate.data._id;\n\n        console.log(\" policyInfoData $$%$%$%$% :\", policyInfoData);\n        const policyDataCreate = await dbInterface.createOrUpdateRecord(\n          policyInfoModel,\n          { policy_number: item.policy_number },\n          policyInfoData\n        );\n        //console.log(\" policyDataCreate :\", policyDataCreate);\n      });\n\n      return data;\n    } catch (ex) {\n      console.log(ex);\n      throw { error: ex };\n    }\n  },\n  async uploadXlsxThreadData() {\n    return new Promise((resolve, reject) => {\n      try {\n        const file = \"./data-sheet.xlsx\";\n\n        const worker = new Worker(\"./service/thread/worker.js\", {\n          workerData: { fileName: file },\n        });\n\n        worker.once(\"message\", (result) => {\n          console.log(`Uploaded result :`, result);\n          resolve(result);\n        });\n\n        worker.on(\"error\", (error) => {\n          console.log(error);\n          reject({ error: error });\n        });\n\n        worker.on(\"exit\", (exitCode) => {\n          console.log(`It exited with code ${exitCode}`);\n          reject({ error: exitCode });\n        });\n\n        console.log(\"Execution in main thread\");\n\n        //return { message: \"Excel sheet uploaded successfully\" };\n      } catch (ex) {\n        console.log(ex);\n        reject({ error: ex });\n        //throw { error: ex };\n      }\n    });\n  },\n  async getPolicyInfo(userId) {\n    try {\n      const policyDataCreate = await dbInterface.getRecordByCondition(\n        policyInfoModel,\n        { userId: userId },\n        {}\n      );\n\n      return policyDataCreate;\n    } catch (ex) {\n      console.log(ex);\n      throw { error: ex };\n    }\n  },\n  async getAggregatedPolicyInfo(userId) {\n    try {\n      const aggregatedQuery = [\n        { $match: { _id: ObjectId(userId) } },\n        {\n          $lookup: {\n            from: \"policy_infos\",\n            localField: \"_id\",\n            foreignField: \"user_id\",\n            as: \"policy_info\",\n          },\n        },\n        { $unwind: \"$policy_info\" },\n        {\n          $lookup: {\n            from: \"accounts\",\n            let: { account_id: \"$policy_info.account_id\" },\n            pipeline: [\n              {\n                $match: {\n                  $expr: { $eq: [\"$_id\", \"$$account_id\"] },\n                },\n              },\n            ],\n            as: \"accountInfo\",\n          },\n        },\n        {\n          $lookup: {\n            from: \"policy_categories\",\n            let: { policy_category_id: \"$policy_info.policy_category\" },\n            pipeline: [\n              {\n                $match: {\n                  $expr: { $eq: [\"$_id\", \"$$policy_category_id\"] },\n                },\n              },\n            ],\n            as: \"policyCategoryInfo\",\n          },\n        },\n        {\n          $lookup: {\n            from: \"agents\",\n            let: { collection_id: \"$policy_info.collection_id\" },\n            pipeline: [\n              {\n                $match: {\n                  $expr: { $eq: [\"$_id\", \"$$collection_id\"] },\n                },\n              },\n            ],\n            as: \"agentInfo\",\n          },\n        },\n        {\n          $lookup: {\n            from: \"policy_carriers\",\n            let: {\n              company_collection_id: \"$policy_info.company_collection_id\",\n            },\n            pipeline: [\n              {\n                $match: {\n                  $expr: { $eq: [\"$_id\", \"$$company_collection_id\"] },\n                },\n              },\n            ],\n            as: \"policyCarrierInfo\",\n          },\n        },\n        {\n          $addFields: {\n            accountDetails: {\n              $mergeObjects: [\n                { $arrayElemAt: [\"$accountInfo\", 0] },\n                \"$policy_info\",\n              ],\n            },\n            policyCategoryDetails: {\n              $mergeObjects: [\n                { $arrayElemAt: [\"$policyCategoryInfo\", 0] },\n                \"$policy_info\",\n              ],\n            },\n            agentDetails: {\n              $mergeObjects: [\n                { $arrayElemAt: [\"$agentInfo\", 0] },\n                \"$policy_info\",\n              ],\n            },\n            policyCarrierDetails: {\n              $mergeObjects: [\n                { $arrayElemAt: [\"$policyCarrierInfo\", 0] },\n                \"$policy_info\",\n              ],\n            },\n          },\n        },\n        {\n          $group: {\n            _id: \"$_id\",\n            userId: { $first: \"$_id\" },\n            contact_number: { $first: \"$contact_number\" },\n            address: { $first: \"$address\" },\n            city: { $first: \"$city\" },\n            date_of_birth: { $first: \"$date_of_birth\" },\n            email: { $first: \"$email\" },\n            first_name: { $first: \"$first_name\" },\n            gender: { $first: \"$gender\" },\n            state: { $first: \"$state\" },\n            user_type: { $first: \"$user_type\" },\n            zip_code: { $first: \"$zip_code\" },\n            policy_details: {\n              $push: \"$accountDetails\",\n              $push: \"$policyCategoryDetails\",\n              $push: \"$agentDetails\",\n              $push: \"$policyCarrierDetails\",\n            },\n          },\n        },\n      ];\n      //console.log(\" aggregatedQuery :\", JSON.stringify(aggregatedQuery));\n      const getAggregatedQueryDetails = await dbInterface.getAggregatedRecordsByCondition(\n        userModel,\n        aggregatedQuery\n      );\n\n      return getAggregatedQueryDetails;\n    } catch (ex) {\n      console.log(ex);\n      throw { error: ex };\n    }\n  },\n  async createJobInQueue(url) {\n    try {\n      const inputData = {\n        url,\n        status: \"started\",\n      };\n      const job = await dbInterface.createRecord(inputData);\n      await createVideoQueue().add({ url, id: job.id });\n      return job;\n    } catch (ex) {\n      console.log(ex);\n      throw { error: ex };\n    }\n  },\n};\n\nmodule.exports = {\n  createJobInQueue: insuranceService.createJobInQueue,\n  uploadXlsxData: insuranceService.uploadXlsxData,\n  uploadXlsxThreadData: insuranceService.uploadXlsxThreadData,\n  getPolicyInfo: insuranceService.getPolicyInfo,\n  getAggregatedPolicyInfo: insuranceService.getAggregatedPolicyInfo,\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635603693509
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/aishwarya.gaud/Documents/wrk/test/models/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"filename\":\"/home/aishwarya.gaud/Documents/wrk/test/models/account.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/models/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/aishwarya.gaud/Documents/wrk/test",
      "filename": "/home/aishwarya.gaud/Documents/wrk/test/models/account.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/aishwarya.gaud/Documents/wrk/test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/aishwarya.gaud/Documents/wrk/test/models/account.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/aishwarya.gaud/Documents/wrk/test/models/account.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/models/",
        "sourceFileName": "account.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nlet mongoose = require(\"mongoose\");\n\nconst timestamps = require(\"mongoose-timestamp\");\n\nconst opts = {\n  createdAt: \"created_at\",\n  updatedAt: \"updated_at\"\n};\nlet accountSchema = new mongoose.Schema({\n  account_id: {\n    type: mongoose.Schema.Types.ObjectId //required: true,\n\n  },\n  account_type: {\n    type: String //unique: true,\n    //required: [true, \"account_type should be unique.\"],\n\n  },\n  account_name: {\n    type: String,\n    unique: true,\n    required: [true, \"account_name should be unique.\"]\n  }\n});\naccountSchema.plugin(timestamps, opts);\nconst accountModel = mongoose.model(\"account\", accountSchema);\nmodule.exports = {\n  accountModel: accountModel\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY291bnQuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwidGltZXN0YW1wcyIsIm9wdHMiLCJjcmVhdGVkQXQiLCJ1cGRhdGVkQXQiLCJhY2NvdW50U2NoZW1hIiwiU2NoZW1hIiwiYWNjb3VudF9pZCIsInR5cGUiLCJUeXBlcyIsIk9iamVjdElkIiwiYWNjb3VudF90eXBlIiwiU3RyaW5nIiwiYWNjb3VudF9uYW1lIiwidW5pcXVlIiwicmVxdWlyZWQiLCJwbHVnaW4iLCJhY2NvdW50TW9kZWwiLCJtb2RlbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBLElBQUlBLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7O0FBQ0EsTUFBTUMsVUFBVSxHQUFHRCxPQUFPLENBQUMsb0JBQUQsQ0FBMUI7O0FBQ0EsTUFBTUUsSUFBSSxHQUFHO0FBQ1hDLEVBQUFBLFNBQVMsRUFBRSxZQURBO0FBRVhDLEVBQUFBLFNBQVMsRUFBRTtBQUZBLENBQWI7QUFLQSxJQUFJQyxhQUFhLEdBQUcsSUFBSU4sUUFBUSxDQUFDTyxNQUFiLENBQW9CO0FBQ3RDQyxFQUFBQSxVQUFVLEVBQUU7QUFDVkMsSUFBQUEsSUFBSSxFQUFFVCxRQUFRLENBQUNPLE1BQVQsQ0FBZ0JHLEtBQWhCLENBQXNCQyxRQURsQixDQUVWOztBQUZVLEdBRDBCO0FBS3RDQyxFQUFBQSxZQUFZLEVBQUU7QUFDWkgsSUFBQUEsSUFBSSxFQUFFSSxNQURNLENBRVo7QUFDQTs7QUFIWSxHQUx3QjtBQVV0Q0MsRUFBQUEsWUFBWSxFQUFFO0FBQ1pMLElBQUFBLElBQUksRUFBRUksTUFETTtBQUVaRSxJQUFBQSxNQUFNLEVBQUUsSUFGSTtBQUdaQyxJQUFBQSxRQUFRLEVBQUUsQ0FBQyxJQUFELEVBQU8sZ0NBQVA7QUFIRTtBQVZ3QixDQUFwQixDQUFwQjtBQWlCQVYsYUFBYSxDQUFDVyxNQUFkLENBQXFCZixVQUFyQixFQUFpQ0MsSUFBakM7QUFFQSxNQUFNZSxZQUFZLEdBQUdsQixRQUFRLENBQUNtQixLQUFULENBQWUsU0FBZixFQUEwQmIsYUFBMUIsQ0FBckI7QUFDQWMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZILEVBQUFBLFlBQVksRUFBRUE7QUFEQyxDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9haXNod2FyeWEuZ2F1ZC9Eb2N1bWVudHMvd3JrL3Rlc3QvbW9kZWxzLyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xubGV0IG1vbmdvb3NlID0gcmVxdWlyZShcIm1vbmdvb3NlXCIpO1xuY29uc3QgdGltZXN0YW1wcyA9IHJlcXVpcmUoXCJtb25nb29zZS10aW1lc3RhbXBcIik7XG5jb25zdCBvcHRzID0ge1xuICBjcmVhdGVkQXQ6IFwiY3JlYXRlZF9hdFwiLFxuICB1cGRhdGVkQXQ6IFwidXBkYXRlZF9hdFwiLFxufTtcblxubGV0IGFjY291bnRTY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKHtcbiAgYWNjb3VudF9pZDoge1xuICAgIHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAvL3JlcXVpcmVkOiB0cnVlLFxuICB9LFxuICBhY2NvdW50X3R5cGU6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgLy91bmlxdWU6IHRydWUsXG4gICAgLy9yZXF1aXJlZDogW3RydWUsIFwiYWNjb3VudF90eXBlIHNob3VsZCBiZSB1bmlxdWUuXCJdLFxuICB9LFxuICBhY2NvdW50X25hbWU6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgdW5pcXVlOiB0cnVlLFxuICAgIHJlcXVpcmVkOiBbdHJ1ZSwgXCJhY2NvdW50X25hbWUgc2hvdWxkIGJlIHVuaXF1ZS5cIl0sXG4gIH0sXG59KTtcblxuYWNjb3VudFNjaGVtYS5wbHVnaW4odGltZXN0YW1wcywgb3B0cyk7XG5cbmNvbnN0IGFjY291bnRNb2RlbCA9IG1vbmdvb3NlLm1vZGVsKFwiYWNjb3VudFwiLCBhY2NvdW50U2NoZW1hKTtcbm1vZHVsZS5leHBvcnRzID0ge1xuICBhY2NvdW50TW9kZWw6IGFjY291bnRNb2RlbCxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "account.js"
      ],
      "names": [
        "mongoose",
        "require",
        "timestamps",
        "opts",
        "createdAt",
        "updatedAt",
        "accountSchema",
        "Schema",
        "account_id",
        "type",
        "Types",
        "ObjectId",
        "account_type",
        "String",
        "account_name",
        "unique",
        "required",
        "plugin",
        "accountModel",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,oBAAD,CAA1B;;AACA,MAAME,IAAI,GAAG;AACXC,EAAAA,SAAS,EAAE,YADA;AAEXC,EAAAA,SAAS,EAAE;AAFA,CAAb;AAKA,IAAIC,aAAa,GAAG,IAAIN,QAAQ,CAACO,MAAb,CAAoB;AACtCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EAAET,QAAQ,CAACO,MAAT,CAAgBG,KAAhB,CAAsBC,QADlB,CAEV;;AAFU,GAD0B;AAKtCC,EAAAA,YAAY,EAAE;AACZH,IAAAA,IAAI,EAAEI,MADM,CAEZ;AACA;;AAHY,GALwB;AAUtCC,EAAAA,YAAY,EAAE;AACZL,IAAAA,IAAI,EAAEI,MADM;AAEZE,IAAAA,MAAM,EAAE,IAFI;AAGZC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,gCAAP;AAHE;AAVwB,CAApB,CAApB;AAiBAV,aAAa,CAACW,MAAd,CAAqBf,UAArB,EAAiCC,IAAjC;AAEA,MAAMe,YAAY,GAAGlB,QAAQ,CAACmB,KAAT,CAAe,SAAf,EAA0Bb,aAA1B,CAArB;AACAc,MAAM,CAACC,OAAP,GAAiB;AACfH,EAAAA,YAAY,EAAEA;AADC,CAAjB",
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/models/",
      "sourcesContent": [
        "\"use strict\";\nlet mongoose = require(\"mongoose\");\nconst timestamps = require(\"mongoose-timestamp\");\nconst opts = {\n  createdAt: \"created_at\",\n  updatedAt: \"updated_at\",\n};\n\nlet accountSchema = new mongoose.Schema({\n  account_id: {\n    type: mongoose.Schema.Types.ObjectId,\n    //required: true,\n  },\n  account_type: {\n    type: String,\n    //unique: true,\n    //required: [true, \"account_type should be unique.\"],\n  },\n  account_name: {\n    type: String,\n    unique: true,\n    required: [true, \"account_name should be unique.\"],\n  },\n});\n\naccountSchema.plugin(timestamps, opts);\n\nconst accountModel = mongoose.model(\"account\", accountSchema);\nmodule.exports = {\n  accountModel: accountModel,\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1634927092306
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/aishwarya.gaud/Documents/wrk/test/models/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"filename\":\"/home/aishwarya.gaud/Documents/wrk/test/models/agent.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/models/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/aishwarya.gaud/Documents/wrk/test",
      "filename": "/home/aishwarya.gaud/Documents/wrk/test/models/agent.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/aishwarya.gaud/Documents/wrk/test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/aishwarya.gaud/Documents/wrk/test/models/agent.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/aishwarya.gaud/Documents/wrk/test/models/agent.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/models/",
        "sourceFileName": "agent.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nlet mongoose = require(\"mongoose\");\n\nconst timestamps = require(\"mongoose-timestamp\");\n\nconst opts = {\n  createdAt: \"created_at\",\n  updatedAt: \"updated_at\"\n};\nlet agentSchema = new mongoose.Schema({\n  agent_id: {\n    type: String\n  },\n  agent_name: {\n    type: String,\n    unique: true,\n    required: [true, \"agent_name should be unique.\"]\n  }\n});\nagentSchema.plugin(timestamps, opts);\nconst agentModel = mongoose.model(\"agent\", agentSchema);\nmodule.exports = {\n  agentModel: agentModel\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFnZW50LmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsInRpbWVzdGFtcHMiLCJvcHRzIiwiY3JlYXRlZEF0IiwidXBkYXRlZEF0IiwiYWdlbnRTY2hlbWEiLCJTY2hlbWEiLCJhZ2VudF9pZCIsInR5cGUiLCJTdHJpbmciLCJhZ2VudF9uYW1lIiwidW5pcXVlIiwicmVxdWlyZWQiLCJwbHVnaW4iLCJhZ2VudE1vZGVsIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUNBLE1BQU1DLFVBQVUsR0FBR0QsT0FBTyxDQUFDLG9CQUFELENBQTFCOztBQUNBLE1BQU1FLElBQUksR0FBRztBQUNYQyxFQUFBQSxTQUFTLEVBQUUsWUFEQTtBQUVYQyxFQUFBQSxTQUFTLEVBQUU7QUFGQSxDQUFiO0FBS0EsSUFBSUMsV0FBVyxHQUFHLElBQUlOLFFBQVEsQ0FBQ08sTUFBYixDQUFvQjtBQUNwQ0MsRUFBQUEsUUFBUSxFQUFFO0FBQ1JDLElBQUFBLElBQUksRUFBRUM7QUFERSxHQUQwQjtBQUlwQ0MsRUFBQUEsVUFBVSxFQUFFO0FBQ1ZGLElBQUFBLElBQUksRUFBRUMsTUFESTtBQUVWRSxJQUFBQSxNQUFNLEVBQUUsSUFGRTtBQUdWQyxJQUFBQSxRQUFRLEVBQUUsQ0FBQyxJQUFELEVBQU8sOEJBQVA7QUFIQTtBQUp3QixDQUFwQixDQUFsQjtBQVdBUCxXQUFXLENBQUNRLE1BQVosQ0FBbUJaLFVBQW5CLEVBQStCQyxJQUEvQjtBQUVBLE1BQU1ZLFVBQVUsR0FBR2YsUUFBUSxDQUFDZ0IsS0FBVCxDQUFlLE9BQWYsRUFBd0JWLFdBQXhCLENBQW5CO0FBQ0FXLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmSCxFQUFBQSxVQUFVLEVBQUVBO0FBREcsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvYWlzaHdhcnlhLmdhdWQvRG9jdW1lbnRzL3dyay90ZXN0L21vZGVscy8iLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmxldCBtb25nb29zZSA9IHJlcXVpcmUoXCJtb25nb29zZVwiKTtcbmNvbnN0IHRpbWVzdGFtcHMgPSByZXF1aXJlKFwibW9uZ29vc2UtdGltZXN0YW1wXCIpO1xuY29uc3Qgb3B0cyA9IHtcbiAgY3JlYXRlZEF0OiBcImNyZWF0ZWRfYXRcIixcbiAgdXBkYXRlZEF0OiBcInVwZGF0ZWRfYXRcIixcbn07XG5cbmxldCBhZ2VudFNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xuICBhZ2VudF9pZDoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgfSxcbiAgYWdlbnRfbmFtZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICB1bmlxdWU6IHRydWUsXG4gICAgcmVxdWlyZWQ6IFt0cnVlLCBcImFnZW50X25hbWUgc2hvdWxkIGJlIHVuaXF1ZS5cIl0sXG4gIH0sXG59KTtcblxuYWdlbnRTY2hlbWEucGx1Z2luKHRpbWVzdGFtcHMsIG9wdHMpO1xuXG5jb25zdCBhZ2VudE1vZGVsID0gbW9uZ29vc2UubW9kZWwoXCJhZ2VudFwiLCBhZ2VudFNjaGVtYSk7XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgYWdlbnRNb2RlbDogYWdlbnRNb2RlbCxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "agent.js"
      ],
      "names": [
        "mongoose",
        "require",
        "timestamps",
        "opts",
        "createdAt",
        "updatedAt",
        "agentSchema",
        "Schema",
        "agent_id",
        "type",
        "String",
        "agent_name",
        "unique",
        "required",
        "plugin",
        "agentModel",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,oBAAD,CAA1B;;AACA,MAAME,IAAI,GAAG;AACXC,EAAAA,SAAS,EAAE,YADA;AAEXC,EAAAA,SAAS,EAAE;AAFA,CAAb;AAKA,IAAIC,WAAW,GAAG,IAAIN,QAAQ,CAACO,MAAb,CAAoB;AACpCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAEC;AADE,GAD0B;AAIpCC,EAAAA,UAAU,EAAE;AACVF,IAAAA,IAAI,EAAEC,MADI;AAEVE,IAAAA,MAAM,EAAE,IAFE;AAGVC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,8BAAP;AAHA;AAJwB,CAApB,CAAlB;AAWAP,WAAW,CAACQ,MAAZ,CAAmBZ,UAAnB,EAA+BC,IAA/B;AAEA,MAAMY,UAAU,GAAGf,QAAQ,CAACgB,KAAT,CAAe,OAAf,EAAwBV,WAAxB,CAAnB;AACAW,MAAM,CAACC,OAAP,GAAiB;AACfH,EAAAA,UAAU,EAAEA;AADG,CAAjB",
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/models/",
      "sourcesContent": [
        "\"use strict\";\nlet mongoose = require(\"mongoose\");\nconst timestamps = require(\"mongoose-timestamp\");\nconst opts = {\n  createdAt: \"created_at\",\n  updatedAt: \"updated_at\",\n};\n\nlet agentSchema = new mongoose.Schema({\n  agent_id: {\n    type: String,\n  },\n  agent_name: {\n    type: String,\n    unique: true,\n    required: [true, \"agent_name should be unique.\"],\n  },\n});\n\nagentSchema.plugin(timestamps, opts);\n\nconst agentModel = mongoose.model(\"agent\", agentSchema);\nmodule.exports = {\n  agentModel: agentModel,\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1634921669373
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/aishwarya.gaud/Documents/wrk/test/models/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"filename\":\"/home/aishwarya.gaud/Documents/wrk/test/models/policy_carrier.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/models/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/aishwarya.gaud/Documents/wrk/test",
      "filename": "/home/aishwarya.gaud/Documents/wrk/test/models/policy_carrier.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/aishwarya.gaud/Documents/wrk/test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/aishwarya.gaud/Documents/wrk/test/models/policy_carrier.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/aishwarya.gaud/Documents/wrk/test/models/policy_carrier.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/models/",
        "sourceFileName": "policy_carrier.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nlet mongoose = require(\"mongoose\");\n\nconst timestamps = require(\"mongoose-timestamp\");\n\nconst opts = {\n  createdAt: \"created_at\",\n  updatedAt: \"updated_at\"\n};\nlet policyCarrierSchema = new mongoose.Schema({\n  company_id: {\n    type: mongoose.Schema.Types.ObjectId //required: true,\n\n  },\n  company_name: {\n    type: String,\n    unique: true,\n    required: [true, \"company_name should be unique.\"]\n  }\n});\npolicyCarrierSchema.plugin(timestamps, opts);\nconst policyCarrierModel = mongoose.model(\"policy_carrier\", policyCarrierSchema);\nmodule.exports = {\n  policyCarrierModel: policyCarrierModel\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvbGljeV9jYXJyaWVyLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsInRpbWVzdGFtcHMiLCJvcHRzIiwiY3JlYXRlZEF0IiwidXBkYXRlZEF0IiwicG9saWN5Q2FycmllclNjaGVtYSIsIlNjaGVtYSIsImNvbXBhbnlfaWQiLCJ0eXBlIiwiVHlwZXMiLCJPYmplY3RJZCIsImNvbXBhbnlfbmFtZSIsIlN0cmluZyIsInVuaXF1ZSIsInJlcXVpcmVkIiwicGx1Z2luIiwicG9saWN5Q2Fycmllck1vZGVsIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUNBLE1BQU1DLFVBQVUsR0FBR0QsT0FBTyxDQUFDLG9CQUFELENBQTFCOztBQUNBLE1BQU1FLElBQUksR0FBRztBQUNYQyxFQUFBQSxTQUFTLEVBQUUsWUFEQTtBQUVYQyxFQUFBQSxTQUFTLEVBQUU7QUFGQSxDQUFiO0FBS0EsSUFBSUMsbUJBQW1CLEdBQUcsSUFBSU4sUUFBUSxDQUFDTyxNQUFiLENBQW9CO0FBQzVDQyxFQUFBQSxVQUFVLEVBQUU7QUFDVkMsSUFBQUEsSUFBSSxFQUFFVCxRQUFRLENBQUNPLE1BQVQsQ0FBZ0JHLEtBQWhCLENBQXNCQyxRQURsQixDQUVWOztBQUZVLEdBRGdDO0FBSzVDQyxFQUFBQSxZQUFZLEVBQUU7QUFDWkgsSUFBQUEsSUFBSSxFQUFFSSxNQURNO0FBRVpDLElBQUFBLE1BQU0sRUFBRSxJQUZJO0FBR1pDLElBQUFBLFFBQVEsRUFBRSxDQUFDLElBQUQsRUFBTyxnQ0FBUDtBQUhFO0FBTDhCLENBQXBCLENBQTFCO0FBWUFULG1CQUFtQixDQUFDVSxNQUFwQixDQUEyQmQsVUFBM0IsRUFBdUNDLElBQXZDO0FBRUEsTUFBTWMsa0JBQWtCLEdBQUdqQixRQUFRLENBQUNrQixLQUFULENBQ3pCLGdCQUR5QixFQUV6QlosbUJBRnlCLENBQTNCO0FBSUFhLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmSCxFQUFBQSxrQkFBa0IsRUFBRUE7QUFETCxDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9haXNod2FyeWEuZ2F1ZC9Eb2N1bWVudHMvd3JrL3Rlc3QvbW9kZWxzLyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xubGV0IG1vbmdvb3NlID0gcmVxdWlyZShcIm1vbmdvb3NlXCIpO1xuY29uc3QgdGltZXN0YW1wcyA9IHJlcXVpcmUoXCJtb25nb29zZS10aW1lc3RhbXBcIik7XG5jb25zdCBvcHRzID0ge1xuICBjcmVhdGVkQXQ6IFwiY3JlYXRlZF9hdFwiLFxuICB1cGRhdGVkQXQ6IFwidXBkYXRlZF9hdFwiLFxufTtcblxubGV0IHBvbGljeUNhcnJpZXJTY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKHtcbiAgY29tcGFueV9pZDoge1xuICAgIHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAvL3JlcXVpcmVkOiB0cnVlLFxuICB9LFxuICBjb21wYW55X25hbWU6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgdW5pcXVlOiB0cnVlLFxuICAgIHJlcXVpcmVkOiBbdHJ1ZSwgXCJjb21wYW55X25hbWUgc2hvdWxkIGJlIHVuaXF1ZS5cIl0sXG4gIH0sXG59KTtcblxucG9saWN5Q2FycmllclNjaGVtYS5wbHVnaW4odGltZXN0YW1wcywgb3B0cyk7XG5cbmNvbnN0IHBvbGljeUNhcnJpZXJNb2RlbCA9IG1vbmdvb3NlLm1vZGVsKFxuICBcInBvbGljeV9jYXJyaWVyXCIsXG4gIHBvbGljeUNhcnJpZXJTY2hlbWFcbik7XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgcG9saWN5Q2Fycmllck1vZGVsOiBwb2xpY3lDYXJyaWVyTW9kZWwsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "policy_carrier.js"
      ],
      "names": [
        "mongoose",
        "require",
        "timestamps",
        "opts",
        "createdAt",
        "updatedAt",
        "policyCarrierSchema",
        "Schema",
        "company_id",
        "type",
        "Types",
        "ObjectId",
        "company_name",
        "String",
        "unique",
        "required",
        "plugin",
        "policyCarrierModel",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,oBAAD,CAA1B;;AACA,MAAME,IAAI,GAAG;AACXC,EAAAA,SAAS,EAAE,YADA;AAEXC,EAAAA,SAAS,EAAE;AAFA,CAAb;AAKA,IAAIC,mBAAmB,GAAG,IAAIN,QAAQ,CAACO,MAAb,CAAoB;AAC5CC,EAAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EAAET,QAAQ,CAACO,MAAT,CAAgBG,KAAhB,CAAsBC,QADlB,CAEV;;AAFU,GADgC;AAK5CC,EAAAA,YAAY,EAAE;AACZH,IAAAA,IAAI,EAAEI,MADM;AAEZC,IAAAA,MAAM,EAAE,IAFI;AAGZC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,gCAAP;AAHE;AAL8B,CAApB,CAA1B;AAYAT,mBAAmB,CAACU,MAApB,CAA2Bd,UAA3B,EAAuCC,IAAvC;AAEA,MAAMc,kBAAkB,GAAGjB,QAAQ,CAACkB,KAAT,CACzB,gBADyB,EAEzBZ,mBAFyB,CAA3B;AAIAa,MAAM,CAACC,OAAP,GAAiB;AACfH,EAAAA,kBAAkB,EAAEA;AADL,CAAjB",
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/models/",
      "sourcesContent": [
        "\"use strict\";\nlet mongoose = require(\"mongoose\");\nconst timestamps = require(\"mongoose-timestamp\");\nconst opts = {\n  createdAt: \"created_at\",\n  updatedAt: \"updated_at\",\n};\n\nlet policyCarrierSchema = new mongoose.Schema({\n  company_id: {\n    type: mongoose.Schema.Types.ObjectId,\n    //required: true,\n  },\n  company_name: {\n    type: String,\n    unique: true,\n    required: [true, \"company_name should be unique.\"],\n  },\n});\n\npolicyCarrierSchema.plugin(timestamps, opts);\n\nconst policyCarrierModel = mongoose.model(\n  \"policy_carrier\",\n  policyCarrierSchema\n);\nmodule.exports = {\n  policyCarrierModel: policyCarrierModel,\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1634921764899
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/aishwarya.gaud/Documents/wrk/test/models/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"filename\":\"/home/aishwarya.gaud/Documents/wrk/test/models/policy_category.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/models/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/aishwarya.gaud/Documents/wrk/test",
      "filename": "/home/aishwarya.gaud/Documents/wrk/test/models/policy_category.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/aishwarya.gaud/Documents/wrk/test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/aishwarya.gaud/Documents/wrk/test/models/policy_category.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/aishwarya.gaud/Documents/wrk/test/models/policy_category.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/models/",
        "sourceFileName": "policy_category.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nlet mongoose = require(\"mongoose\");\n\nconst timestamps = require(\"mongoose-timestamp\");\n\nconst opts = {\n  createdAt: \"created_at\",\n  updatedAt: \"updated_at\"\n};\nlet policyCategorySchema = new mongoose.Schema({\n  category_id: {\n    type: mongoose.Schema.Types.ObjectId //required: true,\n\n  },\n  category_name: {\n    type: String,\n    unique: true,\n    required: [true, \"category_name should be unique.\"]\n  }\n});\npolicyCategorySchema.plugin(timestamps, opts);\nconst policyCategoryModel = mongoose.model(\"policy_category\", policyCategorySchema);\nmodule.exports = {\n  policyCategoryModel: policyCategoryModel\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvbGljeV9jYXRlZ29yeS5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJ0aW1lc3RhbXBzIiwib3B0cyIsImNyZWF0ZWRBdCIsInVwZGF0ZWRBdCIsInBvbGljeUNhdGVnb3J5U2NoZW1hIiwiU2NoZW1hIiwiY2F0ZWdvcnlfaWQiLCJ0eXBlIiwiVHlwZXMiLCJPYmplY3RJZCIsImNhdGVnb3J5X25hbWUiLCJTdHJpbmciLCJ1bmlxdWUiLCJyZXF1aXJlZCIsInBsdWdpbiIsInBvbGljeUNhdGVnb3J5TW9kZWwiLCJtb2RlbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBLElBQUlBLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7O0FBQ0EsTUFBTUMsVUFBVSxHQUFHRCxPQUFPLENBQUMsb0JBQUQsQ0FBMUI7O0FBQ0EsTUFBTUUsSUFBSSxHQUFHO0FBQ1hDLEVBQUFBLFNBQVMsRUFBRSxZQURBO0FBRVhDLEVBQUFBLFNBQVMsRUFBRTtBQUZBLENBQWI7QUFLQSxJQUFJQyxvQkFBb0IsR0FBRyxJQUFJTixRQUFRLENBQUNPLE1BQWIsQ0FBb0I7QUFDN0NDLEVBQUFBLFdBQVcsRUFBRTtBQUNYQyxJQUFBQSxJQUFJLEVBQUVULFFBQVEsQ0FBQ08sTUFBVCxDQUFnQkcsS0FBaEIsQ0FBc0JDLFFBRGpCLENBRVg7O0FBRlcsR0FEZ0M7QUFLN0NDLEVBQUFBLGFBQWEsRUFBRTtBQUNiSCxJQUFBQSxJQUFJLEVBQUVJLE1BRE87QUFFYkMsSUFBQUEsTUFBTSxFQUFFLElBRks7QUFHYkMsSUFBQUEsUUFBUSxFQUFFLENBQUMsSUFBRCxFQUFPLGlDQUFQO0FBSEc7QUFMOEIsQ0FBcEIsQ0FBM0I7QUFZQVQsb0JBQW9CLENBQUNVLE1BQXJCLENBQTRCZCxVQUE1QixFQUF3Q0MsSUFBeEM7QUFFQSxNQUFNYyxtQkFBbUIsR0FBR2pCLFFBQVEsQ0FBQ2tCLEtBQVQsQ0FDMUIsaUJBRDBCLEVBRTFCWixvQkFGMEIsQ0FBNUI7QUFJQWEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZILEVBQUFBLG1CQUFtQixFQUFFQTtBQUROLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2Fpc2h3YXJ5YS5nYXVkL0RvY3VtZW50cy93cmsvdGVzdC9tb2RlbHMvIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5sZXQgbW9uZ29vc2UgPSByZXF1aXJlKFwibW9uZ29vc2VcIik7XG5jb25zdCB0aW1lc3RhbXBzID0gcmVxdWlyZShcIm1vbmdvb3NlLXRpbWVzdGFtcFwiKTtcbmNvbnN0IG9wdHMgPSB7XG4gIGNyZWF0ZWRBdDogXCJjcmVhdGVkX2F0XCIsXG4gIHVwZGF0ZWRBdDogXCJ1cGRhdGVkX2F0XCIsXG59O1xuXG5sZXQgcG9saWN5Q2F0ZWdvcnlTY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKHtcbiAgY2F0ZWdvcnlfaWQ6IHtcbiAgICB0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgLy9yZXF1aXJlZDogdHJ1ZSxcbiAgfSxcbiAgY2F0ZWdvcnlfbmFtZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICB1bmlxdWU6IHRydWUsXG4gICAgcmVxdWlyZWQ6IFt0cnVlLCBcImNhdGVnb3J5X25hbWUgc2hvdWxkIGJlIHVuaXF1ZS5cIl0sXG4gIH0sXG59KTtcblxucG9saWN5Q2F0ZWdvcnlTY2hlbWEucGx1Z2luKHRpbWVzdGFtcHMsIG9wdHMpO1xuXG5jb25zdCBwb2xpY3lDYXRlZ29yeU1vZGVsID0gbW9uZ29vc2UubW9kZWwoXG4gIFwicG9saWN5X2NhdGVnb3J5XCIsXG4gIHBvbGljeUNhdGVnb3J5U2NoZW1hXG4pO1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHBvbGljeUNhdGVnb3J5TW9kZWw6IHBvbGljeUNhdGVnb3J5TW9kZWwsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "policy_category.js"
      ],
      "names": [
        "mongoose",
        "require",
        "timestamps",
        "opts",
        "createdAt",
        "updatedAt",
        "policyCategorySchema",
        "Schema",
        "category_id",
        "type",
        "Types",
        "ObjectId",
        "category_name",
        "String",
        "unique",
        "required",
        "plugin",
        "policyCategoryModel",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,oBAAD,CAA1B;;AACA,MAAME,IAAI,GAAG;AACXC,EAAAA,SAAS,EAAE,YADA;AAEXC,EAAAA,SAAS,EAAE;AAFA,CAAb;AAKA,IAAIC,oBAAoB,GAAG,IAAIN,QAAQ,CAACO,MAAb,CAAoB;AAC7CC,EAAAA,WAAW,EAAE;AACXC,IAAAA,IAAI,EAAET,QAAQ,CAACO,MAAT,CAAgBG,KAAhB,CAAsBC,QADjB,CAEX;;AAFW,GADgC;AAK7CC,EAAAA,aAAa,EAAE;AACbH,IAAAA,IAAI,EAAEI,MADO;AAEbC,IAAAA,MAAM,EAAE,IAFK;AAGbC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,iCAAP;AAHG;AAL8B,CAApB,CAA3B;AAYAT,oBAAoB,CAACU,MAArB,CAA4Bd,UAA5B,EAAwCC,IAAxC;AAEA,MAAMc,mBAAmB,GAAGjB,QAAQ,CAACkB,KAAT,CAC1B,iBAD0B,EAE1BZ,oBAF0B,CAA5B;AAIAa,MAAM,CAACC,OAAP,GAAiB;AACfH,EAAAA,mBAAmB,EAAEA;AADN,CAAjB",
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/models/",
      "sourcesContent": [
        "\"use strict\";\nlet mongoose = require(\"mongoose\");\nconst timestamps = require(\"mongoose-timestamp\");\nconst opts = {\n  createdAt: \"created_at\",\n  updatedAt: \"updated_at\",\n};\n\nlet policyCategorySchema = new mongoose.Schema({\n  category_id: {\n    type: mongoose.Schema.Types.ObjectId,\n    //required: true,\n  },\n  category_name: {\n    type: String,\n    unique: true,\n    required: [true, \"category_name should be unique.\"],\n  },\n});\n\npolicyCategorySchema.plugin(timestamps, opts);\n\nconst policyCategoryModel = mongoose.model(\n  \"policy_category\",\n  policyCategorySchema\n);\nmodule.exports = {\n  policyCategoryModel: policyCategoryModel,\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1634921774762
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/aishwarya.gaud/Documents/wrk/test/models/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"filename\":\"/home/aishwarya.gaud/Documents/wrk/test/models/policy_info.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/models/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/aishwarya.gaud/Documents/wrk/test",
      "filename": "/home/aishwarya.gaud/Documents/wrk/test/models/policy_info.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/aishwarya.gaud/Documents/wrk/test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/aishwarya.gaud/Documents/wrk/test/models/policy_info.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/aishwarya.gaud/Documents/wrk/test/models/policy_info.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/models/",
        "sourceFileName": "policy_info.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nlet mongoose = require(\"mongoose\");\n\nrequire(\"@mongoosejs/double\"); //plugin to support Double in mongoose\n\n\nconst timestamps = require(\"mongoose-timestamp\");\n\nconst opts = {\n  createdAt: \"created_at\",\n  updatedAt: \"updated_at\"\n};\nlet policyInfoSchema = new mongoose.Schema({\n  policy_mode: {\n    type: Number\n  },\n  producer: {\n    type: String\n  },\n  policy_number: {\n    type: String\n  },\n  premium_amount: {\n    type: mongoose.Schema.Types.Double\n  },\n  policy_type: {\n    type: String,\n    enum: [\"Single\", \"Package\"]\n  },\n  company_collection_id: {\n    // company id ref from policy_carrier\n    type: String //type: mongoose.Schema.Types.ObjectId,\n\n  },\n  policy_category: {\n    // category id ref from policy_category\n    type: String //type: mongoose.Schema.Types.ObjectId,\n\n  },\n  policy_start_date: {\n    type: String\n  },\n  policy_end_date: {\n    type: String\n  },\n  csr: {\n    type: String\n  },\n  account_id: {\n    // account_id ref from account\n    type: String //type: mongoose.Schema.Types.ObjectId,\n\n  },\n  primary: {\n    type: String\n  },\n  user_id: {\n    // user_id ref from user\n    //type: String,\n    type: mongoose.Schema.Types.ObjectId\n  },\n  collection_id: {\n    // agent_id ref from agent i.e agency id\n    type: String //type: mongoose.Schema.Types.ObjectId,\n\n  },\n  has_active_client_id: {\n    type: String\n  }\n});\npolicyInfoSchema.plugin(timestamps, opts);\nconst policyInfoModel = mongoose.model(\"policy_info\", policyInfoSchema);\nmodule.exports = {\n  policyInfoModel: policyInfoModel\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvbGljeV9pbmZvLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsInRpbWVzdGFtcHMiLCJvcHRzIiwiY3JlYXRlZEF0IiwidXBkYXRlZEF0IiwicG9saWN5SW5mb1NjaGVtYSIsIlNjaGVtYSIsInBvbGljeV9tb2RlIiwidHlwZSIsIk51bWJlciIsInByb2R1Y2VyIiwiU3RyaW5nIiwicG9saWN5X251bWJlciIsInByZW1pdW1fYW1vdW50IiwiVHlwZXMiLCJEb3VibGUiLCJwb2xpY3lfdHlwZSIsImVudW0iLCJjb21wYW55X2NvbGxlY3Rpb25faWQiLCJwb2xpY3lfY2F0ZWdvcnkiLCJwb2xpY3lfc3RhcnRfZGF0ZSIsInBvbGljeV9lbmRfZGF0ZSIsImNzciIsImFjY291bnRfaWQiLCJwcmltYXJ5IiwidXNlcl9pZCIsIk9iamVjdElkIiwiY29sbGVjdGlvbl9pZCIsImhhc19hY3RpdmVfY2xpZW50X2lkIiwicGx1Z2luIiwicG9saWN5SW5mb01vZGVsIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUNBQSxPQUFPLENBQUMsb0JBQUQsQ0FBUCxDLENBQStCOzs7QUFDL0IsTUFBTUMsVUFBVSxHQUFHRCxPQUFPLENBQUMsb0JBQUQsQ0FBMUI7O0FBQ0EsTUFBTUUsSUFBSSxHQUFHO0FBQ1hDLEVBQUFBLFNBQVMsRUFBRSxZQURBO0FBRVhDLEVBQUFBLFNBQVMsRUFBRTtBQUZBLENBQWI7QUFLQSxJQUFJQyxnQkFBZ0IsR0FBRyxJQUFJTixRQUFRLENBQUNPLE1BQWIsQ0FBb0I7QUFDekNDLEVBQUFBLFdBQVcsRUFBRTtBQUNYQyxJQUFBQSxJQUFJLEVBQUVDO0FBREssR0FENEI7QUFJekNDLEVBQUFBLFFBQVEsRUFBRTtBQUNSRixJQUFBQSxJQUFJLEVBQUVHO0FBREUsR0FKK0I7QUFPekNDLEVBQUFBLGFBQWEsRUFBRTtBQUNiSixJQUFBQSxJQUFJLEVBQUVHO0FBRE8sR0FQMEI7QUFVekNFLEVBQUFBLGNBQWMsRUFBRTtBQUNkTCxJQUFBQSxJQUFJLEVBQUVULFFBQVEsQ0FBQ08sTUFBVCxDQUFnQlEsS0FBaEIsQ0FBc0JDO0FBRGQsR0FWeUI7QUFhekNDLEVBQUFBLFdBQVcsRUFBRTtBQUNYUixJQUFBQSxJQUFJLEVBQUVHLE1BREs7QUFFWE0sSUFBQUEsSUFBSSxFQUFFLENBQUMsUUFBRCxFQUFXLFNBQVg7QUFGSyxHQWI0QjtBQWlCekNDLEVBQUFBLHFCQUFxQixFQUFFO0FBQ3JCO0FBQ0FWLElBQUFBLElBQUksRUFBRUcsTUFGZSxDQUdyQjs7QUFIcUIsR0FqQmtCO0FBc0J6Q1EsRUFBQUEsZUFBZSxFQUFFO0FBQ2Y7QUFDQVgsSUFBQUEsSUFBSSxFQUFFRyxNQUZTLENBR2Y7O0FBSGUsR0F0QndCO0FBMkJ6Q1MsRUFBQUEsaUJBQWlCLEVBQUU7QUFDakJaLElBQUFBLElBQUksRUFBRUc7QUFEVyxHQTNCc0I7QUE4QnpDVSxFQUFBQSxlQUFlLEVBQUU7QUFDZmIsSUFBQUEsSUFBSSxFQUFFRztBQURTLEdBOUJ3QjtBQWlDekNXLEVBQUFBLEdBQUcsRUFBRTtBQUNIZCxJQUFBQSxJQUFJLEVBQUVHO0FBREgsR0FqQ29DO0FBb0N6Q1ksRUFBQUEsVUFBVSxFQUFFO0FBQ1Y7QUFDQWYsSUFBQUEsSUFBSSxFQUFFRyxNQUZJLENBR1Y7O0FBSFUsR0FwQzZCO0FBeUN6Q2EsRUFBQUEsT0FBTyxFQUFFO0FBQ1BoQixJQUFBQSxJQUFJLEVBQUVHO0FBREMsR0F6Q2dDO0FBNEN6Q2MsRUFBQUEsT0FBTyxFQUFFO0FBQ1A7QUFDQTtBQUNBakIsSUFBQUEsSUFBSSxFQUFFVCxRQUFRLENBQUNPLE1BQVQsQ0FBZ0JRLEtBQWhCLENBQXNCWTtBQUhyQixHQTVDZ0M7QUFpRHpDQyxFQUFBQSxhQUFhLEVBQUU7QUFDYjtBQUNBbkIsSUFBQUEsSUFBSSxFQUFFRyxNQUZPLENBR2I7O0FBSGEsR0FqRDBCO0FBc0R6Q2lCLEVBQUFBLG9CQUFvQixFQUFFO0FBQ3BCcEIsSUFBQUEsSUFBSSxFQUFFRztBQURjO0FBdERtQixDQUFwQixDQUF2QjtBQTJEQU4sZ0JBQWdCLENBQUN3QixNQUFqQixDQUF3QjVCLFVBQXhCLEVBQW9DQyxJQUFwQztBQUVBLE1BQU00QixlQUFlLEdBQUcvQixRQUFRLENBQUNnQyxLQUFULENBQWUsYUFBZixFQUE4QjFCLGdCQUE5QixDQUF4QjtBQUNBMkIsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZILEVBQUFBLGVBQWUsRUFBRUE7QUFERixDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9haXNod2FyeWEuZ2F1ZC9Eb2N1bWVudHMvd3JrL3Rlc3QvbW9kZWxzLyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xubGV0IG1vbmdvb3NlID0gcmVxdWlyZShcIm1vbmdvb3NlXCIpO1xucmVxdWlyZShcIkBtb25nb29zZWpzL2RvdWJsZVwiKTsgLy9wbHVnaW4gdG8gc3VwcG9ydCBEb3VibGUgaW4gbW9uZ29vc2VcbmNvbnN0IHRpbWVzdGFtcHMgPSByZXF1aXJlKFwibW9uZ29vc2UtdGltZXN0YW1wXCIpO1xuY29uc3Qgb3B0cyA9IHtcbiAgY3JlYXRlZEF0OiBcImNyZWF0ZWRfYXRcIixcbiAgdXBkYXRlZEF0OiBcInVwZGF0ZWRfYXRcIixcbn07XG5cbmxldCBwb2xpY3lJbmZvU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gIHBvbGljeV9tb2RlOiB7XG4gICAgdHlwZTogTnVtYmVyLFxuICB9LFxuICBwcm9kdWNlcjoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgfSxcbiAgcG9saWN5X251bWJlcjoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgfSxcbiAgcHJlbWl1bV9hbW91bnQ6IHtcbiAgICB0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuRG91YmxlLFxuICB9LFxuICBwb2xpY3lfdHlwZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICBlbnVtOiBbXCJTaW5nbGVcIiwgXCJQYWNrYWdlXCJdLFxuICB9LFxuICBjb21wYW55X2NvbGxlY3Rpb25faWQ6IHtcbiAgICAvLyBjb21wYW55IGlkIHJlZiBmcm9tIHBvbGljeV9jYXJyaWVyXG4gICAgdHlwZTogU3RyaW5nLFxuICAgIC8vdHlwZTogbW9uZ29vc2UuU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICB9LFxuICBwb2xpY3lfY2F0ZWdvcnk6IHtcbiAgICAvLyBjYXRlZ29yeSBpZCByZWYgZnJvbSBwb2xpY3lfY2F0ZWdvcnlcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgLy90eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gIH0sXG4gIHBvbGljeV9zdGFydF9kYXRlOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICB9LFxuICBwb2xpY3lfZW5kX2RhdGU6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gIH0sXG4gIGNzcjoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgfSxcbiAgYWNjb3VudF9pZDoge1xuICAgIC8vIGFjY291bnRfaWQgcmVmIGZyb20gYWNjb3VudFxuICAgIHR5cGU6IFN0cmluZyxcbiAgICAvL3R5cGU6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgfSxcbiAgcHJpbWFyeToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgfSxcbiAgdXNlcl9pZDoge1xuICAgIC8vIHVzZXJfaWQgcmVmIGZyb20gdXNlclxuICAgIC8vdHlwZTogU3RyaW5nLFxuICAgIHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgfSxcbiAgY29sbGVjdGlvbl9pZDoge1xuICAgIC8vIGFnZW50X2lkIHJlZiBmcm9tIGFnZW50IGkuZSBhZ2VuY3kgaWRcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgLy90eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gIH0sXG4gIGhhc19hY3RpdmVfY2xpZW50X2lkOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICB9LFxufSk7XG5cbnBvbGljeUluZm9TY2hlbWEucGx1Z2luKHRpbWVzdGFtcHMsIG9wdHMpO1xuXG5jb25zdCBwb2xpY3lJbmZvTW9kZWwgPSBtb25nb29zZS5tb2RlbChcInBvbGljeV9pbmZvXCIsIHBvbGljeUluZm9TY2hlbWEpO1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHBvbGljeUluZm9Nb2RlbDogcG9saWN5SW5mb01vZGVsLFxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "policy_info.js"
      ],
      "names": [
        "mongoose",
        "require",
        "timestamps",
        "opts",
        "createdAt",
        "updatedAt",
        "policyInfoSchema",
        "Schema",
        "policy_mode",
        "type",
        "Number",
        "producer",
        "String",
        "policy_number",
        "premium_amount",
        "Types",
        "Double",
        "policy_type",
        "enum",
        "company_collection_id",
        "policy_category",
        "policy_start_date",
        "policy_end_date",
        "csr",
        "account_id",
        "primary",
        "user_id",
        "ObjectId",
        "collection_id",
        "has_active_client_id",
        "plugin",
        "policyInfoModel",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACAA,OAAO,CAAC,oBAAD,CAAP,C,CAA+B;;;AAC/B,MAAMC,UAAU,GAAGD,OAAO,CAAC,oBAAD,CAA1B;;AACA,MAAME,IAAI,GAAG;AACXC,EAAAA,SAAS,EAAE,YADA;AAEXC,EAAAA,SAAS,EAAE;AAFA,CAAb;AAKA,IAAIC,gBAAgB,GAAG,IAAIN,QAAQ,CAACO,MAAb,CAAoB;AACzCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,IAAI,EAAEC;AADK,GAD4B;AAIzCC,EAAAA,QAAQ,EAAE;AACRF,IAAAA,IAAI,EAAEG;AADE,GAJ+B;AAOzCC,EAAAA,aAAa,EAAE;AACbJ,IAAAA,IAAI,EAAEG;AADO,GAP0B;AAUzCE,EAAAA,cAAc,EAAE;AACdL,IAAAA,IAAI,EAAET,QAAQ,CAACO,MAAT,CAAgBQ,KAAhB,CAAsBC;AADd,GAVyB;AAazCC,EAAAA,WAAW,EAAE;AACXR,IAAAA,IAAI,EAAEG,MADK;AAEXM,IAAAA,IAAI,EAAE,CAAC,QAAD,EAAW,SAAX;AAFK,GAb4B;AAiBzCC,EAAAA,qBAAqB,EAAE;AACrB;AACAV,IAAAA,IAAI,EAAEG,MAFe,CAGrB;;AAHqB,GAjBkB;AAsBzCQ,EAAAA,eAAe,EAAE;AACf;AACAX,IAAAA,IAAI,EAAEG,MAFS,CAGf;;AAHe,GAtBwB;AA2BzCS,EAAAA,iBAAiB,EAAE;AACjBZ,IAAAA,IAAI,EAAEG;AADW,GA3BsB;AA8BzCU,EAAAA,eAAe,EAAE;AACfb,IAAAA,IAAI,EAAEG;AADS,GA9BwB;AAiCzCW,EAAAA,GAAG,EAAE;AACHd,IAAAA,IAAI,EAAEG;AADH,GAjCoC;AAoCzCY,EAAAA,UAAU,EAAE;AACV;AACAf,IAAAA,IAAI,EAAEG,MAFI,CAGV;;AAHU,GApC6B;AAyCzCa,EAAAA,OAAO,EAAE;AACPhB,IAAAA,IAAI,EAAEG;AADC,GAzCgC;AA4CzCc,EAAAA,OAAO,EAAE;AACP;AACA;AACAjB,IAAAA,IAAI,EAAET,QAAQ,CAACO,MAAT,CAAgBQ,KAAhB,CAAsBY;AAHrB,GA5CgC;AAiDzCC,EAAAA,aAAa,EAAE;AACb;AACAnB,IAAAA,IAAI,EAAEG,MAFO,CAGb;;AAHa,GAjD0B;AAsDzCiB,EAAAA,oBAAoB,EAAE;AACpBpB,IAAAA,IAAI,EAAEG;AADc;AAtDmB,CAApB,CAAvB;AA2DAN,gBAAgB,CAACwB,MAAjB,CAAwB5B,UAAxB,EAAoCC,IAApC;AAEA,MAAM4B,eAAe,GAAG/B,QAAQ,CAACgC,KAAT,CAAe,aAAf,EAA8B1B,gBAA9B,CAAxB;AACA2B,MAAM,CAACC,OAAP,GAAiB;AACfH,EAAAA,eAAe,EAAEA;AADF,CAAjB",
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/models/",
      "sourcesContent": [
        "\"use strict\";\nlet mongoose = require(\"mongoose\");\nrequire(\"@mongoosejs/double\"); //plugin to support Double in mongoose\nconst timestamps = require(\"mongoose-timestamp\");\nconst opts = {\n  createdAt: \"created_at\",\n  updatedAt: \"updated_at\",\n};\n\nlet policyInfoSchema = new mongoose.Schema({\n  policy_mode: {\n    type: Number,\n  },\n  producer: {\n    type: String,\n  },\n  policy_number: {\n    type: String,\n  },\n  premium_amount: {\n    type: mongoose.Schema.Types.Double,\n  },\n  policy_type: {\n    type: String,\n    enum: [\"Single\", \"Package\"],\n  },\n  company_collection_id: {\n    // company id ref from policy_carrier\n    type: String,\n    //type: mongoose.Schema.Types.ObjectId,\n  },\n  policy_category: {\n    // category id ref from policy_category\n    type: String,\n    //type: mongoose.Schema.Types.ObjectId,\n  },\n  policy_start_date: {\n    type: String,\n  },\n  policy_end_date: {\n    type: String,\n  },\n  csr: {\n    type: String,\n  },\n  account_id: {\n    // account_id ref from account\n    type: String,\n    //type: mongoose.Schema.Types.ObjectId,\n  },\n  primary: {\n    type: String,\n  },\n  user_id: {\n    // user_id ref from user\n    //type: String,\n    type: mongoose.Schema.Types.ObjectId,\n  },\n  collection_id: {\n    // agent_id ref from agent i.e agency id\n    type: String,\n    //type: mongoose.Schema.Types.ObjectId,\n  },\n  has_active_client_id: {\n    type: String,\n  },\n});\n\npolicyInfoSchema.plugin(timestamps, opts);\n\nconst policyInfoModel = mongoose.model(\"policy_info\", policyInfoSchema);\nmodule.exports = {\n  policyInfoModel: policyInfoModel,\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1634997752497
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/aishwarya.gaud/Documents/wrk/test/models/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"filename\":\"/home/aishwarya.gaud/Documents/wrk/test/models/user.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/models/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/aishwarya.gaud/Documents/wrk/test",
      "filename": "/home/aishwarya.gaud/Documents/wrk/test/models/user.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/aishwarya.gaud/Documents/wrk/test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/aishwarya.gaud/Documents/wrk/test/models/user.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/aishwarya.gaud/Documents/wrk/test/models/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/models/",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nlet mongoose = require(\"mongoose\");\n\nconst timestamps = require(\"mongoose-timestamp\");\n\nconst opts = {\n  createdAt: \"created_at\",\n  updatedAt: \"updated_at\"\n};\nlet userSchema = new mongoose.Schema({\n  user_id: {\n    type: mongoose.Schema.Types.ObjectId //required: true,\n\n  },\n  user_type: {\n    type: String\n  },\n  first_name: {\n    type: String\n  },\n  date_of_birth: {\n    type: Date\n  },\n  address: {\n    type: String\n  },\n  contact_number: {\n    type: Number,\n    validate: {\n      validator: v => {\n        return /d{10}/.test(v);\n      },\n      message: \"{VALUE} is not a valid 10 digit number!\"\n    }\n  },\n  city: {\n    type: String\n  },\n  state: {\n    type: String\n  },\n  zip_code: {\n    type: String //min: [10000, \"Zip code too short\"],\n    //max: 99999,\n\n  },\n  email: {\n    type: String,\n    required: true,\n    lowercase: true,\n    unique: true\n  },\n  gender: {\n    type: String,\n    enum: [\"male\", \"female\", \"\"]\n  }\n});\nuserSchema.plugin(timestamps, opts);\nconst userModel = mongoose.model(\"user\", userSchema);\nmodule.exports = {\n  userModel: userModel\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwidGltZXN0YW1wcyIsIm9wdHMiLCJjcmVhdGVkQXQiLCJ1cGRhdGVkQXQiLCJ1c2VyU2NoZW1hIiwiU2NoZW1hIiwidXNlcl9pZCIsInR5cGUiLCJUeXBlcyIsIk9iamVjdElkIiwidXNlcl90eXBlIiwiU3RyaW5nIiwiZmlyc3RfbmFtZSIsImRhdGVfb2ZfYmlydGgiLCJEYXRlIiwiYWRkcmVzcyIsImNvbnRhY3RfbnVtYmVyIiwiTnVtYmVyIiwidmFsaWRhdGUiLCJ2YWxpZGF0b3IiLCJ2IiwidGVzdCIsIm1lc3NhZ2UiLCJjaXR5Iiwic3RhdGUiLCJ6aXBfY29kZSIsImVtYWlsIiwicmVxdWlyZWQiLCJsb3dlcmNhc2UiLCJ1bmlxdWUiLCJnZW5kZXIiLCJlbnVtIiwicGx1Z2luIiwidXNlck1vZGVsIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUNBLE1BQU1DLFVBQVUsR0FBR0QsT0FBTyxDQUFDLG9CQUFELENBQTFCOztBQUNBLE1BQU1FLElBQUksR0FBRztBQUNYQyxFQUFBQSxTQUFTLEVBQUUsWUFEQTtBQUVYQyxFQUFBQSxTQUFTLEVBQUU7QUFGQSxDQUFiO0FBS0EsSUFBSUMsVUFBVSxHQUFHLElBQUlOLFFBQVEsQ0FBQ08sTUFBYixDQUFvQjtBQUNuQ0MsRUFBQUEsT0FBTyxFQUFFO0FBQ1BDLElBQUFBLElBQUksRUFBRVQsUUFBUSxDQUFDTyxNQUFULENBQWdCRyxLQUFoQixDQUFzQkMsUUFEckIsQ0FFUDs7QUFGTyxHQUQwQjtBQUtuQ0MsRUFBQUEsU0FBUyxFQUFFO0FBQ1RILElBQUFBLElBQUksRUFBRUk7QUFERyxHQUx3QjtBQVFuQ0MsRUFBQUEsVUFBVSxFQUFFO0FBQ1ZMLElBQUFBLElBQUksRUFBRUk7QUFESSxHQVJ1QjtBQVduQ0UsRUFBQUEsYUFBYSxFQUFFO0FBQUVOLElBQUFBLElBQUksRUFBRU87QUFBUixHQVhvQjtBQVluQ0MsRUFBQUEsT0FBTyxFQUFFO0FBQ1BSLElBQUFBLElBQUksRUFBRUk7QUFEQyxHQVowQjtBQWVuQ0ssRUFBQUEsY0FBYyxFQUFFO0FBQ2RULElBQUFBLElBQUksRUFBRVUsTUFEUTtBQUVkQyxJQUFBQSxRQUFRLEVBQUU7QUFDUkMsTUFBQUEsU0FBUyxFQUFHQyxDQUFELElBQU87QUFDaEIsZUFBTyxRQUFRQyxJQUFSLENBQWFELENBQWIsQ0FBUDtBQUNELE9BSE87QUFJUkUsTUFBQUEsT0FBTyxFQUFFO0FBSkQ7QUFGSSxHQWZtQjtBQXdCbkNDLEVBQUFBLElBQUksRUFBRTtBQUNKaEIsSUFBQUEsSUFBSSxFQUFFSTtBQURGLEdBeEI2QjtBQTJCbkNhLEVBQUFBLEtBQUssRUFBRTtBQUNMakIsSUFBQUEsSUFBSSxFQUFFSTtBQURELEdBM0I0QjtBQThCbkNjLEVBQUFBLFFBQVEsRUFBRTtBQUNSbEIsSUFBQUEsSUFBSSxFQUFFSSxNQURFLENBRVI7QUFDQTs7QUFIUSxHQTlCeUI7QUFtQ25DZSxFQUFBQSxLQUFLLEVBQUU7QUFDTG5CLElBQUFBLElBQUksRUFBRUksTUFERDtBQUVMZ0IsSUFBQUEsUUFBUSxFQUFFLElBRkw7QUFHTEMsSUFBQUEsU0FBUyxFQUFFLElBSE47QUFJTEMsSUFBQUEsTUFBTSxFQUFFO0FBSkgsR0FuQzRCO0FBeUNuQ0MsRUFBQUEsTUFBTSxFQUFFO0FBQ052QixJQUFBQSxJQUFJLEVBQUVJLE1BREE7QUFFTm9CLElBQUFBLElBQUksRUFBRSxDQUFDLE1BQUQsRUFBUyxRQUFULEVBQW1CLEVBQW5CO0FBRkE7QUF6QzJCLENBQXBCLENBQWpCO0FBK0NBM0IsVUFBVSxDQUFDNEIsTUFBWCxDQUFrQmhDLFVBQWxCLEVBQThCQyxJQUE5QjtBQUVBLE1BQU1nQyxTQUFTLEdBQUduQyxRQUFRLENBQUNvQyxLQUFULENBQWUsTUFBZixFQUF1QjlCLFVBQXZCLENBQWxCO0FBQ0ErQixNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZkgsRUFBQUEsU0FBUyxFQUFFQTtBQURJLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2Fpc2h3YXJ5YS5nYXVkL0RvY3VtZW50cy93cmsvdGVzdC9tb2RlbHMvIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5sZXQgbW9uZ29vc2UgPSByZXF1aXJlKFwibW9uZ29vc2VcIik7XG5jb25zdCB0aW1lc3RhbXBzID0gcmVxdWlyZShcIm1vbmdvb3NlLXRpbWVzdGFtcFwiKTtcbmNvbnN0IG9wdHMgPSB7XG4gIGNyZWF0ZWRBdDogXCJjcmVhdGVkX2F0XCIsXG4gIHVwZGF0ZWRBdDogXCJ1cGRhdGVkX2F0XCIsXG59O1xuXG5sZXQgdXNlclNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xuICB1c2VyX2lkOiB7XG4gICAgdHlwZTogbW9uZ29vc2UuU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgIC8vcmVxdWlyZWQ6IHRydWUsXG4gIH0sXG4gIHVzZXJfdHlwZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgfSxcbiAgZmlyc3RfbmFtZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgfSxcbiAgZGF0ZV9vZl9iaXJ0aDogeyB0eXBlOiBEYXRlIH0sXG4gIGFkZHJlc3M6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gIH0sXG4gIGNvbnRhY3RfbnVtYmVyOiB7XG4gICAgdHlwZTogTnVtYmVyLFxuICAgIHZhbGlkYXRlOiB7XG4gICAgICB2YWxpZGF0b3I6ICh2KSA9PiB7XG4gICAgICAgIHJldHVybiAvZHsxMH0vLnRlc3Qodik7XG4gICAgICB9LFxuICAgICAgbWVzc2FnZTogXCJ7VkFMVUV9IGlzIG5vdCBhIHZhbGlkIDEwIGRpZ2l0IG51bWJlciFcIixcbiAgICB9LFxuICB9LFxuICBjaXR5OiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICB9LFxuICBzdGF0ZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgfSxcbiAgemlwX2NvZGU6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgLy9taW46IFsxMDAwMCwgXCJaaXAgY29kZSB0b28gc2hvcnRcIl0sXG4gICAgLy9tYXg6IDk5OTk5LFxuICB9LFxuICBlbWFpbDoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICBsb3dlcmNhc2U6IHRydWUsXG4gICAgdW5pcXVlOiB0cnVlLFxuICB9LFxuICBnZW5kZXI6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgZW51bTogW1wibWFsZVwiLCBcImZlbWFsZVwiLCBcIlwiXSxcbiAgfSxcbn0pO1xuXG51c2VyU2NoZW1hLnBsdWdpbih0aW1lc3RhbXBzLCBvcHRzKTtcblxuY29uc3QgdXNlck1vZGVsID0gbW9uZ29vc2UubW9kZWwoXCJ1c2VyXCIsIHVzZXJTY2hlbWEpO1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHVzZXJNb2RlbDogdXNlck1vZGVsLFxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "mongoose",
        "require",
        "timestamps",
        "opts",
        "createdAt",
        "updatedAt",
        "userSchema",
        "Schema",
        "user_id",
        "type",
        "Types",
        "ObjectId",
        "user_type",
        "String",
        "first_name",
        "date_of_birth",
        "Date",
        "address",
        "contact_number",
        "Number",
        "validate",
        "validator",
        "v",
        "test",
        "message",
        "city",
        "state",
        "zip_code",
        "email",
        "required",
        "lowercase",
        "unique",
        "gender",
        "enum",
        "plugin",
        "userModel",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,oBAAD,CAA1B;;AACA,MAAME,IAAI,GAAG;AACXC,EAAAA,SAAS,EAAE,YADA;AAEXC,EAAAA,SAAS,EAAE;AAFA,CAAb;AAKA,IAAIC,UAAU,GAAG,IAAIN,QAAQ,CAACO,MAAb,CAAoB;AACnCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAET,QAAQ,CAACO,MAAT,CAAgBG,KAAhB,CAAsBC,QADrB,CAEP;;AAFO,GAD0B;AAKnCC,EAAAA,SAAS,EAAE;AACTH,IAAAA,IAAI,EAAEI;AADG,GALwB;AAQnCC,EAAAA,UAAU,EAAE;AACVL,IAAAA,IAAI,EAAEI;AADI,GARuB;AAWnCE,EAAAA,aAAa,EAAE;AAAEN,IAAAA,IAAI,EAAEO;AAAR,GAXoB;AAYnCC,EAAAA,OAAO,EAAE;AACPR,IAAAA,IAAI,EAAEI;AADC,GAZ0B;AAenCK,EAAAA,cAAc,EAAE;AACdT,IAAAA,IAAI,EAAEU,MADQ;AAEdC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,SAAS,EAAGC,CAAD,IAAO;AAChB,eAAO,QAAQC,IAAR,CAAaD,CAAb,CAAP;AACD,OAHO;AAIRE,MAAAA,OAAO,EAAE;AAJD;AAFI,GAfmB;AAwBnCC,EAAAA,IAAI,EAAE;AACJhB,IAAAA,IAAI,EAAEI;AADF,GAxB6B;AA2BnCa,EAAAA,KAAK,EAAE;AACLjB,IAAAA,IAAI,EAAEI;AADD,GA3B4B;AA8BnCc,EAAAA,QAAQ,EAAE;AACRlB,IAAAA,IAAI,EAAEI,MADE,CAER;AACA;;AAHQ,GA9ByB;AAmCnCe,EAAAA,KAAK,EAAE;AACLnB,IAAAA,IAAI,EAAEI,MADD;AAELgB,IAAAA,QAAQ,EAAE,IAFL;AAGLC,IAAAA,SAAS,EAAE,IAHN;AAILC,IAAAA,MAAM,EAAE;AAJH,GAnC4B;AAyCnCC,EAAAA,MAAM,EAAE;AACNvB,IAAAA,IAAI,EAAEI,MADA;AAENoB,IAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,EAAnB;AAFA;AAzC2B,CAApB,CAAjB;AA+CA3B,UAAU,CAAC4B,MAAX,CAAkBhC,UAAlB,EAA8BC,IAA9B;AAEA,MAAMgC,SAAS,GAAGnC,QAAQ,CAACoC,KAAT,CAAe,MAAf,EAAuB9B,UAAvB,CAAlB;AACA+B,MAAM,CAACC,OAAP,GAAiB;AACfH,EAAAA,SAAS,EAAEA;AADI,CAAjB",
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/models/",
      "sourcesContent": [
        "\"use strict\";\nlet mongoose = require(\"mongoose\");\nconst timestamps = require(\"mongoose-timestamp\");\nconst opts = {\n  createdAt: \"created_at\",\n  updatedAt: \"updated_at\",\n};\n\nlet userSchema = new mongoose.Schema({\n  user_id: {\n    type: mongoose.Schema.Types.ObjectId,\n    //required: true,\n  },\n  user_type: {\n    type: String,\n  },\n  first_name: {\n    type: String,\n  },\n  date_of_birth: { type: Date },\n  address: {\n    type: String,\n  },\n  contact_number: {\n    type: Number,\n    validate: {\n      validator: (v) => {\n        return /d{10}/.test(v);\n      },\n      message: \"{VALUE} is not a valid 10 digit number!\",\n    },\n  },\n  city: {\n    type: String,\n  },\n  state: {\n    type: String,\n  },\n  zip_code: {\n    type: String,\n    //min: [10000, \"Zip code too short\"],\n    //max: 99999,\n  },\n  email: {\n    type: String,\n    required: true,\n    lowercase: true,\n    unique: true,\n  },\n  gender: {\n    type: String,\n    enum: [\"male\", \"female\", \"\"],\n  },\n});\n\nuserSchema.plugin(timestamps, opts);\n\nconst userModel = mongoose.model(\"user\", userSchema);\nmodule.exports = {\n  userModel: userModel,\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1634921079588
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/aishwarya.gaud/Documents/wrk/test/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"filename\":\"/home/aishwarya.gaud/Documents/wrk/test/src/database.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/aishwarya.gaud/Documents/wrk/test",
      "filename": "/home/aishwarya.gaud/Documents/wrk/test/src/database.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/aishwarya.gaud/Documents/wrk/test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/aishwarya.gaud/Documents/wrk/test/src/database.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/aishwarya.gaud/Documents/wrk/test/src/database.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/src/",
        "sourceFileName": "database.js"
      }
    },
    "ast": null,
    "code": "let mongoose = require(\"mongoose\");\n\nconst env = process.env.NODE_ENV || \"development\";\n\nconst config = require(__dirname + \"/../config/config.js\")[env];\n\nlet mongoURI;\n\nif (config.use_env_variable) {\n  mongoURI = process.env[config.use_env_variable];\n} else {\n  mongoURI = \"mongodb://\" + config.username + \":\" + config.password + \"@\" + config.host + \":\" + config.port + \"/\" + config.database + \"?authSource=admin\" + \"&socketTimeoutMS=1200000&connectTimeoutMS=1200000\";\n}\n\nclass Database {\n  constructor() {\n    this._connect();\n  }\n\n  _connect() {\n    mongoose.connect(mongoURI, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true\n    }).then(() => {\n      console.log(\"Database connection successful\");\n    }).catch(err => {\n      console.error(\"Database connection error :\", err);\n    });\n  }\n\n}\n\nmodule.exports = new Database();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsImVudiIsInByb2Nlc3MiLCJOT0RFX0VOViIsImNvbmZpZyIsIl9fZGlybmFtZSIsIm1vbmdvVVJJIiwidXNlX2Vudl92YXJpYWJsZSIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJob3N0IiwicG9ydCIsImRhdGFiYXNlIiwiRGF0YWJhc2UiLCJjb25zdHJ1Y3RvciIsIl9jb25uZWN0IiwiY29ubmVjdCIsInVzZU5ld1VybFBhcnNlciIsInVzZVVuaWZpZWRUb3BvbG9neSIsInRoZW4iLCJjb25zb2xlIiwibG9nIiwiY2F0Y2giLCJlcnIiLCJlcnJvciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7O0FBQ0EsTUFBTUMsR0FBRyxHQUFHQyxPQUFPLENBQUNELEdBQVIsQ0FBWUUsUUFBWixJQUF3QixhQUFwQzs7QUFDQSxNQUFNQyxNQUFNLEdBQUdKLE9BQU8sQ0FBQ0ssU0FBUyxHQUFHLHNCQUFiLENBQVAsQ0FBNENKLEdBQTVDLENBQWY7O0FBRUEsSUFBSUssUUFBSjs7QUFDQSxJQUFJRixNQUFNLENBQUNHLGdCQUFYLEVBQTZCO0FBQzNCRCxFQUFBQSxRQUFRLEdBQUdKLE9BQU8sQ0FBQ0QsR0FBUixDQUFZRyxNQUFNLENBQUNHLGdCQUFuQixDQUFYO0FBQ0QsQ0FGRCxNQUVPO0FBQ0xELEVBQUFBLFFBQVEsR0FDTixlQUNBRixNQUFNLENBQUNJLFFBRFAsR0FFQSxHQUZBLEdBR0FKLE1BQU0sQ0FBQ0ssUUFIUCxHQUlBLEdBSkEsR0FLQUwsTUFBTSxDQUFDTSxJQUxQLEdBTUEsR0FOQSxHQU9BTixNQUFNLENBQUNPLElBUFAsR0FRQSxHQVJBLEdBU0FQLE1BQU0sQ0FBQ1EsUUFUUCxHQVVBLG1CQVZBLEdBV0EsbURBWkY7QUFhRDs7QUFFRCxNQUFNQyxRQUFOLENBQWU7QUFDYkMsRUFBQUEsV0FBVyxHQUFHO0FBQ1osU0FBS0MsUUFBTDtBQUNEOztBQUVEQSxFQUFBQSxRQUFRLEdBQUc7QUFDVGhCLElBQUFBLFFBQVEsQ0FDTGlCLE9BREgsQ0FDV1YsUUFEWCxFQUNxQjtBQUNqQlcsTUFBQUEsZUFBZSxFQUFFLElBREE7QUFFakJDLE1BQUFBLGtCQUFrQixFQUFFO0FBRkgsS0FEckIsRUFLR0MsSUFMSCxDQUtRLE1BQU07QUFDVkMsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksZ0NBQVo7QUFDRCxLQVBILEVBUUdDLEtBUkgsQ0FRVUMsR0FBRCxJQUFTO0FBQ2RILE1BQUFBLE9BQU8sQ0FBQ0ksS0FBUixDQUFjLDZCQUFkLEVBQTZDRCxHQUE3QztBQUNELEtBVkg7QUFXRDs7QUFqQlk7O0FBb0JmRSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsSUFBSWIsUUFBSixFQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9haXNod2FyeWEuZ2F1ZC9Eb2N1bWVudHMvd3JrL3Rlc3Qvc3JjLyIsInNvdXJjZXNDb250ZW50IjpbImxldCBtb25nb29zZSA9IHJlcXVpcmUoXCJtb25nb29zZVwiKTtcbmNvbnN0IGVudiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WIHx8IFwiZGV2ZWxvcG1lbnRcIjtcbmNvbnN0IGNvbmZpZyA9IHJlcXVpcmUoX19kaXJuYW1lICsgXCIvLi4vY29uZmlnL2NvbmZpZy5qc1wiKVtlbnZdO1xuXG5sZXQgbW9uZ29VUkk7XG5pZiAoY29uZmlnLnVzZV9lbnZfdmFyaWFibGUpIHtcbiAgbW9uZ29VUkkgPSBwcm9jZXNzLmVudltjb25maWcudXNlX2Vudl92YXJpYWJsZV07XG59IGVsc2Uge1xuICBtb25nb1VSSSA9XG4gICAgXCJtb25nb2RiOi8vXCIgK1xuICAgIGNvbmZpZy51c2VybmFtZSArXG4gICAgXCI6XCIgK1xuICAgIGNvbmZpZy5wYXNzd29yZCArXG4gICAgXCJAXCIgK1xuICAgIGNvbmZpZy5ob3N0ICtcbiAgICBcIjpcIiArXG4gICAgY29uZmlnLnBvcnQgK1xuICAgIFwiL1wiICtcbiAgICBjb25maWcuZGF0YWJhc2UgK1xuICAgIFwiP2F1dGhTb3VyY2U9YWRtaW5cIiArXG4gICAgXCImc29ja2V0VGltZW91dE1TPTEyMDAwMDAmY29ubmVjdFRpbWVvdXRNUz0xMjAwMDAwXCI7XG59XG5cbmNsYXNzIERhdGFiYXNlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5fY29ubmVjdCgpO1xuICB9XG5cbiAgX2Nvbm5lY3QoKSB7XG4gICAgbW9uZ29vc2VcbiAgICAgIC5jb25uZWN0KG1vbmdvVVJJLCB7XG4gICAgICAgIHVzZU5ld1VybFBhcnNlcjogdHJ1ZSxcbiAgICAgICAgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlLFxuICAgICAgfSlcbiAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coXCJEYXRhYmFzZSBjb25uZWN0aW9uIHN1Y2Nlc3NmdWxcIik7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkRhdGFiYXNlIGNvbm5lY3Rpb24gZXJyb3IgOlwiLCBlcnIpO1xuICAgICAgfSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBuZXcgRGF0YWJhc2UoKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "mongoose",
        "require",
        "env",
        "process",
        "NODE_ENV",
        "config",
        "__dirname",
        "mongoURI",
        "use_env_variable",
        "username",
        "password",
        "host",
        "port",
        "database",
        "Database",
        "constructor",
        "_connect",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "then",
        "console",
        "log",
        "catch",
        "err",
        "error",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;;AACA,MAAMC,MAAM,GAAGJ,OAAO,CAACK,SAAS,GAAG,sBAAb,CAAP,CAA4CJ,GAA5C,CAAf;;AAEA,IAAIK,QAAJ;;AACA,IAAIF,MAAM,CAACG,gBAAX,EAA6B;AAC3BD,EAAAA,QAAQ,GAAGJ,OAAO,CAACD,GAAR,CAAYG,MAAM,CAACG,gBAAnB,CAAX;AACD,CAFD,MAEO;AACLD,EAAAA,QAAQ,GACN,eACAF,MAAM,CAACI,QADP,GAEA,GAFA,GAGAJ,MAAM,CAACK,QAHP,GAIA,GAJA,GAKAL,MAAM,CAACM,IALP,GAMA,GANA,GAOAN,MAAM,CAACO,IAPP,GAQA,GARA,GASAP,MAAM,CAACQ,QATP,GAUA,mBAVA,GAWA,mDAZF;AAaD;;AAED,MAAMC,QAAN,CAAe;AACbC,EAAAA,WAAW,GAAG;AACZ,SAAKC,QAAL;AACD;;AAEDA,EAAAA,QAAQ,GAAG;AACThB,IAAAA,QAAQ,CACLiB,OADH,CACWV,QADX,EACqB;AACjBW,MAAAA,eAAe,EAAE,IADA;AAEjBC,MAAAA,kBAAkB,EAAE;AAFH,KADrB,EAKGC,IALH,CAKQ,MAAM;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACD,KAPH,EAQGC,KARH,CAQUC,GAAD,IAAS;AACdH,MAAAA,OAAO,CAACI,KAAR,CAAc,6BAAd,EAA6CD,GAA7C;AACD,KAVH;AAWD;;AAjBY;;AAoBfE,MAAM,CAACC,OAAP,GAAiB,IAAIb,QAAJ,EAAjB",
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/src/",
      "sourcesContent": [
        "let mongoose = require(\"mongoose\");\nconst env = process.env.NODE_ENV || \"development\";\nconst config = require(__dirname + \"/../config/config.js\")[env];\n\nlet mongoURI;\nif (config.use_env_variable) {\n  mongoURI = process.env[config.use_env_variable];\n} else {\n  mongoURI =\n    \"mongodb://\" +\n    config.username +\n    \":\" +\n    config.password +\n    \"@\" +\n    config.host +\n    \":\" +\n    config.port +\n    \"/\" +\n    config.database +\n    \"?authSource=admin\" +\n    \"&socketTimeoutMS=1200000&connectTimeoutMS=1200000\";\n}\n\nclass Database {\n  constructor() {\n    this._connect();\n  }\n\n  _connect() {\n    mongoose\n      .connect(mongoURI, {\n        useNewUrlParser: true,\n        useUnifiedTopology: true,\n      })\n      .then(() => {\n        console.log(\"Database connection successful\");\n      })\n      .catch((err) => {\n        console.error(\"Database connection error :\", err);\n      });\n  }\n}\n\nmodule.exports = new Database();\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635530557542
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/aishwarya.gaud/Documents/wrk/test/config/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"filename\":\"/home/aishwarya.gaud/Documents/wrk/test/config/config.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/config/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/aishwarya.gaud/Documents/wrk/test",
      "filename": "/home/aishwarya.gaud/Documents/wrk/test/config/config.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/aishwarya.gaud/Documents/wrk/test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/aishwarya.gaud/Documents/wrk/test/config/config.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/aishwarya.gaud/Documents/wrk/test/config/config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/config/",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "require(\"dotenv\").config();\n\nconst dbHost = process.env.DB_HOST;\nconst dbName = process.env.DB_NAME;\nconst dbUsername = process.env.DB_USERNAME;\nconst dbPassword = process.env.DB_PASSWORD;\nconst dbPort = process.env.DB_PORT || 5432;\nmodule.exports = {\n  development: {\n    username: dbUsername,\n    password: dbPassword,\n    database: dbName,\n    host: dbHost,\n    port: dbPort,\n    dialect: \"postgres\"\n  },\n  test: {\n    username: dbUsername,\n    password: dbPassword,\n    database: \"youtube_app_test\",\n    host: dbHost,\n    port: dbPort,\n    dialect: \"postgres\"\n  },\n  production: {\n    use_env_variable: \"DATABASE_URL\",\n    username: dbUsername,\n    password: dbPassword,\n    database: dbName,\n    host: dbHost,\n    port: dbPort,\n    dialect: \"postgres\"\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiY29uZmlnIiwiZGJIb3N0IiwicHJvY2VzcyIsImVudiIsIkRCX0hPU1QiLCJkYk5hbWUiLCJEQl9OQU1FIiwiZGJVc2VybmFtZSIsIkRCX1VTRVJOQU1FIiwiZGJQYXNzd29yZCIsIkRCX1BBU1NXT1JEIiwiZGJQb3J0IiwiREJfUE9SVCIsIm1vZHVsZSIsImV4cG9ydHMiLCJkZXZlbG9wbWVudCIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJkYXRhYmFzZSIsImhvc3QiLCJwb3J0IiwiZGlhbGVjdCIsInRlc3QiLCJwcm9kdWN0aW9uIiwidXNlX2Vudl92YXJpYWJsZSJdLCJtYXBwaW5ncyI6IkFBQUFBLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JDLE1BQWxCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLE9BQTNCO0FBQ0EsTUFBTUMsTUFBTSxHQUFHSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUcsT0FBM0I7QUFDQSxNQUFNQyxVQUFVLEdBQUdMLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSyxXQUEvQjtBQUNBLE1BQU1DLFVBQVUsR0FBR1AsT0FBTyxDQUFDQyxHQUFSLENBQVlPLFdBQS9CO0FBQ0EsTUFBTUMsTUFBTSxHQUFHVCxPQUFPLENBQUNDLEdBQVIsQ0FBWVMsT0FBWixJQUF1QixJQUF0QztBQUNBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZkMsRUFBQUEsV0FBVyxFQUFFO0FBQ1hDLElBQUFBLFFBQVEsRUFBRVQsVUFEQztBQUVYVSxJQUFBQSxRQUFRLEVBQUVSLFVBRkM7QUFHWFMsSUFBQUEsUUFBUSxFQUFFYixNQUhDO0FBSVhjLElBQUFBLElBQUksRUFBRWxCLE1BSks7QUFLWG1CLElBQUFBLElBQUksRUFBRVQsTUFMSztBQU1YVSxJQUFBQSxPQUFPLEVBQUU7QUFORSxHQURFO0FBU2ZDLEVBQUFBLElBQUksRUFBRTtBQUNKTixJQUFBQSxRQUFRLEVBQUVULFVBRE47QUFFSlUsSUFBQUEsUUFBUSxFQUFFUixVQUZOO0FBR0pTLElBQUFBLFFBQVEsRUFBRSxrQkFITjtBQUlKQyxJQUFBQSxJQUFJLEVBQUVsQixNQUpGO0FBS0ptQixJQUFBQSxJQUFJLEVBQUVULE1BTEY7QUFNSlUsSUFBQUEsT0FBTyxFQUFFO0FBTkwsR0FUUztBQWlCZkUsRUFBQUEsVUFBVSxFQUFFO0FBQ1ZDLElBQUFBLGdCQUFnQixFQUFFLGNBRFI7QUFFVlIsSUFBQUEsUUFBUSxFQUFFVCxVQUZBO0FBR1ZVLElBQUFBLFFBQVEsRUFBRVIsVUFIQTtBQUlWUyxJQUFBQSxRQUFRLEVBQUViLE1BSkE7QUFLVmMsSUFBQUEsSUFBSSxFQUFFbEIsTUFMSTtBQU1WbUIsSUFBQUEsSUFBSSxFQUFFVCxNQU5JO0FBT1ZVLElBQUFBLE9BQU8sRUFBRTtBQVBDO0FBakJHLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2Fpc2h3YXJ5YS5nYXVkL0RvY3VtZW50cy93cmsvdGVzdC9jb25maWcvIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZShcImRvdGVudlwiKS5jb25maWcoKTtcbmNvbnN0IGRiSG9zdCA9IHByb2Nlc3MuZW52LkRCX0hPU1Q7XG5jb25zdCBkYk5hbWUgPSBwcm9jZXNzLmVudi5EQl9OQU1FO1xuY29uc3QgZGJVc2VybmFtZSA9IHByb2Nlc3MuZW52LkRCX1VTRVJOQU1FO1xuY29uc3QgZGJQYXNzd29yZCA9IHByb2Nlc3MuZW52LkRCX1BBU1NXT1JEO1xuY29uc3QgZGJQb3J0ID0gcHJvY2Vzcy5lbnYuREJfUE9SVCB8fCA1NDMyO1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGRldmVsb3BtZW50OiB7XG4gICAgdXNlcm5hbWU6IGRiVXNlcm5hbWUsXG4gICAgcGFzc3dvcmQ6IGRiUGFzc3dvcmQsXG4gICAgZGF0YWJhc2U6IGRiTmFtZSxcbiAgICBob3N0OiBkYkhvc3QsXG4gICAgcG9ydDogZGJQb3J0LFxuICAgIGRpYWxlY3Q6IFwicG9zdGdyZXNcIixcbiAgfSxcbiAgdGVzdDoge1xuICAgIHVzZXJuYW1lOiBkYlVzZXJuYW1lLFxuICAgIHBhc3N3b3JkOiBkYlBhc3N3b3JkLFxuICAgIGRhdGFiYXNlOiBcInlvdXR1YmVfYXBwX3Rlc3RcIixcbiAgICBob3N0OiBkYkhvc3QsXG4gICAgcG9ydDogZGJQb3J0LFxuICAgIGRpYWxlY3Q6IFwicG9zdGdyZXNcIixcbiAgfSxcbiAgcHJvZHVjdGlvbjoge1xuICAgIHVzZV9lbnZfdmFyaWFibGU6IFwiREFUQUJBU0VfVVJMXCIsXG4gICAgdXNlcm5hbWU6IGRiVXNlcm5hbWUsXG4gICAgcGFzc3dvcmQ6IGRiUGFzc3dvcmQsXG4gICAgZGF0YWJhc2U6IGRiTmFtZSxcbiAgICBob3N0OiBkYkhvc3QsXG4gICAgcG9ydDogZGJQb3J0LFxuICAgIGRpYWxlY3Q6IFwicG9zdGdyZXNcIixcbiAgfSxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "require",
        "config",
        "dbHost",
        "process",
        "env",
        "DB_HOST",
        "dbName",
        "DB_NAME",
        "dbUsername",
        "DB_USERNAME",
        "dbPassword",
        "DB_PASSWORD",
        "dbPort",
        "DB_PORT",
        "module",
        "exports",
        "development",
        "username",
        "password",
        "database",
        "host",
        "port",
        "dialect",
        "test",
        "production",
        "use_env_variable"
      ],
      "mappings": "AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,OAA3B;AACA,MAAMC,MAAM,GAAGH,OAAO,CAACC,GAAR,CAAYG,OAA3B;AACA,MAAMC,UAAU,GAAGL,OAAO,CAACC,GAAR,CAAYK,WAA/B;AACA,MAAMC,UAAU,GAAGP,OAAO,CAACC,GAAR,CAAYO,WAA/B;AACA,MAAMC,MAAM,GAAGT,OAAO,CAACC,GAAR,CAAYS,OAAZ,IAAuB,IAAtC;AACAC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,WAAW,EAAE;AACXC,IAAAA,QAAQ,EAAET,UADC;AAEXU,IAAAA,QAAQ,EAAER,UAFC;AAGXS,IAAAA,QAAQ,EAAEb,MAHC;AAIXc,IAAAA,IAAI,EAAElB,MAJK;AAKXmB,IAAAA,IAAI,EAAET,MALK;AAMXU,IAAAA,OAAO,EAAE;AANE,GADE;AASfC,EAAAA,IAAI,EAAE;AACJN,IAAAA,QAAQ,EAAET,UADN;AAEJU,IAAAA,QAAQ,EAAER,UAFN;AAGJS,IAAAA,QAAQ,EAAE,kBAHN;AAIJC,IAAAA,IAAI,EAAElB,MAJF;AAKJmB,IAAAA,IAAI,EAAET,MALF;AAMJU,IAAAA,OAAO,EAAE;AANL,GATS;AAiBfE,EAAAA,UAAU,EAAE;AACVC,IAAAA,gBAAgB,EAAE,cADR;AAEVR,IAAAA,QAAQ,EAAET,UAFA;AAGVU,IAAAA,QAAQ,EAAER,UAHA;AAIVS,IAAAA,QAAQ,EAAEb,MAJA;AAKVc,IAAAA,IAAI,EAAElB,MALI;AAMVmB,IAAAA,IAAI,EAAET,MANI;AAOVU,IAAAA,OAAO,EAAE;AAPC;AAjBG,CAAjB",
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/config/",
      "sourcesContent": [
        "require(\"dotenv\").config();\nconst dbHost = process.env.DB_HOST;\nconst dbName = process.env.DB_NAME;\nconst dbUsername = process.env.DB_USERNAME;\nconst dbPassword = process.env.DB_PASSWORD;\nconst dbPort = process.env.DB_PORT || 5432;\nmodule.exports = {\n  development: {\n    username: dbUsername,\n    password: dbPassword,\n    database: dbName,\n    host: dbHost,\n    port: dbPort,\n    dialect: \"postgres\",\n  },\n  test: {\n    username: dbUsername,\n    password: dbPassword,\n    database: \"youtube_app_test\",\n    host: dbHost,\n    port: dbPort,\n    dialect: \"postgres\",\n  },\n  production: {\n    use_env_variable: \"DATABASE_URL\",\n    username: dbUsername,\n    password: dbPassword,\n    database: dbName,\n    host: dbHost,\n    port: dbPort,\n    dialect: \"postgres\",\n  },\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1630139320000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/aishwarya.gaud/Documents/wrk/test/models/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"filename\":\"/home/aishwarya.gaud/Documents/wrk/test/models/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/models/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/aishwarya.gaud/Documents/wrk/test",
      "filename": "/home/aishwarya.gaud/Documents/wrk/test/models/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/aishwarya.gaud/Documents/wrk/test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/aishwarya.gaud/Documents/wrk/test/models/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/aishwarya.gaud/Documents/wrk/test/models/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/models/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nconst fs = require(\"fs\");\n\nconst path = require(\"path\");\n\nconst basename = path.basename(__filename);\nconst db = {};\nconsole.log(\"Loading files...\");\nfs.readdirSync(__dirname).filter(file => {\n  return file.indexOf(\".\") !== 0 && file !== basename && file.slice(-3) === \".js\";\n}).forEach(file => {\n  const model = require(path.join(__dirname, file));\n});\nmodule.exports = db;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsInBhdGgiLCJiYXNlbmFtZSIsIl9fZmlsZW5hbWUiLCJkYiIsImNvbnNvbGUiLCJsb2ciLCJyZWFkZGlyU3luYyIsIl9fZGlybmFtZSIsImZpbHRlciIsImZpbGUiLCJpbmRleE9mIiwic2xpY2UiLCJmb3JFYWNoIiwibW9kZWwiLCJqb2luIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0EsTUFBTUEsRUFBRSxHQUFHQyxPQUFPLENBQUMsSUFBRCxDQUFsQjs7QUFDQSxNQUFNQyxJQUFJLEdBQUdELE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLE1BQU1FLFFBQVEsR0FBR0QsSUFBSSxDQUFDQyxRQUFMLENBQWNDLFVBQWQsQ0FBakI7QUFDQSxNQUFNQyxFQUFFLEdBQUcsRUFBWDtBQUVBQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxrQkFBWjtBQUNBUCxFQUFFLENBQUNRLFdBQUgsQ0FBZUMsU0FBZixFQUNHQyxNQURILENBQ1dDLElBQUQsSUFBVTtBQUNoQixTQUNFQSxJQUFJLENBQUNDLE9BQUwsQ0FBYSxHQUFiLE1BQXNCLENBQXRCLElBQTJCRCxJQUFJLEtBQUtSLFFBQXBDLElBQWdEUSxJQUFJLENBQUNFLEtBQUwsQ0FBVyxDQUFDLENBQVosTUFBbUIsS0FEckU7QUFHRCxDQUxILEVBTUdDLE9BTkgsQ0FNWUgsSUFBRCxJQUFVO0FBQ2pCLFFBQU1JLEtBQUssR0FBR2QsT0FBTyxDQUFDQyxJQUFJLENBQUNjLElBQUwsQ0FBVVAsU0FBVixFQUFxQkUsSUFBckIsQ0FBRCxDQUFyQjtBQUNELENBUkg7QUFVQU0sTUFBTSxDQUFDQyxPQUFQLEdBQWlCYixFQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9haXNod2FyeWEuZ2F1ZC9Eb2N1bWVudHMvd3JrL3Rlc3QvbW9kZWxzLyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuY29uc3QgZnMgPSByZXF1aXJlKFwiZnNcIik7XG5jb25zdCBwYXRoID0gcmVxdWlyZShcInBhdGhcIik7XG5jb25zdCBiYXNlbmFtZSA9IHBhdGguYmFzZW5hbWUoX19maWxlbmFtZSk7XG5jb25zdCBkYiA9IHt9O1xuXG5jb25zb2xlLmxvZyhcIkxvYWRpbmcgZmlsZXMuLi5cIik7XG5mcy5yZWFkZGlyU3luYyhfX2Rpcm5hbWUpXG4gIC5maWx0ZXIoKGZpbGUpID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgZmlsZS5pbmRleE9mKFwiLlwiKSAhPT0gMCAmJiBmaWxlICE9PSBiYXNlbmFtZSAmJiBmaWxlLnNsaWNlKC0zKSA9PT0gXCIuanNcIlxuICAgICk7XG4gIH0pXG4gIC5mb3JFYWNoKChmaWxlKSA9PiB7XG4gICAgY29uc3QgbW9kZWwgPSByZXF1aXJlKHBhdGguam9pbihfX2Rpcm5hbWUsIGZpbGUpKTtcbiAgfSk7XG5cbm1vZHVsZS5leHBvcnRzID0gZGI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "fs",
        "require",
        "path",
        "basename",
        "__filename",
        "db",
        "console",
        "log",
        "readdirSync",
        "__dirname",
        "filter",
        "file",
        "indexOf",
        "slice",
        "forEach",
        "model",
        "join",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AACA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,QAAQ,GAAGD,IAAI,CAACC,QAAL,CAAcC,UAAd,CAAjB;AACA,MAAMC,EAAE,GAAG,EAAX;AAEAC,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAP,EAAE,CAACQ,WAAH,CAAeC,SAAf,EACGC,MADH,CACWC,IAAD,IAAU;AAChB,SACEA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAsB,CAAtB,IAA2BD,IAAI,KAAKR,QAApC,IAAgDQ,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KADrE;AAGD,CALH,EAMGC,OANH,CAMYH,IAAD,IAAU;AACjB,QAAMI,KAAK,GAAGd,OAAO,CAACC,IAAI,CAACc,IAAL,CAAUP,SAAV,EAAqBE,IAArB,CAAD,CAArB;AACD,CARH;AAUAM,MAAM,CAACC,OAAP,GAAiBb,EAAjB",
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/models/",
      "sourcesContent": [
        "\"use strict\";\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst basename = path.basename(__filename);\nconst db = {};\n\nconsole.log(\"Loading files...\");\nfs.readdirSync(__dirname)\n  .filter((file) => {\n    return (\n      file.indexOf(\".\") !== 0 && file !== basename && file.slice(-3) === \".js\"\n    );\n  })\n  .forEach((file) => {\n    const model = require(path.join(__dirname, file));\n  });\n\nmodule.exports = db;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1630164875000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/aishwarya.gaud/Documents/wrk/test/models/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"filename\":\"/home/aishwarya.gaud/Documents/wrk/test/models/job.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/aishwarya.gaud/Documents/wrk/test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/models/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/aishwarya.gaud/Documents/wrk/test",
      "filename": "/home/aishwarya.gaud/Documents/wrk/test/models/job.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/aishwarya.gaud/Documents/wrk/test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/aishwarya.gaud/Documents/wrk/test/models/job.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/aishwarya.gaud/Documents/wrk/test/models/job.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/models/",
        "sourceFileName": "job.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nlet mongoose = require(\"mongoose\");\n\nlet JobSchema = new mongoose.Schema({\n  status: {\n    type: String,\n    enum: [\"started\", \"cancelled\", \"done\"]\n  },\n  url: {\n    type: String,\n    required: true\n  },\n  fileLocation: {\n    type: String\n  }\n});\nconst JobModel = mongoose.model(\"Job\", JobSchema);\nmodule.exports = {\n  JobModel: JobModel\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpvYi5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJKb2JTY2hlbWEiLCJTY2hlbWEiLCJzdGF0dXMiLCJ0eXBlIiwiU3RyaW5nIiwiZW51bSIsInVybCIsInJlcXVpcmVkIiwiZmlsZUxvY2F0aW9uIiwiSm9iTW9kZWwiLCJtb2RlbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBLElBQUlBLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7O0FBQ0EsSUFBSUMsU0FBUyxHQUFHLElBQUlGLFFBQVEsQ0FBQ0csTUFBYixDQUFvQjtBQUNsQ0MsRUFBQUEsTUFBTSxFQUFFO0FBQ05DLElBQUFBLElBQUksRUFBRUMsTUFEQTtBQUVOQyxJQUFBQSxJQUFJLEVBQUUsQ0FBQyxTQUFELEVBQVksV0FBWixFQUF5QixNQUF6QjtBQUZBLEdBRDBCO0FBS2xDQyxFQUFBQSxHQUFHLEVBQUU7QUFDSEgsSUFBQUEsSUFBSSxFQUFFQyxNQURIO0FBRUhHLElBQUFBLFFBQVEsRUFBRTtBQUZQLEdBTDZCO0FBU2xDQyxFQUFBQSxZQUFZLEVBQUU7QUFDWkwsSUFBQUEsSUFBSSxFQUFFQztBQURNO0FBVG9CLENBQXBCLENBQWhCO0FBY0EsTUFBTUssUUFBUSxHQUFHWCxRQUFRLENBQUNZLEtBQVQsQ0FBZSxLQUFmLEVBQXNCVixTQUF0QixDQUFqQjtBQUNBVyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZkgsRUFBQUEsUUFBUSxFQUFFQTtBQURLLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2Fpc2h3YXJ5YS5nYXVkL0RvY3VtZW50cy93cmsvdGVzdC9tb2RlbHMvIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5sZXQgbW9uZ29vc2UgPSByZXF1aXJlKFwibW9uZ29vc2VcIik7XG5sZXQgSm9iU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gIHN0YXR1czoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICBlbnVtOiBbXCJzdGFydGVkXCIsIFwiY2FuY2VsbGVkXCIsIFwiZG9uZVwiXSxcbiAgfSxcbiAgdXJsOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiB0cnVlLFxuICB9LFxuICBmaWxlTG9jYXRpb246IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gIH0sXG59KTtcblxuY29uc3QgSm9iTW9kZWwgPSBtb25nb29zZS5tb2RlbChcIkpvYlwiLCBKb2JTY2hlbWEpO1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIEpvYk1vZGVsOiBKb2JNb2RlbCxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "job.js"
      ],
      "names": [
        "mongoose",
        "require",
        "JobSchema",
        "Schema",
        "status",
        "type",
        "String",
        "enum",
        "url",
        "required",
        "fileLocation",
        "JobModel",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIC,SAAS,GAAG,IAAIF,QAAQ,CAACG,MAAb,CAAoB;AAClCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,IAAI,EAAEC,MADA;AAENC,IAAAA,IAAI,EAAE,CAAC,SAAD,EAAY,WAAZ,EAAyB,MAAzB;AAFA,GAD0B;AAKlCC,EAAAA,GAAG,EAAE;AACHH,IAAAA,IAAI,EAAEC,MADH;AAEHG,IAAAA,QAAQ,EAAE;AAFP,GAL6B;AASlCC,EAAAA,YAAY,EAAE;AACZL,IAAAA,IAAI,EAAEC;AADM;AAToB,CAApB,CAAhB;AAcA,MAAMK,QAAQ,GAAGX,QAAQ,CAACY,KAAT,CAAe,KAAf,EAAsBV,SAAtB,CAAjB;AACAW,MAAM,CAACC,OAAP,GAAiB;AACfH,EAAAA,QAAQ,EAAEA;AADK,CAAjB",
      "sourceRoot": "/home/aishwarya.gaud/Documents/wrk/test/models/",
      "sourcesContent": [
        "\"use strict\";\nlet mongoose = require(\"mongoose\");\nlet JobSchema = new mongoose.Schema({\n  status: {\n    type: String,\n    enum: [\"started\", \"cancelled\", \"done\"],\n  },\n  url: {\n    type: String,\n    required: true,\n  },\n  fileLocation: {\n    type: String,\n  },\n});\n\nconst JobModel = mongoose.model(\"Job\", JobSchema);\nmodule.exports = {\n  JobModel: JobModel,\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1630167016000
  }
}